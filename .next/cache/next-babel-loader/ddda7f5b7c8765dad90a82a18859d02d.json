{"ast":null,"code":"import { all, takeEvery, call, put, select } from 'redux-saga/effects';\nimport { searchProduct, searchProductError, searchProductSuccess } from './action';\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\n\nfunction getSearchedProductsRequest({\n  searchWord,\n  lang\n}) {\n  return Axios.request({\n    method: 'post',\n    url: '/api/product/homePage/search',\n    data: {\n      searchWord,\n      lang\n    }\n  });\n}\n\nfunction* workSearchProduct({\n  payload: {\n    searchWord\n  }\n}) {\n  const lang = select(selectLang);\n\n  try {\n    const {\n      data: {\n        result\n      }\n    } = yield call(getSearchedProductsRequest, {\n      searchWord,\n      lang\n    });\n    yield put(searchProductSuccess({\n      data: result\n    }));\n  } catch (error) {\n    yield put(searchProductError());\n  }\n}\n\nfunction* watchSearchProduct() {\n  yield takeEvery(searchProduct, workSearchProduct);\n}\n\nexport default function* () {\n  yield all([watchSearchProduct()]);\n}","map":null,"metadata":{},"sourceType":"module"}