{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workSearchProduct),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSearchProduct),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(_callee);\n\nimport { all, takeEvery, call, put } from 'redux-saga/effects';\nimport { searchProduct, searchProductError, searchProductSuccess } from './action';\nimport Axios from '../services/Axios';\n\nfunction getSearchedProductsRequest(searchWord) {\n  return Axios.request({\n    method: 'post',\n    url: '/api/product/homePage/search',\n    data: {\n      searchWord: searchWord\n    }\n  });\n}\n\nfunction workSearchProduct(_ref) {\n  var searchWord, _ref2, result;\n\n  return _regeneratorRuntime.wrap(function workSearchProduct$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          searchWord = _ref.payload.searchWord;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getSearchedProductsRequest, searchWord);\n\n        case 4:\n          _ref2 = _context.sent;\n          result = _ref2.data.result;\n          _context.next = 8;\n          return put(searchProductSuccess({\n            data: result\n          }));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(searchProductError());\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\n\nfunction watchSearchProduct() {\n  return _regeneratorRuntime.wrap(function watchSearchProduct$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(searchProduct, workSearchProduct);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchSearchProduct()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"module"}