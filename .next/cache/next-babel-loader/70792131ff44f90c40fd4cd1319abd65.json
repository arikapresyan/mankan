{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { handleActions } from 'redux-actions';\nimport { APILoading, APIError, APISuccess, APIClear } from './action';\nvar initialState = {\n  status: null,\n  data: null,\n  isVisible: false,\n  loading: false,\n  responseText: '',\n  hasError: false,\n  success: null\n};\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, APILoading, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loading: true\n  });\n}), _defineProperty(_handleActions, APIError, function (state, _ref) {\n  var _ref$payload = _ref.payload,\n      responseText = _ref$payload.responseText,\n      status = _ref$payload.status;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    status: status,\n    isVisible: true,\n    loading: false,\n    responseText: responseText,\n    hasError: true\n  });\n}), _defineProperty(_handleActions, APISuccess, function (state, _ref2) {\n  var _ref2$payload = _ref2.payload,\n      responseText = _ref2$payload.responseText,\n      status = _ref2$payload.status;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loading: false,\n    responseText: responseText,\n    status: status,\n    isVisible: true,\n    hasError: false,\n    success: true\n  });\n}), _defineProperty(_handleActions, APIClear, function () {\n  return initialState;\n}), _handleActions), initialState);","map":{"version":3,"sources":["/var/www/mankan-front/store/global-APIS/reducer.js"],"names":["handleActions","APILoading","APIError","APISuccess","APIClear","initialState","status","data","isVisible","loading","responseText","hasError","success","state","payload"],"mappings":";;;;;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SACEC,UADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,QAJF,QAKO,UALP;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,OAAO,EAAE,KAJU;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,QAAQ,EAAE,KANS;AAOnBC,EAAAA,OAAO,EAAE;AAPU,CAArB;AAWA,eAAeZ,aAAa,uDACzBC,UADyB,EACZ,UACZY,KADY;AAAA,yCAGTA,KAHS;AAGFJ,IAAAA,OAAO,EAAE;AAHP;AAAA,CADY,mCAOzBP,QAPyB,EAOd,UAACW,KAAD;AAAA,0BAAUC,OAAV;AAAA,MAAqBJ,YAArB,gBAAqBA,YAArB;AAAA,MAAmCJ,MAAnC,gBAAmCA,MAAnC;AAAA,yCACPO,KADO;AAEVP,IAAAA,MAAM,EAANA,MAFU;AAGVE,IAAAA,SAAS,EAAE,IAHD;AAIVC,IAAAA,OAAO,EAAE,KAJC;AAKVC,IAAAA,YAAY,EAAZA,YALU;AAMVC,IAAAA,QAAQ,EAAE;AANA;AAAA,CAPc,mCAezBR,UAfyB,EAeZ,UAACU,KAAD;AAAA,4BAAUC,OAAV;AAAA,MAAqBJ,YAArB,iBAAqBA,YAArB;AAAA,MAAmCJ,MAAnC,iBAAmCA,MAAnC;AAAA,yCACTO,KADS;AAEZJ,IAAAA,OAAO,EAAE,KAFG;AAGZC,IAAAA,YAAY,EAAZA,YAHY;AAIZJ,IAAAA,MAAM,EAANA,MAJY;AAKZE,IAAAA,SAAS,EAAE,IALC;AAMZG,IAAAA,QAAQ,EAAE,KANE;AAOZC,IAAAA,OAAO,EAAE;AAPG;AAAA,CAfY,mCAwBzBR,QAxByB,EAwBd;AAAA,SAAMC,YAAN;AAAA,CAxBc,oBAyBzBA,YAzByB,CAA5B","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport {\n  APILoading,\n  APIError,\n  APISuccess,\n  APIClear,\n} from './action';\n\n\nconst initialState = {\n  status: null,\n  data: null,\n  isVisible: false,\n  loading: false,\n  responseText: '',\n  hasError: false,\n  success: null,\n};\n\n\nexport default handleActions({\n  [APILoading]: (\n    state,\n  ) => ({\n    ...state, loading: true,\n  }),\n\n  [APIError]: (state, { payload: { responseText, status } }) => ({\n    ...state,\n    status,\n    isVisible: true,\n    loading: false,\n    responseText,\n    hasError: true,\n  }),\n  [APISuccess]: (state, { payload: { responseText, status } }) => ({\n    ...state,\n    loading: false,\n    responseText,\n    status,\n    isVisible: true,\n    hasError: false,\n    success: true,\n  }),\n  [APIClear]: () => initialState,\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}