{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-unused-vars */\nimport { takeEvery, call, put, select, all } from '@redux-saga/core/effects';\nimport Axios from '../services/Axios';\nimport { getDataListByPagination, getDataListByPaginationError, getDataListByPaginationSuccess } from './action';\nimport { selectLang } from '../user/reducer';\nconst dataByName = {\n  buyProductList: {\n    url: '/api/user/orders/all',\n    method: 'post'\n  }\n};\n\nasync function getDataListByPaginationRequest({\n  name,\n  page,\n  lang\n}) {\n  const {\n    data: {\n      pages,\n      result: {\n        rows\n      }\n    }\n  } = await Axios.request(_objectSpread(_objectSpread({}, dataByName[name]), {}, {\n    data: {\n      page,\n      offset: 12 * (page - 1),\n      limit: 12,\n      lang\n    }\n  }));\n  return {\n    pages,\n    data: rows\n  };\n}\n\nfunction* workGetDataListByPagination({\n  payload: {\n    name,\n    page\n  }\n}) {\n  try {\n    const lang = yield select(selectLang);\n    const res = yield call(getDataListByPaginationRequest, {\n      name,\n      page: page || 1,\n      lang\n    });\n    yield put(getDataListByPaginationSuccess(_objectSpread(_objectSpread({}, res), {}, {\n      name,\n      page\n    })));\n  } catch (error) {\n    yield put(getDataListByPaginationError({\n      name\n    }));\n  }\n}\n\nfunction* watchGetDataListByPagination() {\n  yield takeEvery(getDataListByPagination, workGetDataListByPagination);\n}\n\nexport default function* () {\n  yield all([watchGetDataListByPagination()]);\n}","map":{"version":3,"sources":["/var/www/mankan-front/store/data-by-pagination/saga.js"],"names":["takeEvery","call","put","select","all","Axios","getDataListByPagination","getDataListByPaginationError","getDataListByPaginationSuccess","selectLang","dataByName","buyProductList","url","method","getDataListByPaginationRequest","name","page","lang","data","pages","result","rows","request","offset","limit","workGetDataListByPagination","payload","res","error","watchGetDataListByPagination"],"mappings":";;;;;;AAAA;AAEA,SACEA,SADF,EACaC,IADb,EACmBC,GADnB,EACwBC,MADxB,EACgCC,GADhC,QAEO,0BAFP;AAGA,OAAOC,KAAP,MAAkB,mBAAlB;AAGA,SACEC,uBADF,EAEEC,4BAFF,EAGEC,8BAHF,QAIO,UAJP;AAKA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,GAAG,EAAE,sBADS;AAEdC,IAAAA,MAAM,EAAE;AAFM;AADC,CAAnB;;AAOA,eAAeC,8BAAf,CAA8C;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAA9C,EAAoE;AAClE,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAjB;AAAR,MAAwC,MAAMhB,KAAK,CAACiB,OAAN,iCAC/CZ,UAAU,CAACK,IAAD,CADqC;AAElDG,IAAAA,IAAI,EAAE;AACJF,MAAAA,IADI;AAEJO,MAAAA,MAAM,EAAE,MAAMP,IAAI,GAAG,CAAb,CAFJ;AAGJQ,MAAAA,KAAK,EAAE,EAHH;AAIJP,MAAAA;AAJI;AAF4C,KAApD;AAUA,SAAO;AAAEE,IAAAA,KAAF;AAASD,IAAAA,IAAI,EAAEG;AAAf,GAAP;AACD;;AAED,UAAUI,2BAAV,CAAsC;AAAEC,EAAAA,OAAO,EAAE;AAAEX,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAX,CAAtC,EAAmE;AACjE,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMd,MAAM,CAACM,UAAD,CAAzB;AACA,UAAMkB,GAAG,GAAG,MAAM1B,IAAI,CAACa,8BAAD,EAAiC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAI,EAAEA,IAAI,IAAI,CAAtB;AAAyBC,MAAAA;AAAzB,KAAjC,CAAtB;AACA,UAAMf,GAAG,CAACM,8BAA8B,iCACnCmB,GADmC;AAC9BZ,MAAAA,IAD8B;AACxBC,MAAAA;AADwB,OAA/B,CAAT;AAGD,GAND,CAME,OAAOY,KAAP,EAAc;AACd,UAAM1B,GAAG,CAACK,4BAA4B,CAAC;AAAEQ,MAAAA;AAAF,KAAD,CAA7B,CAAT;AACD;AACF;;AAGD,UAAUc,4BAAV,GAAyC;AACvC,QAAM7B,SAAS,CAACM,uBAAD,EAA0BmB,2BAA1B,CAAf;AACD;;AAED,eAAe,aAAa;AAC1B,QAAMrB,GAAG,CAAC,CACRyB,4BAA4B,EADpB,CAAD,CAAT;AAGD","sourcesContent":["/* eslint-disable no-unused-vars */\n\nimport {\n  takeEvery, call, put, select, all,\n} from '@redux-saga/core/effects';\nimport Axios from '../services/Axios';\n\n\nimport {\n  getDataListByPagination,\n  getDataListByPaginationError,\n  getDataListByPaginationSuccess,\n} from './action';\nimport { selectLang } from '../user/reducer';\n\nconst dataByName = {\n  buyProductList: {\n    url: '/api/user/orders/all',\n    method: 'post',\n  },\n};\n\nasync function getDataListByPaginationRequest({ name, page, lang }) {\n  const { data: { pages, result: { rows } } } = await Axios.request({\n    ...dataByName[name],\n    data: {\n      page,\n      offset: 12 * (page - 1),\n      limit: 12,\n      lang,\n    },\n  });\n\n  return { pages, data: rows };\n}\n\nfunction* workGetDataListByPagination({ payload: { name, page } }) {\n  try {\n    const lang = yield select(selectLang);\n    const res = yield call(getDataListByPaginationRequest, { name, page: page || 1, lang });\n    yield put(getDataListByPaginationSuccess({\n      ...res, name, page,\n    }));\n  } catch (error) {\n    yield put(getDataListByPaginationError({ name }));\n  }\n}\n\n\nfunction* watchGetDataListByPagination() {\n  yield takeEvery(getDataListByPagination, workGetDataListByPagination);\n}\n\nexport default function* () {\n  yield all([\n    watchGetDataListByPagination(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}