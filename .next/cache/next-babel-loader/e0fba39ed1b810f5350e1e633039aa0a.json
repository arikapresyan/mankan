{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { all, takeEvery, put, select, call, delay } from 'redux-saga/effects';\nimport message from 'antd/lib/message';\nimport { changeCart, changeCartSuccess, changeCartError, cartSetAll, populateCart, sendOrder, sendOrderError, sendOrderSuccess } from './action';\nimport { selectCart } from './reducer';\nimport { changePage, resetChangePage } from '../change-page/action';\nimport { selectAuthorized, selectLang, selectUser } from '../user/reducer';\nimport { setLocalStorageObj, getLocalStorageObj, removeLocalStorageObj } from '../../constants/utils';\nimport Axios from '../services/Axios';\nimport { paymentTypes } from '../../components/modals/confirm-order-modal/components/constants';\n\nfunction* workPopulateCart() {\n  try {\n    const userCart = (_objectSpread({}, yield select(selectUser)).cartList || []).map(({\n      productId,\n      count,\n      battery\n    }) => ({\n      id: productId,\n      count,\n      battery\n    }));\n    const userCartObj = {};\n    userCart.forEach(cart => {\n      userCartObj[cart.id] = {\n        count: cart.count || 1,\n        id: cart.id,\n        status: true,\n        battery: cart.battery\n      };\n    });\n    const cartData = Object.keys(userCartObj).length && userCartObj || getLocalStorageObj('cart') || {};\n    setLocalStorageObj('cart', cartData);\n    yield put(cartSetAll({\n      cart: cartData\n    }));\n  } catch (error) {}\n}\n\nfunction* watchPopulateCart() {\n  yield takeEvery(populateCart, workPopulateCart);\n}\n\nfunction setToWishlistRequest(products) {\n  return Axios.request({\n    method: 'post',\n    url: '/api/user/addWish',\n    data: {\n      products,\n      type: 'cart'\n    }\n  });\n}\n\nfunction removeFromWishlistRequest({\n  toRemove: products,\n  clearBatteryOwners\n}) {\n  const data = _objectSpread({\n    productId: products[0],\n    type: 'cart'\n  }, clearBatteryOwners ? {\n    removeBatteryId: products[0]\n  } : {});\n\n  return Axios.request({\n    method: 'delete',\n    url: '/api/user/removeWish',\n    data\n  });\n}\n\nfunction* workChangeCart({\n  payload: {\n    ids,\n    status,\n    redirect\n  }\n}) {\n  const authorized = yield select(selectAuthorized);\n\n  try {\n    const cart = _objectSpread({}, yield select(selectCart) || {});\n\n    const idsKeys = Object.keys(ids);\n    const toRemove = [];\n    const toAdd = [];\n    let clearBatteryOwners = null;\n    idsKeys.forEach(key => {\n      if (ids[key].status && status) {\n        if (cart[key] && !ids[key].batteryId) {\n          delete cart[key].batteryId;\n        }\n\n        const count = cart[key] && cart[key].count;\n        cart[key] = _objectSpread(_objectSpread({}, cart[key] || {}), ids[key]);\n\n        if (cart[key] && cart[key].type === 'battery' && count) {\n          cart[key].count += count;\n        }\n\n        toAdd.push(cart[key]);\n      } else {\n        const cartKeys = Object.keys(cart);\n        const batteryOwners = [];\n        cartKeys.forEach(cartKey => {\n          if (cart[cartKey].batteryId === ids[key]) {\n            batteryOwners.push(cart[cartKey].batteryId);\n            delete cart[cartKey].batteryId;\n          }\n        });\n\n        if (batteryOwners.length) {\n          clearBatteryOwners = {\n            ids: batteryOwners,\n            id: ids[key]\n          };\n        }\n\n        delete cart[ids[key]];\n        toRemove.push(ids[key]);\n      }\n    });\n\n    if (authorized) {\n      if (toRemove.length) {\n        yield call(removeFromWishlistRequest, {\n          toRemove,\n          clearBatteryOwners\n        });\n      } else {\n        yield call(setToWishlistRequest, toAdd);\n      }\n    }\n\n    setLocalStorageObj('cart', cart);\n    yield put(changeCartSuccess({\n      data: cart,\n      ids\n    }));\n\n    if (redirect === true) {\n      yield put(changePage({\n        route: '/cart'\n      }));\n      yield delay(200);\n      yield put(resetChangePage());\n    }\n  } catch (error) {\n    yield put(changeCartError({\n      ids\n    }));\n  }\n}\n\nfunction* watchChangeCart() {\n  yield takeEvery(changeCart, workChangeCart);\n}\n\nfunction* sendOrderRequest(data, auth) {\n  return yield call(Axios.request, {\n    method: 'post',\n    url: auth ? '/api/user/orders' : '/api/product/createOrder',\n    data\n  });\n}\n\nconst isoLangs = {\n  ARM: 'hy',\n  RU: 'ru',\n  ENG: 'en'\n};\n\nfunction* workSendOrder({\n  payload: {\n    values,\n    messageTexts,\n    promo\n  }\n}) {\n  const {\n    errorText,\n    successText\n  } = messageTexts;\n  const cart = yield select(selectCart);\n  const auth = yield select(selectAuthorized);\n  const lang = yield select(selectLang);\n  const data = {\n    productIds: Object.keys(cart).map(item => cart[item]),\n    deliveryAddress: {\n      street: values.street,\n      building: values.house,\n      entry: values.entry\n    },\n    firstName: values.firstName,\n    lastName: values.lastName,\n    paymentType: paymentTypes[values.method],\n    deliveryTime: values.deliveryPeriodString,\n    phone: values.phone,\n    email: values.email,\n    promoCode: promo,\n    isoLang: isoLangs[lang]\n  };\n\n  try {\n    const res = yield call(sendOrderRequest, data, auth);\n\n    if (paymentTypes[values.method] === paymentTypes[2] || paymentTypes[values.method] === paymentTypes[3]) {\n      removeLocalStorageObj('cart');\n      yield put(sendOrderSuccess());\n      message.success(successText);\n      yield put(changePage({\n        route: '/'\n      }));\n      yield delay(200);\n      yield put(resetChangePage());\n    } else {\n      const {\n        data: {\n          response: {\n            formUrl\n          }\n        }\n      } = res;\n      window.location.href = formUrl;\n    }\n  } catch (e) {\n    message.error(errorText);\n    yield put(sendOrderError());\n  }\n}\n\nfunction* watchSendOrder() {\n  yield takeEvery(sendOrder, workSendOrder);\n}\n\nexport default function* () {\n  yield all([watchChangeCart(), watchPopulateCart(), watchSendOrder()]);\n}","map":{"version":3,"sources":["/var/www/mankan-front/store/cart/saga.js"],"names":["all","takeEvery","put","select","call","delay","message","changeCart","changeCartSuccess","changeCartError","cartSetAll","populateCart","sendOrder","sendOrderError","sendOrderSuccess","selectCart","changePage","resetChangePage","selectAuthorized","selectLang","selectUser","setLocalStorageObj","getLocalStorageObj","removeLocalStorageObj","Axios","paymentTypes","workPopulateCart","userCart","cartList","map","productId","count","battery","id","userCartObj","forEach","cart","status","cartData","Object","keys","length","error","watchPopulateCart","setToWishlistRequest","products","request","method","url","data","type","removeFromWishlistRequest","toRemove","clearBatteryOwners","removeBatteryId","workChangeCart","payload","ids","redirect","authorized","idsKeys","toAdd","key","batteryId","push","cartKeys","batteryOwners","cartKey","route","watchChangeCart","sendOrderRequest","auth","isoLangs","ARM","RU","ENG","workSendOrder","values","messageTexts","promo","errorText","successText","lang","productIds","item","deliveryAddress","street","building","house","entry","firstName","lastName","paymentType","deliveryTime","deliveryPeriodString","phone","email","promoCode","isoLang","res","success","response","formUrl","window","location","href","e","watchSendOrder"],"mappings":"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","sourcesContent":["import {\n  all, takeEvery, put, select, call, delay,\n} from 'redux-saga/effects';\nimport message from 'antd/lib/message';\nimport {\n  changeCart,\n  changeCartSuccess,\n  changeCartError,\n  cartSetAll,\n  populateCart,\n  sendOrder,\n  sendOrderError,\n  sendOrderSuccess,\n} from './action';\nimport { selectCart } from './reducer';\nimport { changePage, resetChangePage } from '../change-page/action';\n\nimport { selectAuthorized, selectLang, selectUser } from '../user/reducer';\nimport { setLocalStorageObj, getLocalStorageObj, removeLocalStorageObj } from '../../constants/utils';\nimport Axios from '../services/Axios';\nimport { paymentTypes } from '../../components/modals/confirm-order-modal/components/constants';\n\n\nfunction* workPopulateCart() {\n  try {\n    const userCart = (({ ...yield select(selectUser) }).cartList\n    || []).map(({ productId, count, battery }) => ({\n      id: productId, count, battery,\n    }));\n    const userCartObj = {};\n    userCart.forEach((cart) => {\n      userCartObj[cart.id] = {\n        count: cart.count || 1, id: cart.id, status: true, battery: cart.battery,\n      };\n    });\n    const cartData = (Object.keys(userCartObj).length && userCartObj) || getLocalStorageObj('cart') || {};\n\n    setLocalStorageObj('cart', cartData);\n    yield put(cartSetAll({ cart: cartData }));\n  } catch (error) {\n  }\n}\n\nfunction* watchPopulateCart() {\n  yield takeEvery(populateCart, workPopulateCart);\n}\n\n\nfunction setToWishlistRequest(products) {\n  return Axios.request({\n    method: 'post',\n    url: '/api/user/addWish',\n    data: {\n      products,\n      type: 'cart',\n    },\n  });\n}\nfunction removeFromWishlistRequest({ toRemove: products, clearBatteryOwners }) {\n  const data = {\n    productId: products[0],\n    type: 'cart',\n    ...(clearBatteryOwners ? { removeBatteryId: products[0] } : {}),\n  };\n\n  return Axios.request({\n    method: 'delete',\n    url: '/api/user/removeWish',\n    data,\n  });\n}\n\nfunction* workChangeCart({ payload: { ids, status, redirect } }) {\n  const authorized = yield select(selectAuthorized);\n  try {\n    const cart = { ...(yield select(selectCart) || {}) };\n\n    const idsKeys = Object.keys(ids);\n    const toRemove = [];\n    const toAdd = [];\n    let clearBatteryOwners = null;\n    idsKeys.forEach((key) => {\n      if (ids[key].status && status) {\n        if (cart[key] && !ids[key].batteryId) {\n          delete cart[key].batteryId;\n        }\n        const count = cart[key] && cart[key].count;\n        cart[key] = { ...(cart[key] || {}), ...ids[key] };\n        if (cart[key] && cart[key].type === 'battery' && count) {\n          cart[key].count += count;\n        }\n        toAdd.push(cart[key]);\n      } else {\n        const cartKeys = Object.keys(cart);\n        const batteryOwners = [];\n\n        cartKeys.forEach((cartKey) => {\n          if (cart[cartKey].batteryId === ids[key]) {\n            batteryOwners.push(cart[cartKey].batteryId);\n            delete cart[cartKey].batteryId;\n          }\n        });\n\n        if (batteryOwners.length) {\n          clearBatteryOwners = {\n            ids: batteryOwners,\n            id: ids[key],\n          };\n        }\n        delete cart[ids[key]];\n        toRemove.push(ids[key]);\n      }\n    });\n\n    if (authorized) {\n      if (toRemove.length) {\n        yield call(removeFromWishlistRequest, { toRemove, clearBatteryOwners });\n      } else {\n        yield call(setToWishlistRequest, toAdd);\n      }\n    }\n    setLocalStorageObj('cart', cart);\n    yield put(changeCartSuccess({ data: cart, ids }));\n    if (redirect === true) {\n      yield put(changePage({ route: '/cart' }));\n      yield delay(200);\n      yield put(resetChangePage());\n    }\n  } catch (error) {\n    yield put(changeCartError({ ids }));\n  }\n}\n\nfunction* watchChangeCart() {\n  yield takeEvery(changeCart, workChangeCart);\n}\n\nfunction* sendOrderRequest(data, auth) {\n  return yield call(Axios.request, {\n    method: 'post',\n    url: auth ? '/api/user/orders' : '/api/product/createOrder',\n    data,\n  });\n}\n\nconst isoLangs = {\n  ARM: 'hy',\n  RU: 'ru',\n  ENG: 'en',\n};\n\nfunction* workSendOrder({ payload: { values, messageTexts, promo } }) {\n  const { errorText, successText } = messageTexts;\n  const cart = yield select(selectCart);\n  const auth = yield select(selectAuthorized);\n\n  const lang = yield select(selectLang);\n\n\n  const data = {\n    productIds: Object.keys(cart).map((item) => cart[item]),\n    deliveryAddress: {\n      street: values.street,\n      building: values.house,\n      entry: values.entry,\n    },\n    firstName: values.firstName,\n    lastName: values.lastName,\n    paymentType: paymentTypes[values.method],\n    deliveryTime: values.deliveryPeriodString,\n    phone: values.phone,\n    email: values.email,\n    promoCode: promo,\n    isoLang: isoLangs[lang],\n  };\n\n  try {\n    const res = yield call(sendOrderRequest, data, auth);\n\n\n    if (paymentTypes[values.method] === paymentTypes[2]\n      || paymentTypes[values.method] === paymentTypes[3]) {\n      removeLocalStorageObj('cart');\n      yield put(sendOrderSuccess());\n      message.success(successText);\n      yield put(changePage({ route: '/' }));\n      yield delay(200);\n      yield put(resetChangePage());\n    } else {\n      const { data: { response: { formUrl } } } = res;\n      window.location.href = formUrl;\n    }\n  } catch (e) {\n    message.error(errorText);\n    yield put(sendOrderError());\n  }\n}\nfunction* watchSendOrder() {\n  yield takeEvery(sendOrder, workSendOrder);\n}\n\nexport default function* () {\n  yield all([\n    watchChangeCart(),\n    watchPopulateCart(),\n    watchSendOrder(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}