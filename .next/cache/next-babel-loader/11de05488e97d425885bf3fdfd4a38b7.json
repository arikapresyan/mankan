{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { getPageData, getPageDataError, getPageDataSuccess, resetPageData } from './action';\nconst initialState = {\n  loading: false,\n  error: false,\n  success: false,\n  data: null,\n  page: null,\n  id: null,\n  helperData: null\n};\nexport default handleActions({\n  [getPageData]: state => ({\n    helperData: state.helperData,\n    id: state.id,\n    page: state.page,\n    loading: true,\n    error: false,\n    success: false,\n    data: null\n  }),\n  [getPageDataSuccess]: (state, {\n    payload: {\n      data,\n      page,\n      id,\n      helperData\n    }\n  }) => ({\n    loading: false,\n    error: false,\n    success: true,\n    data,\n    page,\n    id: id || null,\n    helperData\n  }),\n  [getPageDataError]: () => _objectSpread({}, initialState),\n  [resetPageData]: () => _objectSpread({}, initialState)\n}, initialState);\nexport const selectCurrentPage = ({\n  pageData\n}) => pageData.page;\nexport const selectPageId = ({\n  pageData\n}) => pageData.id;\nexport const selectHelperData = ({\n  pageData\n}) => pageData.helperData;\nexport const selectPageData = ({\n  pageData\n}) => pageData.data;","map":null,"metadata":{},"sourceType":"module"}