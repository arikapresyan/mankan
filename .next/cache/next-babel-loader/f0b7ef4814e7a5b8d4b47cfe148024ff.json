{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workAccompanying),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAccompanying),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(_callee);\n\nimport { put, takeLatest, select, call, all } from '@redux-saga/core/effects';\nimport { getAccompanyingProduct, getAccompanyingProductSuccess, getAccompanyingProductError } from './action';\nimport { selectCart } from '../cart/reducer';\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\n\nfunction getAccompanyingProductRequest(_ref) {\n  var ids = _ref.ids,\n      lang = _ref.lang;\n  return Axios.request({\n    method: 'post',\n    url: '/api/product/escorting',\n    data: {\n      ids: ids,\n      lang: lang\n    }\n  });\n}\n\nfunction workAccompanying() {\n  var ids, lang, _yield$call, escortingProducts;\n\n  return _regeneratorRuntime.wrap(function workAccompanying$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = Object;\n          _context.next = 3;\n          return select(selectCart);\n\n        case 3:\n          _context.t1 = _context.sent;\n          ids = _context.t0.keys.call(_context.t0, _context.t1);\n          _context.next = 7;\n          return select(selectLang);\n\n        case 7:\n          lang = _context.sent;\n          _context.prev = 8;\n\n          if (ids.length) {\n            _context.next = 11;\n            break;\n          }\n\n          throw new Error();\n\n        case 11:\n          _context.next = 13;\n          return call(getAccompanyingProductRequest, {\n            ids: ids,\n            lang: lang\n          });\n\n        case 13:\n          _yield$call = _context.sent;\n          escortingProducts = _yield$call.data.escortingProducts;\n          _context.next = 17;\n          return put(getAccompanyingProductSuccess({\n            data: escortingProducts\n          }));\n\n        case 17:\n          _context.next = 23;\n          break;\n\n        case 19:\n          _context.prev = 19;\n          _context.t2 = _context[\"catch\"](8);\n          _context.next = 23;\n          return put(getAccompanyingProductError());\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[8, 19]]);\n}\n\nfunction watchAccompanying() {\n  return _regeneratorRuntime.wrap(function watchAccompanying$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(getAccompanyingProduct, workAccompanying);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchAccompanying()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"module"}