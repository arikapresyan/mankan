{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workCatalogGet),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchCatalogGet);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { put, takeLatest, select, call, all } from '@redux-saga/core/effects';\nimport Axios from '../services/Axios';\nimport { catalogGet, catalogGetSuccess, catalogGetError } from './action';\nimport { clearFilters, selectCatalogFilters } from '../catalog-filter/reducer';\nimport { selectLang } from '../user/reducer';\nimport { catalogSetFilters } from '../catalog-filter/action'; // eslint-disable-next-line require-yield\n\nfunction getFilteredDataRequest(data) {\n  return Axios.request({\n    url: '/api/product/',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction getKey(name) {\n  // brand productSex extraFilter productAge productType productUsage\n  switch (name) {\n    case 'age':\n      return 'productAge';\n\n    case 'gender':\n      return 'productSex';\n\n    case 'type':\n      return 'productType';\n\n    case 'brand':\n      return 'brand';\n\n    case 'meaning':\n      return 'productUsage';\n\n    case 'classification':\n      return 'extraFilter';\n\n    default:\n      return null;\n  }\n}\n\nfunction getBackKey(name) {\n  switch (name) {\n    case 'productAge':\n      return 'age';\n\n    case 'productSex':\n      return 'gender';\n\n    case 'productType':\n      return 'type';\n\n    case 'brand':\n      return 'brand';\n\n    case 'productUsage':\n      return 'meaning';\n\n    case 'extraFilter':\n      return 'classification';\n\n    default:\n      return null;\n  }\n}\n\nfunction workCatalogGet(_ref) {\n  var payload, _filterClone$gender, _filterClone$gender2, _filterClone$price, _filterClone$price2, _filterClone$classifi, _filterClone$classifi2, _filterClone$classifi3, _filterClone$classifi4, _filterClone$gender3, _ref2, page, name, changedNames, selectedPage, filters, catalogFilters, lastFilters, filterName, extraFilterIds, filterClone, lastFilterKeys, filterToSend, _ref3, data;\n\n  return _regeneratorRuntime.wrap(function workCatalogGet$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _ref2 = payload || {}, page = _ref2.page, name = _ref2.name, changedNames = _ref2.changedNames; // TODO: remove is triggered\n\n          selectedPage = page || 1;\n          _context.next = 6;\n          return select(clearFilters);\n\n        case 6:\n          filters = _context.sent;\n          _context.next = 9;\n          return select(selectCatalogFilters);\n\n        case 9:\n          catalogFilters = _context.sent;\n          lastFilters = {};\n          filterName = getKey(name);\n\n          if (filterName) {\n            if (filterName && catalogFilters[filterName]) {\n              lastFilters = _defineProperty({}, filterName, catalogFilters[filterName]);\n            }\n          }\n\n          if (changedNames) {\n            changedNames.forEach(function (n) {\n              var fName = getKey(n);\n\n              if (fName) {\n                if (fName && catalogFilters[fName]) {\n                  lastFilters[fName] = catalogFilters[fName];\n                }\n              }\n            });\n          } // brand productSex extraFilter productAge productType productUsage\n\n\n          filters.classification = filters.classification || []; // eslint-disable-next-line no-restricted-globals\n\n          extraFilterIds = !isNaN(+filters.classification[0]) && filters.classification[0];\n          filterClone = JSON.parse(JSON.stringify(filters));\n          lastFilterKeys = [];\n          Object.keys(filterClone).forEach(function (key) {\n            var indexOfAll = filterClone[key].indexOf('all');\n            lastFilterKeys.push(getKey(key));\n\n            if (indexOfAll !== -1 || !filterClone[key].length) {\n              delete filterClone[key];\n              delete lastFilters[getKey(key)];\n            }\n          });\n          Object.keys(lastFilters).forEach(function (key) {\n            if (!filterClone[getBackKey(key)]) {\n              delete lastFilters[key];\n            }\n          });\n          _context.next = 22;\n          return select(selectLang);\n\n        case 22:\n          _context.t0 = _context.sent;\n          _context.t1 = (selectedPage - 1) * 12;\n          _context.t2 = extraFilterIds;\n          _context.t3 = filterClone.type;\n          _context.t4 = filterClone.meaning;\n          _context.t5 = filterClone.age;\n          _context.t6 = filterClone.brand;\n          _context.t7 = ((_filterClone$gender = filterClone.gender) === null || _filterClone$gender === void 0 ? void 0 : _filterClone$gender[0]) !== 'ALL' ? filterClone === null || filterClone === void 0 ? void 0 : (_filterClone$gender2 = filterClone.gender) === null || _filterClone$gender2 === void 0 ? void 0 : _filterClone$gender2[0] : undefined;\n          _context.t8 = (filterClone === null || filterClone === void 0 ? void 0 : (_filterClone$price = filterClone.price) === null || _filterClone$price === void 0 ? void 0 : _filterClone$price[0]) || undefined;\n          _context.t9 = (filterClone === null || filterClone === void 0 ? void 0 : (_filterClone$price2 = filterClone.price) === null || _filterClone$price2 === void 0 ? void 0 : _filterClone$price2[1]) || undefined;\n          _context.t10 = (filterClone === null || filterClone === void 0 ? void 0 : (_filterClone$classifi = filterClone.classification) === null || _filterClone$classifi === void 0 ? void 0 : _filterClone$classifi[0]) === 'percent';\n          _context.t11 = (filterClone === null || filterClone === void 0 ? void 0 : (_filterClone$classifi2 = filterClone.classification) === null || _filterClone$classifi2 === void 0 ? void 0 : _filterClone$classifi2[0]) === 'bestSeller';\n          _context.t12 = (filterClone === null || filterClone === void 0 ? void 0 : (_filterClone$classifi3 = filterClone.classification) === null || _filterClone$classifi3 === void 0 ? void 0 : _filterClone$classifi3[0]) === 'isNew';\n          _context.t13 = (filterClone === null || filterClone === void 0 ? void 0 : (_filterClone$classifi4 = filterClone.classification) === null || _filterClone$classifi4 === void 0 ? void 0 : _filterClone$classifi4[0]) === 'priceByAsc';\n          filterToSend = {\n            lang: _context.t0,\n            limit: 12,\n            offset: _context.t1,\n            extraFilterIds: _context.t2,\n            typeIds: _context.t3,\n            usageIds: _context.t4,\n            ageIds: _context.t5,\n            brandIds: _context.t6,\n            sex: _context.t7,\n            minPrice: _context.t8,\n            maxPrice: _context.t9,\n            percent: _context.t10,\n            bestSeller: _context.t11,\n            isNew: _context.t12,\n            priceByAsc: _context.t13\n          };\n\n          if (Array.isArray((_filterClone$gender3 = filterClone.gender) === null || _filterClone$gender3 === void 0 ? void 0 : _filterClone$gender3[0])) {\n            delete filterToSend.sex;\n            d;\n          }\n\n          _context.next = 40;\n          return call(getFilteredDataRequest, filterToSend);\n\n        case 40:\n          _ref3 = _context.sent;\n          data = _ref3.data;\n          _context.next = 44;\n          return all([put(catalogGetSuccess({\n            products: data.result.rows,\n            pagesCount: data.pages,\n            page: selectedPage\n          }))]);\n\n        case 44:\n          if (!(data.result.rows.length > 0)) {\n            _context.next = 47;\n            break;\n          }\n\n          _context.next = 47;\n          return put(catalogSetFilters({\n            filters: _objectSpread({}, data.filters, {}, lastFilters)\n          }));\n\n        case 47:\n          _context.next = 53;\n          break;\n\n        case 49:\n          _context.prev = 49;\n          _context.t14 = _context[\"catch\"](1);\n          _context.next = 53;\n          return put(catalogGetError());\n\n        case 53:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 49]]);\n}\n\nfunction watchCatalogGet() {\n  return _regeneratorRuntime.wrap(function watchCatalogGet$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(catalogGet, workCatalogGet);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport { watchCatalogGet, workCatalogGet };","map":null,"metadata":{},"sourceType":"module"}