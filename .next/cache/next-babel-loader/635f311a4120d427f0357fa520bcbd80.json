{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport { message } from 'antd';\nimport Router from 'next/router';\nimport { store } from '../../pages/_app';\nimport { logout } from '../user/action';\nimport { getCookie } from '../../utils/cookies';\nimport { C_TOKEN } from '../../constants/utils';\nvar appAxios = axios.create({\n  baseURL: process.env.REACT_APP_URL\n});\nappAxios.interceptors.request.use(function (config) {\n  var newConfig = _objectSpread({}, config);\n\n  newConfig.url = newConfig.baseURL + newConfig.url;\n\n  if (true) {\n    newConfig.headers.Authorization = \"Bearer \".concat(getCookie(C_TOKEN) || '');\n  }\n\n  return newConfig;\n}, function (error) {\n  return Promise.reject(error);\n});\nappAxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  var _error$response = error.response,\n      status = _error$response.status,\n      url = _error$response.config.url;\n\n  if (status === 401 && !url.includes('/api/user/signIn')) {\n    Router.push('/');\n    store.dispatch(logout());\n    message.error({\n      content: 'Unauthorized',\n      duration: 2\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default appAxios;","map":null,"metadata":{},"sourceType":"module"}