{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchProductReset } from '../../../store/search/action';\nimport { selectSearchData, selectSearchDataLoading } from '../../../store/search/reducer';\nimport useOnClickOutside from '../../../hooks/useOnOutClick';\nimport { catalogMainSearch } from '../../../store/catalog-filter/action';\nimport { selectCatalogFilters } from '../../../store/catalog-filter/reducer'; // eslint-disable-next-line import/prefer-default-export\n\nexport const useMainSearch = ({\n  onSearch\n}) => {\n  const {\n    0: searchValue,\n    1: setValue\n  } = useState();\n  const {\n    searchWord\n  } = useSelector(selectCatalogFilters);\n  const dispatch = useDispatch();\n\n  const resetSearch = () => dispatch(searchProductReset());\n\n  const data = useSelector(selectSearchData);\n  const loading = useSelector(selectSearchDataLoading);\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(false);\n  const ref = useRef(null);\n\n  const handleSearch = value => {\n    if (value === null || value === void 0 ? void 0 : value.trim()) dispatch(catalogMainSearch({\n      searchWord: value\n    }));\n    resetSearch();\n    setFocused(false);\n  };\n\n  const handleSearchSuggested = value => {\n    onSearch({\n      searchWord: value\n    });\n  };\n\n  const handleFocus = ({\n    target: {\n      value\n    }\n  }) => {\n    resetSearch();\n\n    if (value && value !== searchValue) {\n      handleSearchSuggested(value);\n    }\n\n    if (value !== searchValue) setFocused(true);\n  };\n\n  const handleBlur = () => {\n    setFocused(false);\n  };\n\n  const handleChange = ({\n    target: {\n      value: eventValue\n    }\n  }) => {\n    setValue(eventValue);\n    handleSearchSuggested(eventValue);\n    setFocused(true);\n  };\n\n  useOnClickOutside(ref, () => {\n    setFocused(false);\n  });\n  useEffect(() => {\n    setValue(searchWord);\n  }, [searchWord]);\n  return {\n    searchValue,\n    data,\n    loading,\n    focused,\n    handleFocus,\n    handleBlur,\n    ref,\n    setValue,\n    handleChange,\n    handleSearch\n  };\n};","map":null,"metadata":{},"sourceType":"module"}