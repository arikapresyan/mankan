{"ast":null,"code":"import { put, takeLatest, select, call, all } from '@redux-saga/core/effects';\nimport { getAccompanyingProduct, getAccompanyingProductSuccess, getAccompanyingProductError } from './action';\nimport { selectCart } from '../cart/reducer';\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\n\nfunction getAccompanyingProductRequest({\n  ids,\n  lang\n}) {\n  return Axios.request({\n    method: 'post',\n    url: '/api/product/escorting',\n    data: {\n      ids,\n      lang\n    }\n  });\n}\n\nfunction* workAccompanying() {\n  const ids = Object.keys((yield select(selectCart)));\n  const lang = yield select(selectLang);\n\n  try {\n    if (!ids.length) throw new Error();\n    const {\n      data: {\n        escortingProducts\n      }\n    } = yield call(getAccompanyingProductRequest, {\n      ids,\n      lang\n    });\n    yield put(getAccompanyingProductSuccess({\n      data: escortingProducts\n    }));\n  } catch (error) {\n    yield put(getAccompanyingProductError());\n  }\n}\n\nfunction* watchAccompanying() {\n  yield takeLatest(getAccompanyingProduct, workAccompanying);\n}\n\nexport default function* () {\n  yield all([watchAccompanying()]);\n}","map":null,"metadata":{},"sourceType":"module"}