{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/modals/buy-product-modal/ModalContent.jsx\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport Button from 'antd/lib/button';\nimport Checkbox from 'antd/lib/checkbox';\nimport Tooltip from 'antd/lib/tooltip';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\nimport PropTypes from 'prop-types';\nimport InfoIcon from '../../../assets/images/icons/info.png';\nimport ProductQuantity from '../../common/ProductQuantity';\nimport useBuyProductModal from './useBuyProductModal';\nimport { getProductBoxSize } from '../../../constants/utils';\n\nfunction ModalContent({\n  wishlistChangeItemAction,\n  handleHideModal,\n  localChanges,\n  inWishlist,\n  product,\n  isInCart,\n  bonus\n}) {\n  const {\n    addToCartAndRedirect,\n    addToCart,\n    bonusText,\n    batteryText,\n    brandName,\n    sizeText,\n    photo,\n    battery,\n    text,\n    text2,\n    setCount,\n    xmlPrice,\n    percent,\n    productAga,\n    messages,\n    count,\n    hasBattery,\n    setHasBattery,\n    xmlCount,\n    xmlBarCode,\n    priceBayCount\n  } = useBuyProductModal({\n    product,\n    localChanges,\n    handleHideModal,\n    bonus\n  });\n  const boxSizeText = useMemo(() => getProductBoxSize(product.boxSize), [product.boxSize, getProductBoxSize]);\n  const characteristics = [{\n    visible: boxSizeText,\n    name: messages['local.box_size'],\n    text: boxSizeText + messages['local.sm']\n  }, {\n    visible: sizeText === null || sizeText === void 0 ? void 0 : sizeText.trim(),\n    name: messages['local.size'],\n    text: `${sizeText} ${messages['local.sm']}`\n  }, {\n    visible: true,\n    name: messages['local.age'],\n    text: `${productAga} ${messages['local.shortYear']}â€¤`\n  }, {\n    visible: brandName,\n    name: messages['local.brand'],\n    text: brandName\n  }, {\n    visible: battery,\n    name: messages['local.battery'],\n    text: batteryText\n  }, {\n    visible: true,\n    name: messages['local.barcode'],\n    text: xmlBarCode\n  }];\n  return __jsx(Row, {\n    gutter: 30,\n    className: \"modal_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"prod_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: photo.url,\n    alt: photo.alt,\n    title: photo.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))), __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 9,\n    className: \"characteristics_list_web\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"characteristics_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, characteristics.map(({\n    visible,\n    name,\n    text: content\n  }, index) => {\n    if (!visible) return null;\n    return __jsx(\"div\", {\n      className: \"characteristics_list_item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"characteristic_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, name), __jsx(\"div\", {\n      className: \"characteristic_description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, content));\n  }))), __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"product_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"product_price_box product_info_item clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"product_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, priceBayCount, ' ', messages['local.dr'], \"\\u2024\", percent > 0 && __jsx(\"span\", {\n    className: \"old_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, xmlPrice * count, messages['local.dr'], \"\\u2024\"))), __jsx(\"div\", {\n    className: \"product_quantity_box product_info_item clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"product_quantity_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, messages['local.quantity']), __jsx(ProductQuantity, {\n    value: count,\n    onChange: setCount,\n    xmlCount: xmlCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), battery ? __jsx(\"div\", {\n    className: \"bonus_box product_info_item clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"add_prod\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, __jsx(Checkbox, {\n    checked: hasBattery,\n    onChange: ({\n      target: {\n        checked\n      }\n    }) => setHasBattery(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, messages['local.add_batteries'])), battery && __jsx(\"div\", {\n    className: \"bonus_quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, battery.price * battery.ProductAccessoriesMap.count * count, ' ', messages['local.dr'], \".\", __jsx(Tooltip, {\n    placement: \"bottom\",\n    title: text,\n    className: \"info_tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: InfoIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }))))) : null, __jsx(\"div\", {\n    className: \"bonus_box product_info_item clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, messages['local.bonus']), __jsx(\"div\", {\n    className: \"bonus_quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, bonusText, ' ', bonusText && messages['local.dr'], \"\\u2024\", __jsx(Tooltip, {\n    placement: \"bottom\",\n    title: text2,\n    className: \"info_tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: InfoIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }))))), __jsx(\"div\", {\n    className: \"characteristics_list characteristics_list_mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, characteristics.map(({\n    visible,\n    name,\n    text: content\n  }, index) => {\n    if (!visible) return null;\n    return __jsx(\"div\", {\n      className: \"characteristics_list_item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"characteristic_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, name), __jsx(\"div\", {\n      className: \"characteristic_description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, content));\n  })), __jsx(\"div\", {\n    className: \"btn_group clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: \"buy_now_btn\",\n    disabled: !xmlCount || isInCart,\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, isInCart ? messages['local.already_in_cart'] : messages['local.add_to_cart']), __jsx(\"button\", {\n    type: \"button\",\n    className: `ant-btn add_to_wishlist ${inWishlist ? 'is_selected' : 'is_active'}`,\n    onClick: () => wishlistChangeItemAction({\n      productId: product.id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    className: \"add_to_cart_btn\",\n    onClick: addToCartAndRedirect,\n    disabled: !xmlCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, messages['local.buy_now'])))));\n}\n\nModalContent.propTypes = {\n  product: PropTypes.objectOf(Object).isRequired,\n  handleHideModal: PropTypes.func.isRequired,\n  inWishlist: PropTypes.bool.isRequired,\n  wishlistChangeItemAction: PropTypes.func.isRequired,\n  localChanges: PropTypes.oneOfType([PropTypes.objectOf(Object)]),\n  bonus: PropTypes.number,\n  isInCart: PropTypes.bool.isRequired\n};\nexport default ModalContent;","map":{"version":3,"sources":["/var/www/mankan-front/components/modals/buy-product-modal/ModalContent.jsx"],"names":["React","useMemo","Button","Checkbox","Tooltip","Row","Col","PropTypes","InfoIcon","ProductQuantity","useBuyProductModal","getProductBoxSize","ModalContent","wishlistChangeItemAction","handleHideModal","localChanges","inWishlist","product","isInCart","bonus","addToCartAndRedirect","addToCart","bonusText","batteryText","brandName","sizeText","photo","battery","text","text2","setCount","xmlPrice","percent","productAga","messages","count","hasBattery","setHasBattery","xmlCount","xmlBarCode","priceBayCount","boxSizeText","boxSize","characteristics","visible","name","trim","url","alt","title","map","content","index","target","checked","price","ProductAccessoriesMap","productId","id","propTypes","objectOf","Object","isRequired","func","bool","oneOfType","number"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\n\n\nimport Button from 'antd/lib/button';\nimport Checkbox from 'antd/lib/checkbox';\nimport Tooltip from 'antd/lib/tooltip';\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\n\nimport PropTypes from 'prop-types';\nimport InfoIcon from '../../../assets/images/icons/info.png';\nimport ProductQuantity from '../../common/ProductQuantity';\nimport useBuyProductModal from './useBuyProductModal';\nimport { getProductBoxSize } from '../../../constants/utils';\n\n\nfunction ModalContent({\n  wishlistChangeItemAction,\n  handleHideModal,\n  localChanges,\n  inWishlist,\n  product,\n  isInCart,\n  bonus,\n}) {\n  const {\n    addToCartAndRedirect,\n    addToCart,\n    bonusText,\n    batteryText,\n    brandName,\n    sizeText,\n    photo,\n    battery,\n    text,\n    text2,\n    setCount,\n    xmlPrice,\n    percent,\n    productAga,\n    messages,\n    count,\n    hasBattery,\n    setHasBattery,\n    xmlCount,\n    xmlBarCode,\n    priceBayCount,\n  } = useBuyProductModal({\n    product, localChanges, handleHideModal, bonus,\n  });\n\n  const boxSizeText = useMemo(() => getProductBoxSize(product.boxSize), [product.boxSize, getProductBoxSize]);\n\n\n  const characteristics = [\n    {\n      visible: boxSizeText,\n      name: messages['local.box_size'],\n      text: boxSizeText + messages['local.sm'],\n    },\n    {\n      visible: sizeText?.trim(),\n      name: messages['local.size'],\n      text: `${sizeText} ${messages['local.sm']}`,\n    }, {\n      visible: true,\n      name: messages['local.age'],\n      text: `${productAga} ${messages['local.shortYear']}â€¤`,\n    },\n    {\n      visible: brandName,\n      name: messages['local.brand'],\n      text: brandName,\n    }, {\n      visible: battery,\n      name: messages['local.battery'],\n      text: batteryText,\n    },\n    {\n      visible: true,\n      name: messages['local.barcode'],\n      text: xmlBarCode,\n    },\n  ];\n\n\n  return (\n    <Row gutter={30} className=\"modal_content\">\n      <Col sm={24} md={12} lg={6}>\n        <div className=\"prod_image\">\n          <img src={photo.url} alt={photo.alt} title={photo.title} />\n        </div>\n      </Col>\n      <Col sm={24} md={12} lg={9} className=\"characteristics_list_web\">\n        <div className=\"characteristics_list\">\n          {characteristics.map(({ visible, name, text: content }, index) => {\n            if (!visible) return null;\n            return (\n              <div className=\"characteristics_list_item\" key={index}>\n                <div className=\"characteristic_name\">{name}</div>\n                <div className=\"characteristic_description\">\n                  {content}\n                </div>\n              </div>\n            );\n          })}\n\n        </div>\n      </Col>\n      <Col sm={24} md={12} lg={9}>\n        <div className=\"product_info\">\n          <div className=\"product_price_box product_info_item clearfix\">\n            <span className=\"product_price\">\n              {priceBayCount}\n              {' '}\n              {messages['local.dr']}\n              â€¤\n              {percent > 0 && (\n              <span className=\"old_price\">\n                {xmlPrice * count}\n                {messages['local.dr']}\n                â€¤\n              </span>\n              )}\n            </span>\n\n          </div>\n\n\n          <div className=\"product_quantity_box product_info_item clearfix\">\n            <div className=\"product_quantity_title\">\n              {messages['local.quantity']}\n            </div>\n            <ProductQuantity value={count} onChange={setCount} xmlCount={xmlCount} />\n\n          </div>\n\n          {battery ? (\n            <div className=\"bonus_box product_info_item clearfix\">\n\n\n              <div className=\"add_prod\">\n                <Checkbox\n                  checked={hasBattery}\n                  onChange={(\n                    { target: { checked } },\n                  ) => setHasBattery(checked)}\n                >\n                  {messages['local.add_batteries']}\n\n                </Checkbox>\n\n\n              </div>\n              {battery && (\n                <div className=\"bonus_quantity\">\n                    {(battery.price * battery.ProductAccessoriesMap.count) * count}\n                    {' '}\n                    {messages['local.dr']}\n                  .\n                  <Tooltip\n                    placement=\"bottom\"\n                    title={text}\n                    className=\"info_tooltip\"\n                  >\n                    <span>\n                      <img src={InfoIcon} alt=\"\" />\n                    </span>\n                  </Tooltip>\n\n                </div>\n              )}\n\n\n            </div>\n          ) : null}\n          <div className=\"bonus_box product_info_item clearfix\">\n            <p>{messages['local.bonus']}</p>\n            <div className=\"bonus_quantity\">\n\n              {bonusText}\n              {' '}\n              {bonusText && messages['local.dr']}\n              â€¤\n              <Tooltip placement=\"bottom\" title={text2} className=\"info_tooltip\">\n                <span>\n                  <img src={InfoIcon} alt=\"\" />\n                </span>\n              </Tooltip>\n            </div>\n          </div>\n\n\n          {/* {hasBattery */}\n          {/*  ? ( */}\n          {/*    <div className=\"product_price_box clearfix\"> */}\n          {/*      <p>{messages['local.battery']}</p> */}\n          {/*      <span className=\"product_price\"> */}\n          {/*        {(battery && `${battery.price} `)} */}\n          {/*        {' '} */}\n          {/*        {messages['local.dr']} */}\n          {/*        . */}\n          {/*      </span> */}\n          {/*    </div> */}\n          {/*  ) */}\n          {/*  : null} */}\n          <div className=\"characteristics_list characteristics_list_mobile\">\n\n            {characteristics.map(({ visible, name, text: content }, index) => {\n              if (!visible) return null;\n              return (\n                <div className=\"characteristics_list_item\" key={index}>\n                  <div className=\"characteristic_name\">{name}</div>\n                  <div className=\"characteristic_description\">\n                    {content}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"btn_group clearfix\">\n            <Button\n              className=\"buy_now_btn\"\n              disabled={!xmlCount || isInCart}\n              onClick={addToCart}\n            >\n              { isInCart ? messages['local.already_in_cart'] : messages['local.add_to_cart']}\n\n            </Button>\n            <button\n              type=\"button\"\n              className={`ant-btn add_to_wishlist ${inWishlist ? 'is_selected' : 'is_active'}`}\n              onClick={() => wishlistChangeItemAction({ productId: product.id })}\n            />\n            <Button\n              className=\"add_to_cart_btn\"\n              onClick={addToCartAndRedirect}\n              disabled={!xmlCount}\n            >\n              {messages['local.buy_now']}\n            </Button>\n\n\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nModalContent.propTypes = {\n  product: PropTypes.objectOf(Object).isRequired,\n  handleHideModal: PropTypes.func.isRequired,\n  inWishlist: PropTypes.bool.isRequired,\n  wishlistChangeItemAction: PropTypes.func.isRequired,\n  localChanges: PropTypes.oneOfType([PropTypes.objectOf(Object)]),\n  bonus: PropTypes.number,\n  isInCart: PropTypes.bool.isRequired,\n};\n\nexport default ModalContent;\n"]},"metadata":{},"sourceType":"module"}