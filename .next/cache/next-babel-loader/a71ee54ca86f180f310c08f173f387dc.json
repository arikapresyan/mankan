{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/modals/buy-product-modal/useBuyProductModal.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport router from 'next/router';\nimport useCartActions from '../../../store/cart/useCartActions';\nimport { getProductSizeFromObj, getBonus, getProductBrand, getProductAge, getProductBattery, addToCartObj } from '../../../constants/utils';\nimport keys from '../../../constants/keys';\nimport useGetProductPrice from '../../../hooks/useGetProductPrice';\nconst {\n  IMAGE_POSTFIX\n} = keys;\n\nfunction useBuyProductModal({\n  product,\n  localChanges,\n  handleHideModal,\n  bonus\n}) {\n  const {\n    cartAddProductAction\n  } = useCartActions();\n  const {\n    messages\n  } = useIntl();\n\n  const text = __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }\n  }, messages['local.modal_battery']);\n\n  const {\n    size,\n    brand,\n    id,\n    percent,\n    price,\n    accessories,\n    photos,\n    xmlCount,\n    xmlBarCode\n  } = product;\n  const {\n    0: hasBattery,\n    1: setHasBattery\n  } = useState(false);\n  const {\n    0: count,\n    1: setCount\n  } = useState(localChanges[product.id] && localChanges[product.id].count || product.count || 1);\n  const battery = useMemo(() => getProductBattery(accessories), [accessories]);\n  useEffect(() => {\n    if (battery && localChanges[id] && (localChanges[id].hasBattery || localChanges[id].batteryId) && battery.xmlCount) {\n      setHasBattery(true);\n    }\n  }, [battery, localChanges]);\n  const batteryText = useMemo(() => battery && `${battery.ProductAccessoriesMap.count}  ${messages['local.item(s)']} ${battery.name}`, [battery, messages]);\n  const brandName = useMemo(() => getProductBrand(brand), [brand]);\n  const sizeText = useMemo(() => getProductSizeFromObj(size), [size]);\n  const productAga = useMemo(() => getProductAge(product.minAge, product.maxAge), [product.minAge, product.maxAge]);\n  const photo = useMemo(() => {\n    const firstPhoto = photos ? photos.sort((a, b) => a.order - b.order)[0] : null;\n    if (!firstPhoto) return {};\n    return {\n      url: `${IMAGE_POSTFIX}${id}/${firstPhoto.url}`,\n      alt: firstPhoto.alt,\n      title: firstPhoto.title\n    };\n  }, [photos]);\n  const {\n    newPrice,\n    oldPrice\n  } = useGetProductPrice(product);\n  const bonusText = useMemo(() => getBonus(newPrice, bonus || 2, count), [newPrice, bonus, count]);\n  const priceBayCount = useMemo(() => newPrice * count, [newPrice, count]);\n\n  const addToCart = redirect => {\n    cartAddProductAction(addToCartObj({\n      hasBattery,\n      battery,\n      count,\n      product\n    }), router.router.route === '/cart' || redirect);\n    handleHideModal();\n  };\n\n  const addToCartAndRedirect = () => {\n    addToCart(true);\n  };\n\n  const text2 = useCallback(() => __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, messages['local.can_use_bonus_if']), [messages]);\n  return {\n    addToCartAndRedirect,\n    addToCart,\n    bonusText,\n    batteryText,\n    brandName,\n    sizeText,\n    photo,\n    text,\n    setCount,\n    messages,\n    xmlPrice: oldPrice,\n    percent,\n    battery,\n    productAga,\n    text2,\n    id,\n    count,\n    hasBattery,\n    setHasBattery,\n    price,\n    xmlCount,\n    xmlBarCode,\n    priceBayCount\n  };\n}\n\nexport default useBuyProductModal;","map":{"version":3,"sources":["/var/www/mankan-front/components/modals/buy-product-modal/useBuyProductModal.js"],"names":["React","useState","useMemo","useEffect","useCallback","useIntl","router","useCartActions","getProductSizeFromObj","getBonus","getProductBrand","getProductAge","getProductBattery","addToCartObj","keys","useGetProductPrice","IMAGE_POSTFIX","useBuyProductModal","product","localChanges","handleHideModal","bonus","cartAddProductAction","messages","text","size","brand","id","percent","price","accessories","photos","xmlCount","xmlBarCode","hasBattery","setHasBattery","count","setCount","battery","batteryId","batteryText","ProductAccessoriesMap","name","brandName","sizeText","productAga","minAge","maxAge","photo","firstPhoto","sort","a","b","order","url","alt","title","newPrice","oldPrice","bonusText","priceBayCount","addToCart","redirect","route","addToCartAndRedirect","text2","xmlPrice"],"mappings":"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","sourcesContent":["import React, {\n  useState, useMemo, useEffect, useCallback,\n} from 'react';\nimport { useIntl } from 'react-intl';\nimport router from 'next/router';\nimport useCartActions from '../../../store/cart/useCartActions';\nimport {\n  getProductSizeFromObj, getBonus, getProductBrand, getProductAge, getProductBattery, addToCartObj,\n} from '../../../constants/utils';\nimport keys from '../../../constants/keys';\nimport useGetProductPrice from '../../../hooks/useGetProductPrice';\n\nconst { IMAGE_POSTFIX } = keys;\n\nfunction useBuyProductModal({\n  product, localChanges, handleHideModal, bonus,\n}) {\n  const { cartAddProductAction } = useCartActions();\n  const { messages } = useIntl();\n  const text = <span>{messages['local.modal_battery']}</span>;\n\n\n  const {\n    size,\n    brand,\n    id,\n    percent,\n    price,\n    accessories,\n    photos,\n    xmlCount,\n    xmlBarCode,\n  } = product;\n  const [hasBattery, setHasBattery] = useState(false);\n\n  const [count, setCount] = useState(\n    (localChanges[product.id] && localChanges[product.id].count)\n    || product.count\n    || 1,\n  );\n  const battery = useMemo(() => getProductBattery(accessories), [accessories]);\n  useEffect(() => {\n    if (\n      battery\n       && localChanges[id]\n       && (localChanges[id].hasBattery || localChanges[id].batteryId)\n       && battery.xmlCount\n    ) {\n      setHasBattery(true);\n    }\n  }, [battery, localChanges]);\n\n\n  const batteryText = useMemo(() => battery && `${battery.ProductAccessoriesMap.count}  ${messages['local.item(s)']} ${battery.name}`, [battery, messages]);\n  const brandName = useMemo(() => getProductBrand(brand), [brand]);\n  const sizeText = useMemo(() => getProductSizeFromObj(size), [size]);\n  const productAga = useMemo(() => getProductAge(product.minAge, product.maxAge),\n    [product.minAge, product.maxAge]);\n\n  const photo = useMemo(() => {\n    const firstPhoto = photos ? photos.sort((a, b) => a.order - b.order)[0] : null;\n\n    if (!firstPhoto) return {};\n    return ({\n      url: `${IMAGE_POSTFIX}${id}/${firstPhoto.url}`,\n      alt: firstPhoto.alt,\n      title: firstPhoto.title,\n    });\n  }, [photos]);\n\n  const { newPrice, oldPrice } = useGetProductPrice(product);\n\n  const bonusText = useMemo(() => getBonus(newPrice, bonus || 2, count), [newPrice, bonus, count]);\n  const priceBayCount = useMemo(() => newPrice * count, [newPrice, count]);\n\n  const addToCart = (redirect) => {\n    cartAddProductAction(\n      addToCartObj({\n        hasBattery, battery, count, product,\n      }),\n      router.router.route === '/cart' || redirect,\n    );\n    handleHideModal();\n  };\n\n  const addToCartAndRedirect = () => {\n    addToCart(true);\n  };\n\n  const text2 = useCallback(\n    () => <span>{messages['local.can_use_bonus_if']}</span>,\n    [messages],\n  );\n\n\n  return {\n    addToCartAndRedirect,\n    addToCart,\n    bonusText,\n    batteryText,\n    brandName,\n    sizeText,\n    photo,\n    text,\n    setCount,\n    messages,\n    xmlPrice: oldPrice,\n    percent,\n    battery,\n    productAga,\n    text2,\n    id,\n    count,\n    hasBattery,\n    setHasBattery,\n    price,\n    xmlCount,\n    xmlBarCode,\n    priceBayCount,\n  };\n}\n\nexport default useBuyProductModal;\n"]},"metadata":{},"sourceType":"module"}