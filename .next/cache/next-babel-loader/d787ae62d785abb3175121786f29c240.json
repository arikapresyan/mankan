{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Checkbox, Tooltip, Row, Col } from 'antd';\nimport InfoIcon from '../../../assets/images/icons/info.png';\nimport ProductQuantity from '../../common/ProductQuantity';\nimport useBuyProductModal from './useBuyProductModal';\n\nfunction ModalContent({\n  wishlistChangeItemAction,\n  handleHideModal,\n  localChanges,\n  inWishlist,\n  product,\n  isInCart,\n  bonus\n}) {\n  const {\n    addToCartAndRedirect,\n    addToCart,\n    bonusText,\n    batteryText,\n    brandName,\n    sizeText,\n    photo,\n    battery,\n    text,\n    text2,\n    setCount,\n    xmlPrice,\n    percent,\n    productAga,\n    messages,\n    count,\n    hasBattery,\n    setHasBattery,\n    xmlCount,\n    xmlBarCode,\n    priceBayCount\n  } = useBuyProductModal({\n    product,\n    localChanges,\n    handleHideModal,\n    bonus\n  });\n  return __jsx(Row, {\n    gutter: 30,\n    className: \"modal_content\"\n  }, __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 6\n  }, __jsx(\"div\", {\n    className: \"prod_image\"\n  }, __jsx(\"img\", {\n    src: photo.url,\n    alt: photo.alt,\n    title: photo.title\n  }))), __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 9,\n    className: \"characteristics_list_web\"\n  }, __jsx(\"div\", {\n    className: \"characteristics_list\"\n  }, (sizeText === null || sizeText === void 0 ? void 0 : sizeText.trim()) && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.size']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, sizeText, ' ', messages['local.sm'])), __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.age']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, productAga, ' ', messages['local.shortYear'], \"\\u2024\")), brandName && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.brand']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, brandName)), battery ? __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.battery']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, batteryText)) : null, __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.barcode']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, xmlBarCode)))), __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 9\n  }, __jsx(\"div\", {\n    className: \"product_info\"\n  }, __jsx(\"div\", {\n    className: \"product_price_box product_info_item clearfix\"\n  }, __jsx(\"span\", {\n    className: \"product_price\"\n  }, priceBayCount, ' ', messages['local.dr'], \"\\u2024\", percent > 0 && __jsx(\"span\", {\n    className: \"old_price\"\n  }, xmlPrice * count, messages['local.dr'], \"\\u2024\"))), __jsx(\"div\", {\n    className: \"product_quantity_box product_info_item clearfix\"\n  }, __jsx(\"div\", {\n    className: \"product_quantity_title\"\n  }, messages['local.quantity']), __jsx(ProductQuantity, {\n    value: count,\n    onChange: setCount,\n    xmlCount: xmlCount\n  })), battery ? __jsx(\"div\", {\n    className: \"bonus_box product_info_item clearfix\"\n  }, __jsx(\"div\", {\n    className: \"add_prod\"\n  }, __jsx(Checkbox, {\n    checked: hasBattery,\n    onChange: ({\n      target: {\n        checked\n      }\n    }) => setHasBattery(checked)\n  }, messages['local.add_batteries'])), battery && __jsx(\"div\", {\n    className: \"bonus_quantity\"\n  }, battery.price * battery.ProductAccessoriesMap.count * count, ' ', messages['local.dr'], \".\", __jsx(Tooltip, {\n    placement: \"bottom\",\n    title: text,\n    className: \"info_tooltip\"\n  }, __jsx(\"span\", null, __jsx(\"img\", {\n    src: InfoIcon,\n    alt: \"\"\n  }))))) : null, __jsx(\"div\", {\n    className: \"bonus_box product_info_item clearfix\"\n  }, __jsx(\"p\", null, messages['local.bonus']), __jsx(\"div\", {\n    className: \"bonus_quantity\"\n  }, bonusText, ' ', bonusText && messages['local.dr'], \"\\u2024\", __jsx(Tooltip, {\n    placement: \"bottom\",\n    title: text2,\n    className: \"info_tooltip\"\n  }, __jsx(\"span\", null, __jsx(\"img\", {\n    src: InfoIcon,\n    alt: \"\"\n  }))))), __jsx(\"div\", {\n    className: \"characteristics_list characteristics_list_mobile\"\n  }, !!(sizeText === null || sizeText === void 0 ? void 0 : sizeText.trim()) && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.size']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, sizeText, messages['local.sm'])), !!productAga && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.age']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, productAga, ' ', messages['local.shortYear'], \"\\u2024\")), !!brandName && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.brand']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, brandName)), !!batteryText && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.battery']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, batteryText)), __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.barcode']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, xmlBarCode))), __jsx(\"div\", {\n    className: \"btn_group clearfix\"\n  }, __jsx(Button, {\n    className: \"buy_now_btn\",\n    disabled: !xmlCount || isInCart,\n    onClick: addToCart\n  }, isInCart ? messages['local.already_in_cart'] : messages['local.add_to_cart']), __jsx(\"button\", {\n    type: \"button\",\n    className: `ant-btn add_to_wishlist ${inWishlist ? 'is_selected' : 'is_active'}`,\n    onClick: () => wishlistChangeItemAction({\n      productId: product.id\n    })\n  }), __jsx(Button, {\n    className: \"add_to_cart_btn\",\n    onClick: addToCartAndRedirect,\n    disabled: !xmlCount\n  }, messages['local.buy_now'])))));\n}\n\nexport default ModalContent;","map":null,"metadata":{},"sourceType":"module"}