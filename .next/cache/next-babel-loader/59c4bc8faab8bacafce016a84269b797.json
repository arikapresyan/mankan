{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/common/ProductQuantity.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport Button from 'antd/lib/button';\nimport InputNumber from 'antd/lib/input-number';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nfunction ProductQuantity(_ref) {\n  _s();\n\n  var value = _ref.value,\n      _onChange = _ref.onChange,\n      xmlCount = _ref.xmlCount;\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var maxCount = useMemo(function () {\n    return xmlCount > 10 ? 10 : xmlCount;\n  }, [xmlCount]);\n  return !xmlCount ? __jsx(\"div\", {\n    className: \"product_quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 22\n    }\n  }, messages['local.out_of_stock']) : __jsx(\"div\", {\n    className: \"product_quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    className: \"decrement\",\n    onClick: function onClick() {\n      if (value !== 1) {\n        _onChange(value - 1);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"-\"), __jsx(InputNumber, {\n    value: value,\n    type: \"number\",\n    onChange: function onChange(newValue) {\n      if (newValue <= maxCount && newValue > 0) {\n        _onChange(newValue);\n      } else if (newValue > maxCount) {\n        _onChange(maxCount);\n      } else _onChange(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    className: \"increment\",\n    onClick: function onClick() {\n      if (value < maxCount) {\n        _onChange(value + 1);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"+\"));\n}\n\n_s(ProductQuantity, \"0keSFJ0/4AxbykezG1GF0+EAxak=\", false, function () {\n  return [useIntl];\n});\n\n_c = ProductQuantity;\nProductQuantity.propTypes = {\n  value: PropTypes.number,\n  onChange: PropTypes.func,\n  xmlCount: PropTypes.number\n};\nProductQuantity.defaultProps = {\n  onChange: function onChange() {}\n};\nexport default ProductQuantity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductQuantity\");","map":{"version":3,"sources":["/var/www/mankan-front/components/common/ProductQuantity.js"],"names":["React","useMemo","Button","InputNumber","PropTypes","useIntl","ProductQuantity","value","onChange","xmlCount","messages","maxCount","newValue","propTypes","number","func","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,SAASC,eAAT,OAAwD;AAAA;;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,SAAsB,QAAtBA,QAAsB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,iBACjCJ,OAAO,EAD0B;AAAA,MAC9CK,QAD8C,YAC9CA,QAD8C;;AAEtD,MAAMC,QAAQ,GAAGV,OAAO,CACtB;AAAA,WAAOQ,QAAQ,GAAG,EAAX,GAAgB,EAAhB,GAAqBA,QAA5B;AAAA,GADsB,EAEtB,CAACA,QAAD,CAFsB,CAAxB;AAIA,SAAO,CAACA,QAAD,GAAY;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCC,QAAQ,CAAC,oBAAD,CAA3C,CAAZ,GAEH;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIH,KAAK,KAAK,CAAd,EAAiB;AAAEC,QAAAA,SAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAsB;AAC1C,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAWE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAE,kBAACK,QAAD,EAAc;AACtB,UAAIA,QAAQ,IAAID,QAAZ,IAAwBC,QAAQ,GAAG,CAAvC,EAA0C;AACxCJ,QAAAA,SAAQ,CAACI,QAAD,CAAR;AACD,OAFD,MAEO,IAAIA,QAAQ,GAAGD,QAAf,EAAyB;AAC9BH,QAAAA,SAAQ,CAACG,QAAD,CAAR;AACD,OAFM,MAEAH,SAAQ,CAAC,CAAD,CAAR;AACR,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAsBE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAIE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAID,KAAK,GAAGI,QAAZ,EAAsB;AACpBH,QAAAA,SAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAtBF,CAFJ;AAsCD;;GA5CQD,e;UACcD,O;;;KADdC,e;AA6CTA,eAAe,CAACO,SAAhB,GAA4B;AAC1BN,EAAAA,KAAK,EAAEH,SAAS,CAACU,MADS;AAE1BN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,IAFM;AAG1BN,EAAAA,QAAQ,EAAEL,SAAS,CAACU;AAHM,CAA5B;AAKAR,eAAe,CAACU,YAAhB,GAA+B;AAC7BR,EAAAA,QAAQ,EAAE,oBAAM,CAAG;AADU,CAA/B;AAIA,eAAeF,eAAf","sourcesContent":["import React, { useMemo } from 'react';\r\nimport Button from 'antd/lib/button';\r\nimport InputNumber from 'antd/lib/input-number';\r\nimport PropTypes from 'prop-types';\r\nimport { useIntl } from 'react-intl';\r\n\r\nfunction ProductQuantity({ value, onChange, xmlCount }) {\r\n  const { messages } = useIntl();\r\n  const maxCount = useMemo(\r\n    () => (xmlCount > 10 ? 10 : xmlCount),\r\n    [xmlCount],\r\n  );\r\n  return !xmlCount ? <div className=\"product_quantity\">{messages['local.out_of_stock']}</div>\r\n    : (\r\n      <div className=\"product_quantity\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"decrement\"\r\n          onClick={() => {\r\n            if (value !== 1) { onChange(value - 1); }\r\n          }}\r\n        >\r\n          -\r\n\r\n        </Button>\r\n        <InputNumber\r\n          value={value}\r\n          type=\"number\"\r\n          onChange={(newValue) => {\r\n            if (newValue <= maxCount && newValue > 0) {\r\n              onChange(newValue);\r\n            } else if (newValue > maxCount) {\r\n              onChange(maxCount);\r\n            } else onChange(1);\r\n          }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"increment\"\r\n\r\n          onClick={() => {\r\n            if (value < maxCount) {\r\n              onChange(value + 1);\r\n            }\r\n          }}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n    );\r\n}\r\nProductQuantity.propTypes = {\r\n  value: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  xmlCount: PropTypes.number,\r\n};\r\nProductQuantity.defaultProps = {\r\n  onChange: () => { },\r\n};\r\n\r\nexport default ProductQuantity;\r\n"]},"metadata":{},"sourceType":"module"}