{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Checkbox, Tooltip, Row, Col } from 'antd';\nimport InfoIcon from '../../../assets/images/icons/info.png';\nimport ProductQuantity from '../../common/ProductQuantity';\nimport useBuyProductModal from './useBuyProductModal';\n\nfunction ModalContent(_ref) {\n  var wishlistChangeItemAction = _ref.wishlistChangeItemAction,\n      handleHideModal = _ref.handleHideModal,\n      localChanges = _ref.localChanges,\n      inWishlist = _ref.inWishlist,\n      product = _ref.product,\n      isInCart = _ref.isInCart,\n      bonus = _ref.bonus;\n\n  var _useBuyProductModal = useBuyProductModal({\n    product: product,\n    localChanges: localChanges,\n    handleHideModal: handleHideModal,\n    bonus: bonus\n  }),\n      addToCartAndRedirect = _useBuyProductModal.addToCartAndRedirect,\n      addToCart = _useBuyProductModal.addToCart,\n      bonusText = _useBuyProductModal.bonusText,\n      batteryText = _useBuyProductModal.batteryText,\n      brandName = _useBuyProductModal.brandName,\n      sizeText = _useBuyProductModal.sizeText,\n      photo = _useBuyProductModal.photo,\n      battery = _useBuyProductModal.battery,\n      text = _useBuyProductModal.text,\n      text2 = _useBuyProductModal.text2,\n      setCount = _useBuyProductModal.setCount,\n      xmlPrice = _useBuyProductModal.xmlPrice,\n      percent = _useBuyProductModal.percent,\n      productAga = _useBuyProductModal.productAga,\n      messages = _useBuyProductModal.messages,\n      count = _useBuyProductModal.count,\n      hasBattery = _useBuyProductModal.hasBattery,\n      setHasBattery = _useBuyProductModal.setHasBattery,\n      xmlCount = _useBuyProductModal.xmlCount,\n      xmlBarCode = _useBuyProductModal.xmlBarCode,\n      priceBayCount = _useBuyProductModal.priceBayCount;\n\n  return __jsx(Row, {\n    gutter: 30,\n    className: \"modal_content\"\n  }, __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 6\n  }, __jsx(\"div\", {\n    className: \"prod_image\"\n  }, __jsx(\"img\", {\n    src: photo.url,\n    alt: photo.alt,\n    title: photo.title\n  }))), __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 9,\n    className: \"characteristics_list_web\"\n  }, __jsx(\"div\", {\n    className: \"characteristics_list\"\n  }, (sizeText === null || sizeText === void 0 ? void 0 : sizeText.trim()) && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.size']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, sizeText, ' ', messages['local.sm'])), __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.age']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, productAga, ' ', messages['local.shortYear'], \"\\u2024\")), brandName && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.brand']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, brandName)), battery ? __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.battery']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, batteryText)) : null, __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.barcode']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, xmlBarCode)))), __jsx(Col, {\n    sm: 24,\n    md: 12,\n    lg: 9\n  }, __jsx(\"div\", {\n    className: \"product_info\"\n  }, __jsx(\"div\", {\n    className: \"product_price_box product_info_item clearfix\"\n  }, __jsx(\"span\", {\n    className: \"product_price\"\n  }, priceBayCount, ' ', messages['local.dr'], \"\\u2024\", percent > 0 && __jsx(\"span\", {\n    className: \"old_price\"\n  }, xmlPrice, messages['local.dr'], \"\\u2024\"))), __jsx(\"div\", {\n    className: \"product_quantity_box product_info_item clearfix\"\n  }, __jsx(\"div\", {\n    className: \"product_quantity_title\"\n  }, messages['local.quantity']), __jsx(ProductQuantity, {\n    value: count,\n    onChange: setCount,\n    xmlCount: xmlCount\n  })), battery ? __jsx(\"div\", {\n    className: \"bonus_box product_info_item clearfix\"\n  }, __jsx(\"div\", {\n    className: \"add_prod\"\n  }, __jsx(Checkbox, {\n    checked: hasBattery,\n    onChange: function onChange(_ref2) {\n      var checked = _ref2.target.checked;\n      return setHasBattery(checked);\n    }\n  }, messages['local.add_batteries'])), battery && __jsx(\"div\", {\n    className: \"bonus_quantity\"\n  }, battery.price * battery.ProductAccessoriesMap.count * count, ' ', messages['local.dr'], \".\", __jsx(Tooltip, {\n    placement: \"bottom\",\n    title: text,\n    className: \"info_tooltip\"\n  }, __jsx(\"span\", null, __jsx(\"img\", {\n    src: InfoIcon,\n    alt: \"\"\n  }))))) : null, __jsx(\"div\", {\n    className: \"bonus_box product_info_item clearfix\"\n  }, __jsx(\"p\", null, messages['local.bonus']), __jsx(\"div\", {\n    className: \"bonus_quantity\"\n  }, bonusText, ' ', bonusText && messages['local.dr'], \"\\u2024\", __jsx(Tooltip, {\n    placement: \"bottom\",\n    title: text2,\n    className: \"info_tooltip\"\n  }, __jsx(\"span\", null, __jsx(\"img\", {\n    src: InfoIcon,\n    alt: \"\"\n  }))))), __jsx(\"div\", {\n    className: \"characteristics_list characteristics_list_mobile\"\n  }, !!(sizeText === null || sizeText === void 0 ? void 0 : sizeText.trim()) && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.size']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, sizeText, messages['local.sm'])), !!productAga && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.age']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, productAga, ' ', messages['local.shortYear'], \"\\u2024\")), !!brandName && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.brand']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, brandName)), !!batteryText && __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.battery']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, batteryText)), __jsx(\"div\", {\n    className: \"characteristics_list_item\"\n  }, __jsx(\"div\", {\n    className: \"characteristic_name\"\n  }, messages['local.barcode']), __jsx(\"div\", {\n    className: \"characteristic_description\"\n  }, xmlBarCode))), __jsx(\"div\", {\n    className: \"btn_group clearfix\"\n  }, __jsx(Button, {\n    className: \"buy_now_btn\",\n    disabled: !xmlCount || isInCart,\n    onClick: addToCart\n  }, isInCart ? messages['local.already_in_cart'] : messages['local.add_to_cart']), __jsx(\"button\", {\n    type: \"button\",\n    className: \"ant-btn add_to_wishlist \".concat(inWishlist ? 'is_selected' : 'is_active'),\n    onClick: function onClick() {\n      return wishlistChangeItemAction({\n        productId: product.id\n      });\n    }\n  }), !!xmlCount && __jsx(React.Fragment, null, __jsx(Button, {\n    className: \"add_to_cart_btn\",\n    onClick: addToCartAndRedirect\n  }, messages['local.buy_now']))))));\n}\n\nexport default ModalContent;","map":null,"metadata":{},"sourceType":"module"}