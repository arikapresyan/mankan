{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport { useIntl } from 'react-intl';\nimport { wishlistChangeItem } from '../../../store/wishlist/action';\nimport { getProductToBuy } from '../../../store/buy-product/action';\nimport { New, top1 } from '../../../assets/images/icons';\nimport Icon from '../../../assets/images/icons/discount.png';\nimport { getProductBoxSize, getProductSizeFromObj } from '../../../constants/utils';\nimport keys from '../../../constants/keys';\nimport AddToWishlistButton from './components/AddToWishlistButton';\nimport BuyProductComponent from './components/BuyProductComponent';\nimport ProductImageComponent from './components/ProductImageComponent';\nimport CheckProductIs from './components/StatusIcon';\nconst {\n  IMAGE_POSTFIX\n} = keys;\n\nfunction IndexProductItem({\n  product,\n  wishlistProductIds,\n  wishlistChangeItemAction,\n  getProductToBuyAction,\n  mode\n}) {\n  var _product$langs$;\n\n  const inWishlist = wishlistProductIds[product.id];\n  const {\n    messages\n  } = useIntl();\n  const {\n    price,\n    size,\n    percent,\n    boxSize,\n    isNew,\n    statistic,\n    xmlPrice\n  } = product;\n  const {\n    bestSeller\n  } = (statistic === null || statistic === void 0 ? void 0 : statistic[0]) || {};\n  const name = product === null || product === void 0 ? void 0 : (_product$langs$ = product.langs[0]) === null || _product$langs$ === void 0 ? void 0 : _product$langs$.name;\n  const {\n    url,\n    alt,\n    title\n  } = product.photos[0];\n  const imageURL = useMemo(() => `${IMAGE_POSTFIX}${product.id}/${url}`, [url, product.id]);\n  const ProductNameComponent = useCallback(() => __jsx(Link, {\n    href: \"/product/[id]\",\n    as: `/product/${product.id}`\n  }, __jsx(\"a\", {\n    className: \"prod_name\"\n  }, name || '')), [product.id]);\n  const PriceComponent = useCallback(() => __jsx(\"div\", {\n    className: \"prod_price\"\n  }, price || '', ' ', messages['local.dr'], \".\", __jsx(\"span\", {\n    className: \"old_price\"\n  }, xmlPrice !== price ? `${xmlPrice}  ${messages['local.dr']}` : '')), [messages, price]);\n  const handleBuy = useCallback(() => getProductToBuyAction({\n    id: product.id\n  }), [product.id]);\n\n  switch (mode) {\n    case 'mobil':\n      return __jsx(\"div\", {\n        className: \"productItemMobile\"\n      }, __jsx(CheckProductIs, {\n        isNew: isNew,\n        bestSeller: bestSeller,\n        percent: percent\n      }), __jsx(ProductNameComponent, null), __jsx(PriceComponent, null), __jsx(ProductImageComponent, {\n        imageURL: imageURL,\n        id: product.id\n      }), __jsx(BuyProductComponent, {\n        type: \"link\",\n        innerText: messages['local.buy'],\n        handleBuy: handleBuy\n      }), __jsx(AddToWishlistButton, {\n        inWishlist: !!inWishlist,\n        wishlistChangeItemAction: wishlistChangeItemAction,\n        product: product\n      }));\n\n    case 'accompanying':\n      return __jsx(\"div\", {\n        className: \"accompanying_product_item\"\n      }, __jsx(CheckProductIs, {\n        isNew: isNew,\n        bestSeller: bestSeller,\n        percent: percent\n      }), __jsx(ProductImageComponent, {\n        imageURL: imageURL,\n        id: product.id\n      }), __jsx(\"div\", {\n        className: \"prod_info\"\n      }, __jsx(ProductNameComponent, null), __jsx(PriceComponent, null)), __jsx(AddToWishlistButton, {\n        inWishlist: !!inWishlist,\n        wishlistChangeItemAction: wishlistChangeItemAction,\n        product: product\n      }), __jsx(BuyProductComponent, {\n        type: \"link\",\n        innerText: \"\",\n        handleBuy: handleBuy\n      }));\n\n    default:\n      return __jsx(\"div\", {\n        className: \"productItem\"\n      }, __jsx(Link, {\n        href: \"/product/[id]\",\n        as: `/product/${product.id}`\n      }, __jsx(\"a\", null, __jsx(CheckProductIs, {\n        isNew: isNew,\n        bestSeller: bestSeller,\n        percent: percent\n      }), __jsx(\"span\", {\n        className: \"prod_image\",\n        style: {\n          backgroundImage: `url(\"${imageURL}\")`\n        }\n      }), __jsx(\"span\", {\n        className: \"prod_name\"\n      }, name), __jsx(PriceComponent, null))), __jsx(\"div\", {\n        className: \"prod_size\"\n      }, getProductBoxSize(boxSize) || getProductSizeFromObj(size)), __jsx(\"div\", {\n        className: \"productItemFooter\"\n      }, __jsx(BuyProductComponent, {\n        type: \"primary\",\n        innerText: messages['local.buy'],\n        handleBuy: handleBuy\n      }), __jsx(AddToWishlistButton, {\n        inWishlist: !!inWishlist,\n        wishlistChangeItemAction: wishlistChangeItemAction,\n        product: product\n      })));\n  }\n}\n\nconst mapStateToProps = ({\n  wishlist\n}) => ({\n  wishlistProductIds: wishlist.productIds\n});\n\nexport default connect(mapStateToProps, {\n  wishlistChangeItemAction: wishlistChangeItem,\n  getProductToBuyAction: getProductToBuy\n})(IndexProductItem);","map":null,"metadata":{},"sourceType":"module"}