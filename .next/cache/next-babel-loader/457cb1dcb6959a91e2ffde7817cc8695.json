{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport Head from 'next/head';\nimport reduxStore from '../store/configuredStore';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'swiper/css/swiper.css';\nimport '../index.less';\nimport AppLayout from '../App';\nimport { getUserData, setLang } from '../store/user/action';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    let lang = localStorage.getItem('lang');\n\n    if (lang !== 'ARM' && lang !== 'RU' && lang !== 'ENG') {\n      lang = 'ARM';\n      localStorage.setItem('lang', lang);\n    }\n\n    this.props.store.dispatch(setLang({\n      lang\n    }));\n    this.props.store.dispatch(getUserData()); // this.props.store.dispatch(catalogGet());\n    // mobile_menu_bar\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store,\n      router: {\n        pathname\n      }\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n      name: \"yandex-verification\",\n      content: \"2da434c5e87e666a\"\n    })), pathname === '/_error' ? __jsx(Component, null) : __jsx(Provider, {\n      store: store\n    }, __jsx(AppLayout, {\n      pageProps: pageProps,\n      Component: Component\n    })));\n  }\n\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet store;\nexport default withRedux((initialState, props) => {\n  store = reduxStore(initialState, props);\n  return store;\n})(withReduxSaga(MyApp));\nexport { store };","map":null,"metadata":{},"sourceType":"module"}