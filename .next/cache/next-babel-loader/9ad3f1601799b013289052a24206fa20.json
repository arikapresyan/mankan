{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Input from 'antd/lib/input';\nimport Spin from 'antd/lib/spin';\nimport Link from 'next/link';\nimport { useMainSearch } from './useMainSearch';\nconst {\n  Search: MainSearch\n} = Input;\n\nfunction SearchComponent({\n  placeholder,\n  className,\n  onSearch,\n  style,\n  enterButton\n}) {\n  var _searchValue$trim;\n\n  const {\n    data,\n    loading,\n    focused,\n    handleBlur,\n    handleFocus,\n    searchValue,\n    ref,\n    handleSearch,\n    handleChange\n  } = useMainSearch({\n    onSearch\n  });\n  return __jsx(\"div\", {\n    className: \"myHeaderSearch\",\n    style: {\n      display: 'inline-block',\n      position: 'relative',\n      zIndex: '99'\n    },\n    ref: ref\n  }, __jsx(Input.Group, null, __jsx(MainSearch, {\n    value: searchValue,\n    onChange: handleChange,\n    enterButton: enterButton,\n    className: className,\n    placeholder: placeholder,\n    onSearch: handleSearch,\n    onFocus: handleFocus,\n    style: style\n  })), __jsx(\"div\", {\n    style: {\n      maxHeight: '300px',\n      overflow: 'auto',\n      background: '#fff',\n      padding: '5px 10px',\n      width: '100%'\n    }\n  }, loading && (searchValue === null || searchValue === void 0 ? void 0 : (_searchValue$trim = searchValue.trim) === null || _searchValue$trim === void 0 ? void 0 : _searchValue$trim.call(searchValue)) && __jsx(Spin, null), focused && (data || []).map(item => __jsx(\"div\", {\n    key: `search${item.id}`\n  }, __jsx(Link, {\n    href: \"/product/[id]\",\n    as: `/product/${item.id}`\n  }, __jsx(\"a\", {\n    onClick: handleBlur\n  }, item.name))))));\n}\n\nSearchComponent.defaultProps = {\n  enterButton: undefined,\n  style: {}\n};\nexport default SearchComponent;","map":null,"metadata":{},"sourceType":"module"}