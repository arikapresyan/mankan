{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useCallback, useState } from 'react';\nimport Select from 'antd/lib/select';\nimport Button from 'antd/lib/button';\nimport Form from 'antd/lib/form';\nimport Tooltip from 'antd/lib/tooltip';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Radio } from 'antd';\nimport InputField from '../../../../common/InputField';\nimport InfoIcon from '../../../../../assets/images/icons/info.png';\nvar Option = Select.Option;\nvar radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px'\n};\nvar FormItemInput = memo(function (props) {\n  var inputProps = _objectSpread({}, props);\n\n  delete inputProps.formItemClassName;\n  delete inputProps.error;\n  return __jsx(Form.Item, {\n    className: props.formItemClassName || '',\n    validateStatus: props.error && 'error',\n    help: props.error\n  }, __jsx(InputField, inputProps));\n});\n\nfunction SendForm(_ref) {\n  var modalLogic = _ref.modalLogic;\n  var isUser = useSelector(function (_ref2) {\n    var user = _ref2.user;\n    return user.authSuccess;\n  });\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var _useState = useState(false),\n      setOpenSelect = _useState[1];\n\n  var _modalLogic$formik = modalLogic.formik,\n      values = _modalLogic$formik.values,\n      errors = _modalLogic$formik.errors,\n      touched = _modalLogic$formik.touched,\n      handleChange = _modalLogic$formik.handleChange,\n      handleBlur = _modalLogic$formik.handleBlur,\n      setFieldValue = _modalLogic$formik.setFieldValue,\n      setFieldTouched = _modalLogic$formik.setFieldTouched,\n      dateInfo = modalLogic.dateInfo;\n  var setMode = useCallback(function (mode) {\n    return function () {\n      return setFieldValue('method', mode);\n    };\n  }, []);\n  var blurSelect = useCallback(function () {\n    setOpenSelect(false);\n    setFieldTouched('deliveryPeriodString', true);\n  }, []);\n  var focusSelect = useCallback(function () {\n    return setOpenSelect(true);\n  }, []);\n  var changeSelectValue = useCallback(function (value, reactElement) {\n    setFieldValue('deliveryPeriod', value);\n    setFieldValue('deliveryPeriodString', reactElement.props.children);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(FormItemInput, {\n    value: values.firstName,\n    name: \"firstName\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"\".concat(messages['local.name'], \"*\"),\n    error: touched.firstName && errors.firstName\n  }), __jsx(FormItemInput, {\n    value: values.lastName,\n    name: \"lastName\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"\".concat(messages['local.last_name'], \" *\"),\n    error: touched.lastName && errors.lastName\n  }), __jsx(FormItemInput, {\n    value: values.phone,\n    name: \"phone\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"\".concat(messages['local.mobile_phone'], \" *\"),\n    error: touched.phone && errors.phone\n  }), __jsx(FormItemInput, {\n    value: values.email,\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"\".concat(messages['local.email'], \" *\"),\n    error: touched.email && errors.email\n  }), __jsx(\"div\", {\n    className: \"d-flex justify-content_space-between reportItem\"\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items_center mt--15\"\n  }, __jsx(\"div\", {\n    className: \"bonus_quantity\"\n  }, __jsx(Tooltip, {\n    placement: \"bottomLeft\",\n    title: messages['local.delivery_only_in_yerevan'],\n    className: \"info_tooltip\"\n  }, __jsx(\"span\", null, __jsx(\"img\", {\n    src: InfoIcon,\n    alt: \"\"\n  })))), messages['local.yerevan_cty']), __jsx(FormItemInput, {\n    className: \"street\",\n    value: values.street,\n    name: \"street\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"\".concat(messages['local.city_street'], \"*\"),\n    error: touched.street && errors.street\n  })), __jsx(FormItemInput, {\n    formItemClassName: \"apartment clearfix\",\n    value: values.house,\n    name: \"house\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"\".concat(messages['local.apartment_house'], \"*\"),\n    error: touched.house && errors.house\n  }), __jsx(FormItemInput, {\n    formItemClassName: \"entrance clearfix\",\n    value: values.entry,\n    name: \"entry\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    placeholder: \"\".concat(messages['local.enter']),\n    error: touched.entry && errors.entry\n  }), __jsx(Form.Item, {\n    className: \"delivery_date\",\n    validateStatus: errors.deliveryPeriodString && touched.deliveryPeriodString && 'error',\n    help: touched.deliveryPeriodString && errors.deliveryPeriodString\n  }, __jsx(Select, {\n    placeholder: \"\".concat(messages['local.delivery_period'], \" *\"),\n    onFocus: focusSelect,\n    onBlur: blurSelect,\n    onChange: changeSelectValue,\n    name: \"deliveryPeriod\"\n  }, dateInfo.map(function (optionData) {\n    return __jsx(Option, {\n      value: optionData.date,\n      key: optionData.date\n    }, optionData.text);\n  }))), __jsx(\"p\", {\n    className: \"payment_method\"\n  }, messages['local.payment_method']), __jsx(Radio.Group, {\n    onChange: function onChange(_ref3) {\n      var value = _ref3.target.value;\n      setMode(value)();\n    },\n    value: values.method\n  }, __jsx(Radio, {\n    style: radioStyle,\n    value: 1\n  }, messages['local.credit_card']), __jsx(Radio, {\n    style: radioStyle,\n    value: 2\n  }, messages['local.cash']), isUser && __jsx(Radio, {\n    style: radioStyle,\n    value: 3\n  }, messages['local.bonus_Wey'])));\n}\n\nexport default SendForm;","map":null,"metadata":{},"sourceType":"module"}