{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeLatest, put, select, call } from '@redux-saga/core/effects';\nimport { getMenuList, getMenuListSuccess } from './action'; // eslint-disable-next-line import/no-cycle\n\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\nimport { getProductAge } from '../../constants/utils';\n\nfunction getRequestBody(name) {\n  switch (name) {\n    case 'own':\n      return {\n        ownBrand: true,\n        urlPostfix: 'mankan'\n      };\n\n    case 'infant':\n    case 'infants':\n      return {\n        infant: true,\n        urlPostfix: 'infant'\n      };\n\n    case 'boy':\n    case 'boys':\n      return {\n        sex: 'BOY',\n        urlPostfix: 'boy'\n      };\n\n    case 'girl':\n    case 'girls':\n      return {\n        sex: 'GIRL',\n        urlPostfix: 'girl'\n      };\n\n    default:\n      return {\n        urlPostfix: 'all'\n      };\n  }\n}\n\nfunction getMenuListRequest({\n  urlPostfix,\n  lang\n}) {\n  return Axios.request({\n    url: `/api/product/hoverFilters/${urlPostfix}/?lang=${lang}`,\n    method: 'get'\n  });\n}\n\nfunction getBestSellerRequest(data) {\n  return Axios.request({\n    url: '/api/product/navFiltersBestSeller',\n    method: 'post',\n    data\n  });\n}\n\nfunction getNavFilteredDataToView({\n  brand,\n  usage: meaning,\n  age,\n  type,\n  messages\n}) {\n  const ageToSend = (age || []).map(({\n    id,\n    minAge,\n    maxAge\n  }) => ({\n    id,\n    name: getProductAge(minAge, maxAge, messages),\n    text: getProductAge(minAge, maxAge, messages)\n  }));\n  return {\n    type,\n    age: ageToSend,\n    brand,\n    meaning\n  };\n}\n\nfunction* workMenuList({\n  payload: {\n    name,\n    messages\n  }\n}) {\n  const lang = yield select(selectLang);\n\n  try {\n    const filterData = _objectSpread(_objectSpread({}, getRequestBody(name)), {}, {\n      lang\n    });\n\n    const res = yield call(getMenuListRequest, filterData);\n    const {\n      data: {\n        result: {\n          rows\n        }\n      }\n    } = yield call(getBestSellerRequest, filterData);\n    yield put(getMenuListSuccess({\n      data: getNavFilteredDataToView(_objectSpread(_objectSpread({}, res.data), {}, {\n        messages\n      })),\n      name,\n      bestseller: rows[0]\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* watchMenuList() {\n  yield takeLatest(getMenuList, workMenuList);\n}\n\nexport { // eslint-disable-next-line import/prefer-default-export\nwatchMenuList };","map":{"version":3,"sources":["/var/www/mankan-front/store/menu-list/saga.js"],"names":["takeLatest","put","select","call","getMenuList","getMenuListSuccess","Axios","selectLang","getProductAge","getRequestBody","name","ownBrand","urlPostfix","infant","sex","getMenuListRequest","lang","request","url","method","getBestSellerRequest","data","getNavFilteredDataToView","brand","usage","meaning","age","type","messages","ageToSend","map","id","minAge","maxAge","text","workMenuList","payload","filterData","res","result","rows","bestseller","error","console","log","watchMenuList"],"mappings":"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","sourcesContent":["import {\n  takeLatest, put, select, call,\n} from '@redux-saga/core/effects';\n\nimport { getMenuList, getMenuListSuccess } from './action';\n// eslint-disable-next-line import/no-cycle\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\nimport { getProductAge } from '../../constants/utils';\n\nfunction getRequestBody(name) {\n  switch (name) {\n    case 'own':\n      return {\n        ownBrand: true,\n        urlPostfix: 'mankan',\n      };\n    case 'infant':\n    case 'infants':\n      return {\n        infant: true,\n        urlPostfix: 'infant',\n      };\n    case 'boy':\n    case 'boys':\n      return {\n        sex: 'BOY',\n        urlPostfix: 'boy',\n      };\n    case 'girl':\n    case 'girls':\n      return {\n        sex: 'GIRL',\n        urlPostfix: 'girl',\n      };\n    default:\n      return {\n        urlPostfix: 'all',\n      };\n  }\n}\n\nfunction getMenuListRequest({ urlPostfix, lang }) {\n  return Axios.request({\n    url: `/api/product/hoverFilters/${urlPostfix}/?lang=${lang}`,\n    method: 'get',\n  });\n}\nfunction getBestSellerRequest(data) {\n  return Axios.request({\n    url: '/api/product/navFiltersBestSeller',\n    method: 'post',\n    data,\n  });\n}\n\n\nfunction getNavFilteredDataToView({\n  brand, usage: meaning, age, type, messages,\n}) {\n  const ageToSend = (age || []).map(({ id, minAge, maxAge }) => ({\n    id,\n    name: getProductAge(minAge, maxAge, messages),\n    text: getProductAge(minAge, maxAge, messages),\n  }));\n\n\n  return {\n    type,\n    age: ageToSend,\n    brand,\n    meaning,\n  };\n}\n\nfunction* workMenuList({ payload: { name, messages } }) {\n  const lang = yield select(selectLang);\n  try {\n    const filterData = { ...getRequestBody(name), lang };\n\n\n    const res = yield call(getMenuListRequest, filterData);\n\n\n    const { data: { result: { rows } } } = yield call(getBestSellerRequest, filterData);\n\n\n    yield put(\n      getMenuListSuccess({\n        data: getNavFilteredDataToView({\n          ...res.data,\n          messages,\n        }),\n        name,\n        bestseller: rows[0],\n      }),\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nfunction* watchMenuList() {\n  yield takeLatest(getMenuList, workMenuList);\n}\n\nexport {\n  // eslint-disable-next-line import/prefer-default-export\n  watchMenuList,\n};\n"]},"metadata":{},"sourceType":"module"}