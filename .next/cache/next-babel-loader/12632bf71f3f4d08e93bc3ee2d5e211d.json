{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workGetDataListByPagination),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetDataListByPagination),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(_callee);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-unused-vars */\nimport { takeEvery, call, put, select, all } from '@redux-saga/core/effects';\nimport Axios from '../services/Axios';\nimport { getDataListByPagination, getDataListByPaginationError, getDataListByPaginationSuccess } from './action';\nimport { selectLang } from '../user/reducer';\nvar dataByName = {\n  buyProductList: {\n    url: '/api/user/orders/all',\n    method: 'post'\n  }\n};\n\nfunction getDataListByPaginationRequest(_x) {\n  return _getDataListByPaginationRequest.apply(this, arguments);\n}\n\nfunction _getDataListByPaginationRequest() {\n  _getDataListByPaginationRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n    var name, page, lang, _yield$Axios$request, _yield$Axios$request$, pages, rows;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            name = _ref.name, page = _ref.page, lang = _ref.lang;\n            _context4.next = 3;\n            return Axios.request(_objectSpread(_objectSpread({}, dataByName[name]), {}, {\n              data: {\n                page: page,\n                offset: 12 * (page - 1),\n                limit: 12,\n                lang: lang\n              }\n            }));\n\n          case 3:\n            _yield$Axios$request = _context4.sent;\n            _yield$Axios$request$ = _yield$Axios$request.data;\n            pages = _yield$Axios$request$.pages;\n            rows = _yield$Axios$request$.result.rows;\n            return _context4.abrupt(\"return\", {\n              pages: pages,\n              data: rows\n            });\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getDataListByPaginationRequest.apply(this, arguments);\n}\n\nfunction workGetDataListByPagination(_ref2) {\n  var _ref2$payload, name, page, lang, res;\n\n  return _regeneratorRuntime.wrap(function workGetDataListByPagination$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref2$payload = _ref2.payload, name = _ref2$payload.name, page = _ref2$payload.page;\n          _context.prev = 1;\n          _context.next = 4;\n          return select(selectLang);\n\n        case 4:\n          lang = _context.sent;\n          _context.next = 7;\n          return call(getDataListByPaginationRequest, {\n            name: name,\n            page: page || 1,\n            lang: lang\n          });\n\n        case 7:\n          res = _context.sent;\n          _context.next = 10;\n          return put(getDataListByPaginationSuccess(_objectSpread(_objectSpread({}, res), {}, {\n            name: name,\n            page: page\n          })));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 16;\n          return put(getDataListByPaginationError({\n            name: name\n          }));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 12]]);\n}\n\nfunction watchGetDataListByPagination() {\n  return _regeneratorRuntime.wrap(function watchGetDataListByPagination$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(getDataListByPagination, workGetDataListByPagination);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchGetDataListByPagination()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"module"}