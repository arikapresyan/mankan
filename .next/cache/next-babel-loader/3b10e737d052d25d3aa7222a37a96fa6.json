{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Row, Col, Layout } from \"antd\";\nimport { useIntl } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport keys from \"../../../constants/keys\";\nimport { Breadcrumb, ProductImageView, ProductInfo, ProductDescription, ProductCharacteristics, ProductUsefulness, ProductSlider, AccompanyingProductList } from \"../../../components\";\nimport { getPageData } from \"../../../store/pages-data/action\";\nimport { wishlistChangeItem } from \"../../../store/wishlist/action\";\nimport AccompanyingProducts from \"../../../components/accompanying-products/AccompanyingProducts\";\nimport { setViewedProducts } from \"../../../store/viewed-products/action\";\nimport PagesLoader from \"../../../components/pages-loader/PagesLoader\";\nvar IMAGE_POSTFIX = keys.IMAGE_POSTFIX;\nvar Content = Layout.Content;\n\nfunction Product(_ref) {\n  var pageData = _ref.pageData,\n      user = _ref.user,\n      wishlistChangeItemAction = _ref.wishlistChangeItemAction,\n      wishlistIds = _ref.wishlistIds,\n      setViewedProductsAction = _ref.setViewedProductsAction;\n  if (pageData.loading || !pageData.data) return __jsx(PagesLoader, null);\n  var thisProduct = pageData.data.result.productById;\n  var similarProducts = pageData.data.result.similarProducts.rows;\n  var images = thisProduct.photos.map(function (photo) {\n    return \"\".concat(IMAGE_POSTFIX).concat(thisProduct.id, \"/\").concat(photo.url);\n  });\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  useEffect(function () {\n    if (thisProduct.id) {\n      setViewedProductsAction({\n        id: thisProduct.id\n      });\n    }\n  }, [thisProduct.id]);\n  return __jsx(Content, {\n    className: \"product_page\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Breadcrumb, null)), __jsx(\"div\", {\n    className: \"product_main_wrap\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Row, {\n    gutter: [32, {\n      xs: 32,\n      sm: 32,\n      md: 32,\n      lg: 32,\n      xl: 32,\n      xxl: 32\n    }]\n  }, __jsx(Col, {\n    md: 14,\n    lg: 14,\n    xl: 14\n  }, __jsx(ProductImageView, {\n    images: images\n  })), __jsx(Col, {\n    md: 10,\n    lg: 10,\n    xl: 10\n  }, __jsx(ProductInfo, {\n    oneProduct: thisProduct,\n    user: user,\n    wishlistChangeItemAction: wishlistChangeItemAction,\n    inWishlist: !!wishlistIds[thisProduct.id]\n  })))), __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: \"-25px\"\n    }\n  }, __jsx(Row, {\n    gutter: [32, {\n      xs: 32,\n      sm: 32,\n      md: 32,\n      lg: 32,\n      xl: 32,\n      xxl: 32\n    }]\n  }, __jsx(Col, {\n    xl: 10,\n    className: \"characteristic_col\"\n  }, __jsx(ProductCharacteristics, {\n    product: thisProduct\n  })), __jsx(Col, {\n    xl: 14\n  }, __jsx(ProductDescription, {\n    product: thisProduct\n  })))), !!thisProduct.productUsage.length && __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(ProductUsefulness, {\n    usefulness: thisProduct.productUsage\n  }))), __jsx(AccompanyingProducts, null), similarProducts.length ? __jsx(\"div\", {\n    className: \"slider_wrapper\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", {\n    className: \"section_title\"\n  }, messages[\"local.similar_products\"]), __jsx(ProductSlider, {\n    products: similarProducts\n  }), __jsx(AccompanyingProductList, {\n    products: similarProducts\n  }))) : null);\n}\n\nProduct.getInitialProps = function (_ref2) {\n  var store = _ref2.store,\n      query = _ref2.query;\n  var id = query.id;\n  store.dispatch(getPageData({\n    page: \"oneProduct\",\n    id: id\n  }));\n  return {};\n};\n\nfunction mapStateToProps(_ref3) {\n  var oneProduct = _ref3.oneProduct,\n      pageData = _ref3.pageData,\n      user = _ref3.user,\n      wishlist = _ref3.wishlist;\n  return {\n    oneProduct: oneProduct,\n    pageData: pageData,\n    user: user,\n    wishlistIds: wishlist.productIds\n  };\n}\n\nexport default connect(mapStateToProps, {\n  wishlistChangeItemAction: wishlistChangeItem,\n  setViewedProductsAction: setViewedProducts\n})(Product);","map":null,"metadata":{},"sourceType":"module"}