{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport keys from '../../constants/keys';\nimport { catalogFilterChange, catalogFilterChangeSuccess, catalogFilterChangeError, resetCatalogFilterReducer, catalogFilterSetValues, catalogSetFilters, resetFilterView } from './action';\nconst initialState = {\n  classification: [],\n  price: [keys.DEFAULT_PRICE[0], keys.DEFAULT_PRICE[1]],\n  gender: [],\n  age: [],\n  type: [],\n  meaning: [],\n  brand: [],\n  isUserFilter: false,\n  loading: false,\n  filters: {\n    brand: [],\n    productSex: [],\n    extraFilter: [],\n    productAge: [],\n    productType: [],\n    productUsage: [],\n    searchWord: ''\n  }\n};\nexport default handleActions({\n  [catalogFilterChangeSuccess]: (state, {\n    payload: {\n      name,\n      value\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    [name]: value,\n    loading: false\n  }),\n  [catalogFilterSetValues]: (state, {\n    payload\n  }) => _objectSpread(_objectSpread(_objectSpread({}, state), payload), {}, {\n    loading: false\n  }),\n  [resetFilterView]: (state, {\n    payload: {\n      exception\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    classification: [],\n    price: [keys.DEFAULT_PRICE[0], keys.DEFAULT_PRICE[1]],\n    gender: [],\n    age: [],\n    type: [],\n    meaning: [],\n    brand: [],\n    [exception]: state[exception]\n  }),\n  [catalogFilterChange]: state => _objectSpread(_objectSpread({}, state), {}, {\n    loading: true\n  }),\n  [catalogSetFilters]: (state, {\n    payload: {\n      filters\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    filters\n  }),\n  [resetCatalogFilterReducer]: (state, {\n    payload: {\n      resetSearchWord\n    } = {}\n  }) => _objectSpread(_objectSpread({}, initialState), {}, {\n    filters: _objectSpread(_objectSpread({}, initialState.filters), {}, {\n      searchWord: resetSearchWord ? '' : state.filters.searchWord\n    })\n  }),\n  [catalogFilterChangeError]: state => _objectSpread(_objectSpread({}, initialState), {}, {\n    filters: _objectSpread(_objectSpread({}, initialState.filters), {}, {\n      searchWord: state.filters.searchWord\n    })\n  })\n}, initialState);\nexport const clearFilters = store => {\n  const filters = _objectSpread({}, store.catalogFilter);\n\n  const keysArray = Object.keys(filters);\n  keysArray.forEach(key => {\n    if (!filters[key].length && key !== 'searchWord') {\n      delete filters[key];\n    }\n  });\n  return filters;\n};\nexport const getIsUserFilter = store => !!store.catalogFilter.isUserFilter;\nexport const selectCatalogFilters = ({\n  catalogFilter\n}) => catalogFilter.filters;\nexport const getCatalogFilterByName = name => ({\n  catalogFilter\n}) => catalogFilter[name];","map":{"version":3,"sources":["/var/www/mankan-front/store/catalog-filter/reducer.js"],"names":["handleActions","keys","catalogFilterChange","catalogFilterChangeSuccess","catalogFilterChangeError","resetCatalogFilterReducer","catalogFilterSetValues","catalogSetFilters","resetFilterView","initialState","classification","price","DEFAULT_PRICE","gender","age","type","meaning","brand","isUserFilter","loading","filters","productSex","extraFilter","productAge","productType","productUsage","searchWord","state","payload","name","value","exception","resetSearchWord","clearFilters","store","catalogFilter","keysArray","Object","forEach","key","length","getIsUserFilter","selectCatalogFilters","getCatalogFilterByName"],"mappings":"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","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport keys from '../../constants/keys';\n\nimport {\n  catalogFilterChange,\n  catalogFilterChangeSuccess,\n  catalogFilterChangeError,\n  resetCatalogFilterReducer,\n  catalogFilterSetValues,\n  catalogSetFilters,\n  resetFilterView,\n} from './action';\n\nconst initialState = {\n  classification: [],\n  price: [keys.DEFAULT_PRICE[0], keys.DEFAULT_PRICE[1]],\n  gender: [],\n  age: [],\n  type: [],\n  meaning: [],\n  brand: [],\n  isUserFilter: false,\n  loading: false,\n  filters: {\n    brand: [],\n    productSex: [],\n    extraFilter: [],\n    productAge: [],\n    productType: [],\n    productUsage: [],\n    searchWord: '',\n  },\n};\n\nexport default handleActions({\n  [catalogFilterChangeSuccess]: (\n    state, { payload: { name, value } },\n  ) => ({\n    ...state,\n    [name]: value,\n    loading: false,\n  }),\n  [catalogFilterSetValues]: (state, { payload }) => ({ ...state, ...payload, loading: false }),\n  [resetFilterView]: (state, { payload: { exception } }) => ({\n    ...state,\n    classification: [],\n    price: [keys.DEFAULT_PRICE[0], keys.DEFAULT_PRICE[1]],\n    gender: [],\n    age: [],\n    type: [],\n    meaning: [],\n    brand: [],\n    [exception]: state[exception],\n\n  }),\n  [catalogFilterChange]: (state) => ({ ...state, loading: true }),\n  [catalogSetFilters]: (state, { payload: { filters } }) => ({ ...state, filters }),\n  [resetCatalogFilterReducer]: (state, { payload: { resetSearchWord } = {} }) => ({\n    ...initialState,\n    filters: {\n      ...initialState.filters,\n      searchWord: resetSearchWord ? '' : state.filters.searchWord,\n    },\n  }),\n  [catalogFilterChangeError]: (state) => ({ ...initialState, filters: { ...initialState.filters, searchWord: state.filters.searchWord } }),\n\n}, initialState);\n\n\nexport const clearFilters = (store) => {\n  const filters = { ...store.catalogFilter };\n  const keysArray = Object.keys(filters);\n\n  keysArray.forEach((key) => {\n    if (!filters[key].length && key !== 'searchWord') {\n      delete filters[key];\n    }\n  });\n\n  return filters;\n};\n\nexport const getIsUserFilter = (store) => !!store.catalogFilter.isUserFilter;\n\nexport const selectCatalogFilters = ({ catalogFilter }) => catalogFilter.filters;\n\nexport const getCatalogFilterByName = (name) => ({ catalogFilter }) => catalogFilter[name];\n"]},"metadata":{},"sourceType":"module"}