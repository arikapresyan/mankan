{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { cartChangeProduct, resetCartReducer, changeCart, changeCartSuccess, changeCartError, cartSetAll, sendOrder, sendOrderSuccess, sendOrderError } from './action';\nimport { addLoadingItems } from './handleFunctions';\nconst initialState = {\n  loading: {},\n  error: false,\n  data: {},\n  order: {\n    loading: false,\n    error: false\n  },\n  cartSetCounter: 0\n};\nexport default handleActions({\n  [changeCart]: (state, {\n    payload: {\n      ids\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    loading: addLoadingItems(state, ids),\n    error: false\n  }),\n  [changeCartSuccess]: (state, {\n    payload: {\n      id,\n      data\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    loading: _objectSpread(_objectSpread({}, state.loading), {}, {\n      [id]: false\n    }),\n    error: false,\n    data\n  }),\n  [changeCartError]: (state, {\n    payload: {\n      ids\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    loading: _objectSpread(_objectSpread({}, state.loading), {}, {\n      loading: addLoadingItems(state, ids, true)\n    }),\n    error: true\n  }),\n  [cartChangeProduct]: (state, {\n    payload: {\n      id,\n      changes\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    data: _objectSpread(_objectSpread({}, state.data), {}, {\n      [id]: _objectSpread(_objectSpread({}, state[id]), changes)\n    })\n  }),\n  [cartSetAll]: (state, {\n    payload: {\n      cart\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    data: cart,\n    cartSetCounter: state.cartSetCounter + 1\n  }),\n  [resetCartReducer]: state => _objectSpread(_objectSpread({}, initialState), {}, {\n    cartSetCounter: state.cartSetCounter\n  }),\n  [sendOrder]: state => _objectSpread(_objectSpread({}, state), {}, {\n    order: {\n      error: false,\n      loading: true\n    }\n  }),\n  [sendOrderSuccess]: state => _objectSpread(_objectSpread({}, state), {}, {\n    data: {},\n    order: {\n      error: false,\n      loading: false\n    }\n  }),\n  [sendOrderError]: state => _objectSpread(_objectSpread({}, state), {}, {\n    order: {\n      error: true,\n      loading: false\n    }\n  })\n}, initialState);\nexport function getTotalPrice(store) {\n  const {\n    cart: {\n      data\n    }\n  } = store;\n  const keys = Object.keys(data);\n  let total = 0;\n  keys.forEach(key => {\n    total += (data[key] && data[key].price || 200) * (data[key] && data[key].count || 1);\n  });\n  return total;\n}\nexport function getTotalCount(store) {\n  const {\n    cart\n  } = store;\n  return Object.keys(cart.data).length;\n}\nexport const selectCart = ({\n  cart\n}) => cart.data;","map":{"version":3,"sources":["/var/www/mankan-front/store/cart/reducer.js"],"names":["handleActions","cartChangeProduct","resetCartReducer","changeCart","changeCartSuccess","changeCartError","cartSetAll","sendOrder","sendOrderSuccess","sendOrderError","addLoadingItems","initialState","loading","error","data","order","cartSetCounter","state","payload","ids","id","changes","cart","getTotalPrice","store","keys","Object","total","forEach","key","price","count","getTotalCount","length","selectCart"],"mappings":"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","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport {\n  cartChangeProduct,\n  resetCartReducer,\n  changeCart,\n  changeCartSuccess,\n  changeCartError,\n  cartSetAll,\n  sendOrder,\n  sendOrderSuccess,\n  sendOrderError,\n} from './action';\nimport { addLoadingItems } from './handleFunctions';\n\n\nconst initialState = {\n  loading: {},\n  error: false,\n  data: {},\n  order: {\n    loading: false,\n    error: false,\n  },\n  cartSetCounter: 0,\n};\n\nexport default handleActions({\n\n\n  [changeCart]: (state, { payload: { ids } }) => ({\n    ...state,\n    loading: addLoadingItems(state, ids),\n    error: false,\n  }),\n\n  [changeCartSuccess]: (state, { payload: { id, data } }) => ({\n    ...state,\n    loading: { ...state.loading, [id]: false },\n    error: false,\n    data,\n  }),\n  [changeCartError]: (state, { payload: { ids } }) => ({\n    ...state,\n    loading: { ...state.loading, loading: addLoadingItems(state, ids, true) },\n    error: true,\n  }),\n\n  [cartChangeProduct]: (\n    state,\n    { payload: { id, changes } },\n  ) => ({\n    ...state,\n    data: {\n      ...state.data,\n      [id]: {\n        ...state[id],\n        ...changes,\n      },\n    },\n  }),\n\n  [cartSetAll]: (state, { payload: { cart } }) => ({\n    ...state,\n    data: cart,\n    cartSetCounter: state.cartSetCounter + 1,\n  }),\n  [resetCartReducer]: (state) => ({ ...initialState, cartSetCounter: state.cartSetCounter }),\n  [sendOrder]: (state) => ({\n    ...state,\n    order: {\n      error: false,\n      loading: true,\n    },\n  }),\n  [sendOrderSuccess]: (state) => ({ ...state, data: {}, order: { error: false, loading: false } }),\n  [sendOrderError]: (state) => ({ ...state, order: { error: true, loading: false } }),\n\n}, initialState);\n\n\nexport function getTotalPrice(store) {\n  const { cart: { data } } = store;\n  const keys = Object.keys(data);\n  let total = 0;\n\n  keys.forEach((key) => {\n    total += ((data[key] && data[key].price) || 200) * ((data[key] && data[key].count) || 1);\n  });\n  return total;\n}\n\nexport function getTotalCount(store) {\n  const { cart } = store;\n  return Object.keys(cart.data).length;\n}\n\n\nexport const selectCart = ({ cart }) => cart.data;\n"]},"metadata":{},"sourceType":"module"}