{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Col, InputNumber, Slider } from 'antd';\nimport { useIntl } from 'react-intl';\nimport keys from '../../constants/keys';\n\nfunction sortNumber(a, b) {\n  return a - b;\n}\n\nfunction PriceSlider({\n  handleChange,\n  price,\n  mod\n}) {\n  const {\n    messages\n  } = useIntl();\n  const {\n    0: inputsValue,\n    1: setInputsValue\n  } = useState(price);\n  const {\n    0: timer,\n    1: setTimer\n  } = useState(null);\n  useEffect(() => {\n    clearTimeout(timer);\n    if (price[0] === inputsValue[0] && price[1] === inputsValue[1]) return;\n    setTimer(setTimeout(() => handleChange(inputsValue), 500));\n  }, [inputsValue]);\n  useEffect(() => {\n    if (price[0] === inputsValue[0] && price[1] === inputsValue[1]) return;\n    setInputsValue(price);\n  }, [price]);\n\n  const handleChangeSlider = values => {\n    const cloneValues = [...values];\n\n    if (!cloneValues[0] || !cloneValues[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      cloneValues[0] ? cloneValues[1] = cloneValues[0] : cloneValues[0] = cloneValues[1];\n    }\n\n    setInputsValue(cloneValues);\n  };\n\n  switch (mod) {\n    case 'Home':\n      return __jsx(React.Fragment, null, __jsx(Col, {\n        xs: 24,\n        sm: 24,\n        md: 12,\n        lg: 6,\n        xxl: 5,\n        className: \"choose_price clearfix\"\n      }, __jsx(\"h3\", null, messages['local.specify_price']), __jsx(\"div\", {\n        className: \"price_slider\"\n      }, __jsx(Col, null, __jsx(InputNumber, {\n        min: 1,\n        max: keys.DEFAULT_PRICE[1],\n        value: inputsValue[0],\n        onChange: value => {\n          setInputsValue([value, inputsValue[1]]);\n        },\n        placeholder: messages['local.min-price']\n      }), __jsx(\"span\", {\n        className: \"line\"\n      }), __jsx(InputNumber, {\n        min: 1,\n        max: keys.DEFAULT_PRICE[1],\n        value: inputsValue[1],\n        onChange: value => {\n          setInputsValue([inputsValue[0], value]);\n        },\n        placeholder: messages['local.max-price']\n      })), __jsx(Col, null, __jsx(Slider, {\n        range: true,\n        onChange: handleChangeSlider,\n        defaultValue: [],\n        value: inputsValue.sort(sortNumber),\n        min: 1,\n        max: keys.DEFAULT_PRICE[1]\n      })))), __jsx(Col, {\n        xs: 24,\n        className: \"choose_price_mobile\"\n      }, __jsx(InputNumber, {\n        placeholder: \"\\u057D\\u056F\\u0566\\u0562\\u0576\\u0561\\u056F\\u0561\\u0576 \\u0563\\u056B\\u0576\",\n        value: inputsValue[0],\n        onChange: value => {\n          setInputsValue([value, inputsValue[1]]);\n        }\n      }), __jsx(\"span\", {\n        className: \"line\"\n      }), __jsx(InputNumber, {\n        placeholder: \"\\u057E\\u0565\\u0580\\u057B\\u0576\\u0561\\u056F\\u0561\\u0576 \\u0563\\u056B\\u0576\",\n        value: inputsValue[1],\n        onChange: value => {\n          setInputsValue([inputsValue[0], value]);\n        }\n      })));\n\n    default:\n      return __jsx(\"div\", {\n        className: \"price_slider\"\n      }, __jsx(Col, null, __jsx(InputNumber, {\n        min: 1,\n        max: keys.DEFAULT_PRICE[1],\n        value: inputsValue[0],\n        onChange: value => {\n          setInputsValue([value, inputsValue[1]]);\n        }\n      }), __jsx(\"span\", {\n        className: \"line\"\n      }), __jsx(InputNumber, {\n        min: 1,\n        max: keys.DEFAULT_PRICE[1],\n        value: inputsValue[1],\n        onChange: value => {\n          setInputsValue([inputsValue[0], value]);\n        }\n      })), __jsx(Col, null, __jsx(Slider, {\n        range: true,\n        onChange: setInputsValue,\n        defaultValue: keys.DEFAULT_PRICE,\n        value: inputsValue.sort(sortNumber),\n        min: 1,\n        max: keys.DEFAULT_PRICE[1]\n      })));\n  }\n}\n\nexport default PriceSlider;","map":null,"metadata":{},"sourceType":"module"}