{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Layout from 'antd/lib/layout';\nimport { useIntl } from 'react-intl';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { UserProfileTab, AccompanyingProductList, ProductSlider } from '../../components';\nimport { getPageData } from '../../store/pages-data/action';\nimport { selectViewedProducts } from '../../store/viewed-products/reducer';\nimport { selectAuthorized, selectLang } from '../../store/user/reducer';\nimport { getViewedProducts } from '../../store/viewed-products/action';\nimport { getDataListByPagination } from '../../store/data-by-pagination/action';\nimport PagesLoader from '../../components/pages-loader/PagesLoader';\nconst {\n  Content\n} = Layout;\n\nconst getNextBonusPercent = boughtSum => {\n  boughtSum += 0;\n\n  if (boughtSum < 200000) {\n    return 3;\n  }\n\n  if (boughtSum >= 200000 && boughtSum < 500000) {\n    return 4;\n  }\n\n  return 4;\n};\n\nconst untilNextPercent = sum => {\n  if (sum < 200000) {\n    return 200000 - sum;\n  }\n\n  if (sum >= 200000 && sum < 500000) {\n    return 500000 - sum;\n  }\n\n  return 0;\n};\n\nfunction UserProfile({\n  pageData,\n  user,\n  buyProductList,\n  getDataListByPaginationAction\n}) {\n  const {\n    messages\n  } = useIntl();\n  const {\n    data: viewedProducts,\n    loading\n  } = useSelector(selectViewedProducts);\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectAuthorized);\n  const lang = useSelector(selectLang);\n  useEffect(() => {\n    dispatch(getViewedProducts({\n      limit: 12\n    }));\n    getDataListByPaginationAction({\n      page: buyProductList.page,\n      name: 'buyProductList'\n    });\n  }, [lang]);\n  if (!pageData.data || !isAuth) return __jsx(PagesLoader, null);\n  const nextPercent = getNextBonusPercent(user.boughtSum);\n  return __jsx(Content, {\n    className: \"profile_page\"\n  }, __jsx(\"div\", {\n    className: \"profile_tab_section p_t_30\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", {\n    className: \"section_title\"\n  }, messages['local.my_profile']), __jsx(UserProfileTab, {\n    nextBonusPercent: nextPercent,\n    untilNextBonusPercent: untilNextPercent(user.boughtSum),\n    bonusPercent: user.bonusPercent || 0,\n    bonus: user.bonus || 0,\n    buyProductList: buyProductList,\n    getDataListByPaginationAction: getDataListByPaginationAction\n  }))), __jsx(\"div\", {\n    className: \"slider_wrapper\"\n  }, !loading && __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", {\n    className: \"section_title\"\n  }, messages['local.viewed_products']), __jsx(ProductSlider, {\n    products: viewedProducts\n  }), __jsx(AccompanyingProductList, {\n    products: viewedProducts\n  }))));\n}\n\nUserProfile.getInitialProps = async ({\n  store\n}) => {\n  store.dispatch(getPageData({\n    page: 'profile'\n  })); // store.dispatch(getDataListByPagination({ name: 'buyProductList' }));\n\n  return {};\n};\n\nfunction mapStateToProps({\n  pageData,\n  user,\n  dataByPagination: {\n    buyProductList\n  }\n}) {\n  return {\n    pageData,\n    user,\n    buyProductList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getDataListByPaginationAction: getDataListByPagination\n})(UserProfile);","map":null,"metadata":{},"sourceType":"module"}