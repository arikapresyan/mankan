{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport VacancyItem from './VacancyItem';\nimport ApplyOnlineModal from '../modals/apply_online_modal/ApplyOnlineModal';\nimport AttachCvModal from '../modals/attach-cv-modal/AttachCvModal';\nimport { selectFullPageData, selectPageData } from '../../store/pages-data/reducer';\nimport PagesLoader from '../pages-loader/PagesLoader';\nimport EmptyData from './components/EmptyData';\n\nfunction VacancyList() {\n  const {\n    messages\n  } = useIntl();\n  const {\n    0: localeLoading,\n    1: setLocaleLoading\n  } = useState(true);\n  const {\n    rows: pageData\n  } = useSelector(selectPageData) || {};\n  const {\n    loading: pageLoading\n  } = useSelector(selectFullPageData);\n  const {\n    0: modalInfo,\n    1: setModalInfo\n  } = useState({\n    vacancyId: null,\n    modalId: null\n  });\n  const hideModal = useCallback(() => {\n    setModalInfo({\n      vacancyId: null,\n      modalId: null\n    });\n  }, []);\n  useEffect(() => {\n    if (Array.isArray(pageData)) {\n      setLocaleLoading(false);\n    }\n  }, [pageData]);\n  const newPageData = pageData && !!pageData.length && (pageData === null || pageData === void 0 ? void 0 : pageData.filter(({\n    langs\n  }) => {\n    var _langs$0$title, _langs$0$title$trim;\n\n    return !!((_langs$0$title = langs[0].title) === null || _langs$0$title === void 0 ? void 0 : (_langs$0$title$trim = _langs$0$title.trim) === null || _langs$0$title$trim === void 0 ? void 0 : _langs$0$title$trim.call(_langs$0$title));\n  })) || [];\n  if (pageLoading) return __jsx(PagesLoader, null);\n  if (!(pageData === null || pageData === void 0 ? void 0 : pageData.length) || !newPageData.length) return __jsx(EmptyData, null);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, messages['local.job_announcements']), __jsx(\"div\", {\n    className: \"vacancy_list\"\n  }, newPageData.map(vacancyData => __jsx(VacancyItem, {\n    key: `${vacancyData.id}vacancy`,\n    vacancyData: vacancyData,\n    setModalInfo: setModalInfo\n  })), __jsx(ApplyOnlineModal, {\n    visible: modalInfo.modalId === 2,\n    handleHideModal: hideModal,\n    vacancyId: modalInfo.vacancyId\n  }), __jsx(AttachCvModal, {\n    visible: modalInfo.modalId === 1,\n    vacancyId: modalInfo.vacancyId,\n    handleHideModal: hideModal\n  })));\n}\n\nexport default VacancyList;","map":null,"metadata":{},"sourceType":"module"}