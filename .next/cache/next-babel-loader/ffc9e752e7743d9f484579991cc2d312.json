{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/common/Search.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'antd/lib/input';\nimport Spin from 'antd/lib/spin';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { selectSearchData, selectSearchDataLoading } from '../../store/search/reducer';\nimport useOnClickOutside from '../../hooks/useOnOutClick';\nimport { searchProductReset } from '../../store/search/action';\nconst {\n  Search\n} = Input;\n\nfunction SearchComponent({\n  placeholder,\n  className,\n  onSearch,\n  style,\n  enterButton\n}) {\n  const {\n    0: searchValue,\n    1: setValue\n  } = useState();\n  const dispatch = useDispatch();\n\n  const resetSearch = () => dispatch(searchProductReset());\n\n  const router = useRouter();\n  useEffect(() => {\n    setValue('');\n  }, [router.pathname, router.asPath]);\n  const data = useSelector(selectSearchData);\n  const loading = useSelector(selectSearchDataLoading);\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(false);\n  const ref = useRef(null);\n\n  const handleSearch = value => onSearch({\n    searchWord: value\n  });\n\n  const handleFocus = ({\n    target: {\n      value\n    }\n  }) => {\n    resetSearch();\n\n    if (value) {\n      handleSearch(value);\n    }\n\n    setFocused(true);\n  };\n\n  const handleBlur = () => {\n    setFocused(false);\n  };\n\n  useOnClickOutside(ref, () => {\n    setFocused(false);\n  });\n  return __jsx(\"div\", {\n    className: \"myHeaderSearch\",\n    style: {\n      display: 'inline-block',\n      position: 'relative',\n      zIndex: '99'\n    },\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Input.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Search, {\n    value: searchValue,\n    onChange: ({\n      target: {\n        value: eventValue\n      }\n    }) => {\n      setValue(eventValue);\n    },\n    enterButton: enterButton,\n    className: className,\n    placeholder: placeholder,\n    onSearch: handleSearch,\n    onFocus: handleFocus,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      maxHeight: '300px',\n      overflow: 'auto',\n      background: '#fff',\n      padding: '5px 10px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, loading && __jsx(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), focused && (data || []).map(item => __jsx(\"div\", {\n    key: `search${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/product/[id]\",\n    as: `/product/${item.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    onClick: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, item.langs[0].name))))));\n}\n\nSearchComponent.propTypes = {\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  onSearch: PropTypes.func,\n  style: PropTypes.objectOf(Object),\n  enterButton: PropTypes.bool\n};\nSearchComponent.defaultProps = {\n  enterButton: undefined,\n  style: {}\n};\nexport default SearchComponent;","map":{"version":3,"sources":["/var/www/mankan-front/components/common/Search.jsx"],"names":["React","useState","useRef","useEffect","PropTypes","Input","Spin","useDispatch","useSelector","Link","useRouter","selectSearchData","selectSearchDataLoading","useOnClickOutside","searchProductReset","Search","SearchComponent","placeholder","className","onSearch","style","enterButton","searchValue","setValue","dispatch","resetSearch","router","pathname","asPath","data","loading","focused","setFocused","ref","handleSearch","value","searchWord","handleFocus","target","handleBlur","display","position","zIndex","eventValue","maxHeight","overflow","background","padding","width","map","item","id","langs","name","propTypes","string","func","objectOf","Object","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'antd/lib/input';\nimport Spin from 'antd/lib/spin';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport {\n  selectSearchData,\n  selectSearchDataLoading,\n} from '../../store/search/reducer';\nimport useOnClickOutside from '../../hooks/useOnOutClick';\nimport { searchProductReset } from '../../store/search/action';\n\nconst { Search } = Input;\n\nfunction SearchComponent({\n  placeholder,\n  className,\n  onSearch,\n  style,\n  enterButton,\n}) {\n  const [searchValue, setValue] = useState();\n  const dispatch = useDispatch();\n  const resetSearch = () => dispatch(searchProductReset());\n  const router = useRouter();\n\n  useEffect(() => {\n    setValue('');\n  }, [router.pathname, router.asPath]);\n  const data = useSelector(selectSearchData);\n  const loading = useSelector(selectSearchDataLoading);\n  const [focused, setFocused] = useState(false);\n  const ref = useRef(null);\n\n  const handleSearch = (value) => onSearch({ searchWord: value });\n  const handleFocus = ({ target: { value } }) => {\n    resetSearch();\n    if (value) {\n      handleSearch(value);\n    }\n    setFocused(true);\n  };\n  const handleBlur = () => {\n    setFocused(false);\n  };\n  useOnClickOutside(ref, () => {\n    setFocused(false);\n  });\n\n  return (\n    <div\n      className=\"myHeaderSearch\"\n      style={{\n        display: 'inline-block', position: 'relative', zIndex: '99',\n      }}\n      ref={ref}\n    >\n      <Input.Group>\n        <Search\n          value={searchValue}\n          onChange={({ target: { value: eventValue } }) => {\n            setValue(eventValue);\n          }}\n          enterButton={enterButton}\n          className={className}\n          placeholder={placeholder}\n          onSearch={handleSearch}\n          onFocus={handleFocus}\n          style={style}\n        />\n      </Input.Group>\n      <div\n        style={{\n          maxHeight: '300px',\n          overflow: 'auto',\n          background: '#fff',\n          padding: '5px 10px',\n          width: '100%',\n        }}\n      >\n        {loading && <Spin />}\n        {focused\n          && (data || []).map((item) => (\n            <div key={`search${item.id}`}>\n              <Link href=\"/product/[id]\" as={`/product/${item.id}`}>\n                <a onClick={handleBlur}>{item.langs[0].name}</a>\n              </Link>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nSearchComponent.propTypes = {\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  onSearch: PropTypes.func,\n  style: PropTypes.objectOf(Object),\n  enterButton: PropTypes.bool,\n};\nSearchComponent.defaultProps = {\n  enterButton: undefined,\n  style: {},\n};\n\nexport default SearchComponent;\n"]},"metadata":{},"sourceType":"module"}