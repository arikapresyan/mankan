{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Icon } from 'antd';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { toggleVisibility, hide } from '../../store/userEventListeners/action';\nimport CartWishlistConteiner from '../../components/header/CartWishlistConteiner';\n\nfunction MobileMenuBar(_ref) {\n  var toggleVisibilityAction = _ref.toggleVisibilityAction,\n      hideAction = _ref.hideAction,\n      isVisible = _ref.isVisible;\n  var router = useRouter();\n\n  var isPageActive = function isPageActive(path) {\n    return router.pathname === path && !isVisible.isFilterListOpen && !isVisible.isCategoryMenuOpen;\n  };\n\n  return __jsx(\"div\", {\n    className: \"mobile_menu_bar\"\n  }, __jsx(\"div\", {\n    className: \"menu_bar_item \".concat(isPageActive('/') ? 'is_active' : '')\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(Icon, {\n    type: \"home\"\n  })))), __jsx(\"div\", {\n    className: \"menu_bar_item \".concat(isVisible.isFilterListOpen ? 'is_active' : ''),\n    onClick: function onClick() {\n      hideAction({\n        name: 'isCategoryMenuOpen'\n      });\n      hideAction({\n        name: 'isCategorySubMenuOpen'\n      });\n      toggleVisibilityAction({\n        name: 'isFilterListOpen'\n      });\n    }\n  }, __jsx(Icon, {\n    type: \"search\"\n  })), __jsx(\"div\", {\n    className: \"menu_bar_item \".concat(isVisible.isCategoryMenuOpen ? 'is_active' : ''),\n    onClick: function onClick() {\n      hideAction({\n        name: 'isFilterListOpen'\n      });\n      hideAction({\n        name: 'isCategorySubMenuOpen'\n      });\n      toggleVisibilityAction({\n        name: 'isCategoryMenuOpen'\n      });\n    }\n  }, __jsx(Icon, {\n    type: \"menu\"\n  })), __jsx(CartWishlistConteiner, {\n    mode: \"mobil\",\n    isPageActive: isPageActive\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var isVisible = _ref2.userEventListeners.isVisible;\n  return {\n    isVisible: isVisible\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleVisibilityAction: toggleVisibility,\n  hideAction: hide\n})(MobileMenuBar);","map":null,"metadata":{},"sourceType":"module"}