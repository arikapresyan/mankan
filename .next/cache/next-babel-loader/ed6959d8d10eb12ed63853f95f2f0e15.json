{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchProductReset } from '../../../store/search/action';\nimport { selectSearchData, selectSearchDataLoading } from '../../../store/search/reducer';\nimport useOnClickOutside from '../../../hooks/useOnOutClick';\nimport { catalogMainSearch } from '../../../store/catalog-filter/action';\nimport { selectCatalogFilters } from '../../../store/catalog-filter/reducer'; // eslint-disable-next-line import/prefer-default-export\n\nexport const useMainSearch = ({\n  onSearch\n}) => {\n  const {\n    0: searchValue,\n    1: setValue\n  } = useState();\n  const {\n    searchWord\n  } = useSelector(selectCatalogFilters);\n  const dispatch = useDispatch();\n\n  const resetSearch = () => dispatch(searchProductReset());\n\n  const data = useSelector(selectSearchData);\n  const loading = useSelector(selectSearchDataLoading);\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(false);\n  const ref = useRef(null);\n\n  const handleSearch = value => {\n    if (value === null || value === void 0 ? void 0 : value.trim()) dispatch(catalogMainSearch({\n      searchWord: value\n    }));\n    resetSearch();\n    setFocused(false);\n  };\n\n  const handleSearchSuggested = value => {\n    onSearch({\n      searchWord: value\n    });\n  };\n\n  const handleFocus = ({\n    target: {\n      value\n    }\n  }) => {\n    resetSearch();\n\n    if (value && value !== searchValue) {\n      handleSearchSuggested(value);\n    }\n\n    if (value !== searchValue) setFocused(true);\n  };\n\n  const handleBlur = () => {\n    setFocused(false);\n  };\n\n  const handleChange = ({\n    target: {\n      value: eventValue\n    }\n  }) => {\n    setValue(eventValue);\n    handleSearchSuggested(eventValue);\n    setFocused(true);\n  };\n\n  useOnClickOutside(ref, () => {\n    setFocused(false);\n  });\n  useEffect(() => {\n    setValue(searchWord);\n  }, [searchWord]);\n  return {\n    searchValue,\n    data,\n    loading,\n    focused,\n    handleFocus,\n    handleBlur,\n    ref,\n    setValue,\n    handleChange,\n    handleSearch\n  };\n};","map":{"version":3,"sources":["/var/www/mankan-front/components/common/main-search/useMainSearch.js"],"names":["useEffect","useRef","useState","useDispatch","useSelector","searchProductReset","selectSearchData","selectSearchDataLoading","useOnClickOutside","catalogMainSearch","selectCatalogFilters","useMainSearch","onSearch","searchValue","setValue","searchWord","dispatch","resetSearch","data","loading","focused","setFocused","ref","handleSearch","value","trim","handleSearchSuggested","handleFocus","target","handleBlur","handleChange","eventValue"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,+BAA1D;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,oBAAT,QAAqC,uCAArC,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7C,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAA0BZ,QAAQ,EAAxC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAiBX,WAAW,CAACM,oBAAD,CAAlC;AACA,QAAMM,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,WAAW,GAAG,MAAMD,QAAQ,CAACX,kBAAkB,EAAnB,CAAlC;;AAGA,QAAMa,IAAI,GAAGd,WAAW,CAACE,gBAAD,CAAxB;AACA,QAAMa,OAAO,GAAGf,WAAW,CAACG,uBAAD,CAA3B;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMoB,GAAG,GAAGrB,MAAM,CAAC,IAAD,CAAlB;;AAEA,QAAMsB,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEC,IAAP,EAAJ,EAAmBT,QAAQ,CAACP,iBAAiB,CAAC;AAAEM,MAAAA,UAAU,EAAES;AAAd,KAAD,CAAlB,CAAR;AACnBP,IAAAA,WAAW;AACXI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAKA,QAAMK,qBAAqB,GAAIF,KAAD,IAAW;AACvCZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,UAAU,EAAES;AAAd,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMG,WAAW,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEJ,MAAAA;AAAF;AAAV,GAAD,KAA2B;AAC7CP,IAAAA,WAAW;;AACX,QAAIO,KAAK,IAAIA,KAAK,KAAKX,WAAvB,EAAoC;AAClCa,MAAAA,qBAAqB,CAACF,KAAD,CAArB;AACD;;AACD,QAAIA,KAAK,KAAKX,WAAd,EAA2BQ,UAAU,CAAC,IAAD,CAAV;AAC5B,GAND;;AAOA,QAAMQ,UAAU,GAAG,MAAM;AACvBR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMS,YAAY,GAAG,CAAC;AAAEF,IAAAA,MAAM,EAAE;AAAEJ,MAAAA,KAAK,EAAEO;AAAT;AAAV,GAAD,KAAuC;AAC1DjB,IAAAA,QAAQ,CAACiB,UAAD,CAAR;AACAL,IAAAA,qBAAqB,CAACK,UAAD,CAArB;AACAV,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJD;;AAMAb,EAAAA,iBAAiB,CAACc,GAAD,EAAM,MAAM;AAC3BD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFgB,CAAjB;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACC,UAAD,CAAR;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAKA,SAAO;AACLF,IAAAA,WADK;AAELK,IAAAA,IAFK;AAGLC,IAAAA,OAHK;AAILC,IAAAA,OAJK;AAKLO,IAAAA,WALK;AAMLE,IAAAA,UANK;AAOLP,IAAAA,GAPK;AAQLR,IAAAA,QARK;AASLgB,IAAAA,YATK;AAULP,IAAAA;AAVK,GAAP;AAYD,CA1DM","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchProductReset } from '../../../store/search/action';\nimport { selectSearchData, selectSearchDataLoading } from '../../../store/search/reducer';\nimport useOnClickOutside from '../../../hooks/useOnOutClick';\nimport { catalogMainSearch } from '../../../store/catalog-filter/action';\nimport { selectCatalogFilters } from '../../../store/catalog-filter/reducer';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useMainSearch = ({ onSearch }) => {\n  const [searchValue, setValue] = useState();\n  const { searchWord } = useSelector(selectCatalogFilters);\n  const dispatch = useDispatch();\n  const resetSearch = () => dispatch(searchProductReset());\n\n\n  const data = useSelector(selectSearchData);\n  const loading = useSelector(selectSearchDataLoading);\n  const [focused, setFocused] = useState(false);\n  const ref = useRef(null);\n\n  const handleSearch = (value) => {\n    if (value?.trim()) dispatch(catalogMainSearch({ searchWord: value }));\n    resetSearch();\n    setFocused(false);\n  };\n  const handleSearchSuggested = (value) => {\n    onSearch({ searchWord: value });\n  };\n  const handleFocus = ({ target: { value } }) => {\n    resetSearch();\n    if (value && value !== searchValue) {\n      handleSearchSuggested(value);\n    }\n    if (value !== searchValue) setFocused(true);\n  };\n  const handleBlur = () => {\n    setFocused(false);\n  };\n\n  const handleChange = ({ target: { value: eventValue } }) => {\n    setValue(eventValue);\n    handleSearchSuggested(eventValue);\n    setFocused(true);\n  };\n\n  useOnClickOutside(ref, () => {\n    setFocused(false);\n  });\n\n  useEffect(() => {\n    setValue(searchWord);\n  }, [searchWord]);\n\n\n  return {\n    searchValue,\n    data,\n    loading,\n    focused,\n    handleFocus,\n    handleBlur,\n    ref,\n    setValue,\n    handleChange,\n    handleSearch,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}