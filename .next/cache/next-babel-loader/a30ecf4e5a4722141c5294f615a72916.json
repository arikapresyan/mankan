{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchProductReset } from '../../../store/search/action';\nimport { selectSearchData, selectSearchDataLoading } from '../../../store/search/reducer';\nimport useOnClickOutside from '../../../hooks/useOnOutClick';\nimport { catalogMainSearch } from '../../../store/catalog-filter/action';\nimport { selectCatalogFilters } from '../../../store/catalog-filter/reducer'; // eslint-disable-next-line import/prefer-default-export\n\nexport var useMainSearch = function useMainSearch(_ref) {\n  _s();\n\n  var onSearch = _ref.onSearch;\n\n  var _useState = useState(),\n      searchValue = _useState[0],\n      setValue = _useState[1];\n\n  var _useSelector = useSelector(selectCatalogFilters),\n      searchWord = _useSelector.searchWord;\n\n  var dispatch = useDispatch();\n\n  var resetSearch = function resetSearch() {\n    return dispatch(searchProductReset());\n  };\n\n  var data = useSelector(selectSearchData);\n  var loading = useSelector(selectSearchDataLoading);\n\n  var _useState2 = useState(false),\n      focused = _useState2[0],\n      setFocused = _useState2[1];\n\n  var ref = useRef(null);\n\n  var handleSearch = function handleSearch(value) {\n    if (value === null || value === void 0 ? void 0 : value.trim()) dispatch(catalogMainSearch({\n      searchWord: value\n    }));\n    resetSearch();\n    setFocused(false);\n  };\n\n  var handleSearchSuggested = function handleSearchSuggested(value) {\n    onSearch({\n      searchWord: value\n    });\n  };\n\n  var handleFocus = function handleFocus(_ref2) {\n    var value = _ref2.target.value;\n    resetSearch();\n\n    if (value && value !== searchValue) {\n      handleSearchSuggested(value);\n    }\n\n    if (value !== searchValue) setFocused(true);\n  };\n\n  var handleBlur = function handleBlur() {\n    setFocused(false);\n  };\n\n  var handleChange = function handleChange(_ref3) {\n    var eventValue = _ref3.target.value;\n    setValue(eventValue);\n    handleSearchSuggested(eventValue);\n    setFocused(true);\n  };\n\n  useOnClickOutside(ref, function () {\n    setFocused(false);\n  });\n  useEffect(function () {\n    setValue(searchWord);\n  }, [searchWord]);\n  return {\n    searchValue: searchValue,\n    data: data,\n    loading: loading,\n    focused: focused,\n    handleFocus: handleFocus,\n    handleBlur: handleBlur,\n    ref: ref,\n    setValue: setValue,\n    handleChange: handleChange,\n    handleSearch: handleSearch\n  };\n};\n\n_s(useMainSearch, \"s9zKgEls7kU+sriYwPxcUzui4W4=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useOnClickOutside];\n});","map":{"version":3,"sources":["/var/www/mankan-front/components/common/main-search/useMainSearch.js"],"names":["useEffect","useRef","useState","useDispatch","useSelector","searchProductReset","selectSearchData","selectSearchDataLoading","useOnClickOutside","catalogMainSearch","selectCatalogFilters","useMainSearch","onSearch","searchValue","setValue","searchWord","dispatch","resetSearch","data","loading","focused","setFocused","ref","handleSearch","value","trim","handleSearchSuggested","handleFocus","target","handleBlur","handleChange","eventValue"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,+BAA1D;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,oBAAT,QAAqC,uCAArC,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACbV,QAAQ,EADK;AAAA,MACtCW,WADsC;AAAA,MACzBC,QADyB;;AAAA,qBAEtBV,WAAW,CAACM,oBAAD,CAFW;AAAA,MAErCK,UAFqC,gBAErCA,UAFqC;;AAG7C,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AACA,MAAMc,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,QAAQ,CAACX,kBAAkB,EAAnB,CAAd;AAAA,GAApB;;AAGA,MAAMa,IAAI,GAAGd,WAAW,CAACE,gBAAD,CAAxB;AACA,MAAMa,OAAO,GAAGf,WAAW,CAACG,uBAAD,CAA3B;;AAR6C,mBASfL,QAAQ,CAAC,KAAD,CATO;AAAA,MAStCkB,OATsC;AAAA,MAS7BC,UAT6B;;AAU7C,MAAMC,GAAG,GAAGrB,MAAM,CAAC,IAAD,CAAlB;;AAEA,MAAMsB,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,QAAIA,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEC,IAAP,EAAJ,EAAmBT,QAAQ,CAACP,iBAAiB,CAAC;AAAEM,MAAAA,UAAU,EAAES;AAAd,KAAD,CAAlB,CAAR;AACnBP,IAAAA,WAAW;AACXI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAKA,MAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,KAAD,EAAW;AACvCZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,UAAU,EAAES;AAAd,KAAD,CAAR;AACD,GAFD;;AAGA,MAAMG,WAAW,GAAG,SAAdA,WAAc,QAA2B;AAAA,QAAdH,KAAc,SAAxBI,MAAwB,CAAdJ,KAAc;AAC7CP,IAAAA,WAAW;;AACX,QAAIO,KAAK,IAAIA,KAAK,KAAKX,WAAvB,EAAoC;AAClCa,MAAAA,qBAAqB,CAACF,KAAD,CAArB;AACD;;AACD,QAAIA,KAAK,KAAKX,WAAd,EAA2BQ,UAAU,CAAC,IAAD,CAAV;AAC5B,GAND;;AAOA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,MAAMS,YAAY,GAAG,SAAfA,YAAe,QAAuC;AAAA,QAAnBC,UAAmB,SAApCH,MAAoC,CAA1BJ,KAA0B;AAC1DV,IAAAA,QAAQ,CAACiB,UAAD,CAAR;AACAL,IAAAA,qBAAqB,CAACK,UAAD,CAArB;AACAV,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJD;;AAMAb,EAAAA,iBAAiB,CAACc,GAAD,EAAM,YAAM;AAC3BD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFgB,CAAjB;AAIArB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,QAAQ,CAACC,UAAD,CAAR;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAKA,SAAO;AACLF,IAAAA,WAAW,EAAXA,WADK;AAELK,IAAAA,IAAI,EAAJA,IAFK;AAGLC,IAAAA,OAAO,EAAPA,OAHK;AAILC,IAAAA,OAAO,EAAPA,OAJK;AAKLO,IAAAA,WAAW,EAAXA,WALK;AAMLE,IAAAA,UAAU,EAAVA,UANK;AAOLP,IAAAA,GAAG,EAAHA,GAPK;AAQLR,IAAAA,QAAQ,EAARA,QARK;AASLgB,IAAAA,YAAY,EAAZA,YATK;AAULP,IAAAA,YAAY,EAAZA;AAVK,GAAP;AAYD,CA1DM;;GAAMZ,a;UAEYP,W,EACND,W,EAIJC,W,EACGA,W,EA6BhBI,iB","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchProductReset } from '../../../store/search/action';\nimport { selectSearchData, selectSearchDataLoading } from '../../../store/search/reducer';\nimport useOnClickOutside from '../../../hooks/useOnOutClick';\nimport { catalogMainSearch } from '../../../store/catalog-filter/action';\nimport { selectCatalogFilters } from '../../../store/catalog-filter/reducer';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useMainSearch = ({ onSearch }) => {\n  const [searchValue, setValue] = useState();\n  const { searchWord } = useSelector(selectCatalogFilters);\n  const dispatch = useDispatch();\n  const resetSearch = () => dispatch(searchProductReset());\n\n\n  const data = useSelector(selectSearchData);\n  const loading = useSelector(selectSearchDataLoading);\n  const [focused, setFocused] = useState(false);\n  const ref = useRef(null);\n\n  const handleSearch = (value) => {\n    if (value?.trim()) dispatch(catalogMainSearch({ searchWord: value }));\n    resetSearch();\n    setFocused(false);\n  };\n  const handleSearchSuggested = (value) => {\n    onSearch({ searchWord: value });\n  };\n  const handleFocus = ({ target: { value } }) => {\n    resetSearch();\n    if (value && value !== searchValue) {\n      handleSearchSuggested(value);\n    }\n    if (value !== searchValue) setFocused(true);\n  };\n  const handleBlur = () => {\n    setFocused(false);\n  };\n\n  const handleChange = ({ target: { value: eventValue } }) => {\n    setValue(eventValue);\n    handleSearchSuggested(eventValue);\n    setFocused(true);\n  };\n\n  useOnClickOutside(ref, () => {\n    setFocused(false);\n  });\n\n  useEffect(() => {\n    setValue(searchWord);\n  }, [searchWord]);\n\n\n  return {\n    searchValue,\n    data,\n    loading,\n    focused,\n    handleFocus,\n    handleBlur,\n    ref,\n    setValue,\n    handleChange,\n    handleSearch,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}