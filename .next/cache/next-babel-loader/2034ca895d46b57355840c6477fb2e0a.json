{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport dynamic from 'next/dynamic';\nimport { getMenuList, getMenuListReset } from '../../../store/menu-list/action';\nimport { menuItemWithSubmenu as mi, onlyClickable as onC } from '../handleFunctions';\nimport useHoverHeader from '../useHoverHeader';\nvar ProductCategoryInfo = dynamic(function () {\n  return import('./ProductCategoryInfo');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./ProductCategoryInfo')];\n    },\n    modules: ['./ProductCategoryInfo']\n  }\n});\n\nfunction ProductCategoryList(_ref) {\n  var menuList = _ref.menuList;\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var _useHoverHeader = useHoverHeader(),\n      mainHref = _useHoverHeader.mainHref,\n      _onMouseEnter = _useHoverHeader.onMouseEnter,\n      showMenu = _useHoverHeader.showMenu,\n      onMouseLeave = _useHoverHeader.onMouseLeave;\n\n  var menuItemWithSubmenu = mi({\n    messages: messages\n  });\n  var onlyClickable = onC({\n    messages: messages\n  });\n  return __jsx(\"div\", {\n    className: \"product_categories_container clearfix\"\n  }, __jsx(\"div\", {\n    className: \"container \",\n    onMouseLeave: onMouseLeave\n  }, __jsx(\"div\", {\n    className: \"category_menu clearfix\"\n  }, menuItemWithSubmenu.map(function (menuItem, index) {\n    return __jsx(\"div\", {\n      className: \"category_menu_item\" // eslint-disable-next-line react/no-array-index-key\n      ,\n      key: \"bigSizeMenuItem\".concat(index),\n      onMouseEnter: function onMouseEnter() {\n        _onMouseEnter(menuList, menuItem);\n      }\n    }, __jsx(Link, {\n      href: menuItem.href\n    }, __jsx(\"a\", null, __jsx(\"span\", {\n      className: \"category_icon\"\n    }, __jsx(\"img\", {\n      src: menuItem.icon,\n      alt: \"\",\n      className: \"icon\"\n    }), __jsx(\"img\", {\n      src: menuItem.hoverIcon,\n      alt: \"\",\n      className: \"icon_hover\"\n    })), menuItem.text)));\n  }), showMenu && __jsx(ProductCategoryInfo, {\n    className: showMenu ? 'show' : '',\n    mainHref: mainHref\n  }), onlyClickable.map(function (menuItem, index) {\n    return __jsx(\"div\", {\n      className: \"category_menu_item\",\n      key: \"bigSizeMenuItem\".concat(index + 5),\n      onMouseEnter: onMouseLeave\n    }, __jsx(Link, {\n      href: menuItem.href,\n      as: menuItem.as\n    }, __jsx(\"a\", null, __jsx(\"span\", {\n      className: \"category_icon\"\n    }, __jsx(\"img\", {\n      src: menuItem.icon,\n      alt: \"\",\n      className: \"icon\"\n    }), __jsx(\"img\", {\n      src: menuItem.hoverIcon,\n      alt: \"\",\n      className: \"icon_hover\"\n    })), menuItem.text)));\n  }))));\n}\n\nfunction mapStateToProps(_ref2) {\n  var menuList = _ref2.menuList;\n  return {\n    menuList: menuList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getMenuListAction: getMenuList,\n  getMenuListResetAction: getMenuListReset\n})(ProductCategoryList);","map":null,"metadata":{},"sourceType":"module"}