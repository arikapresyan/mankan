{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport { useIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RecommendedList, ProductSlider, CartList, Total, Breadcrumb } from '../../components';\nimport { getPageData, resetPageData } from '../../store/pages-data/action';\nimport AccompanyingProducts from '../../components/accompanying-products/AccompanyingProducts';\nimport PagesLoader from '../../components/pages-loader/PagesLoader';\nimport Empty from '../../components/empty/Empty';\nconst {\n  Content\n} = Layout;\n\nfunction Cart({\n  cart,\n  getPageDataAction,\n  pageData,\n  bonusPercent\n}) {\n  var _pageData$data, _pageData$data$cartDa, _pageData$data2, _pageData$data3;\n\n  const {\n    0: localLoading,\n    1: setLocalLoading\n  } = useState(true);\n  const cartsLength = Object.keys(cart.data).length;\n  const {\n    messages\n  } = useIntl();\n  useEffect(() => {\n    setLocalLoading(true);\n    getPageDataAction({\n      page: 'cart',\n      data: {\n        cart: (cart === null || cart === void 0 ? void 0 : cart.data) || {}\n      }\n    });\n  }, [getPageDataAction, !!cartsLength, cart.cartSetCounter]);\n  useEffect(() => {\n    if (pageData.data && !pageData.loading) {\n      setLocalLoading(false);\n    }\n  }, [pageData.data, pageData.loading]);\n  if (localLoading) return __jsx(PagesLoader, null);\n  if (!cartsLength) return __jsx(Empty, {\n    text: messages['locale.no_items_in_the_cart']\n  });\n  const fullCartInfo = [];\n  pageData === null || pageData === void 0 ? void 0 : (_pageData$data = pageData.data) === null || _pageData$data === void 0 ? void 0 : (_pageData$data$cartDa = _pageData$data.cartData) === null || _pageData$data$cartDa === void 0 ? void 0 : _pageData$data$cartDa.forEach(cartItem => {\n    if (!cart.data[cartItem.id]) return null;\n    fullCartInfo.push(_objectSpread({}, cartItem, {\n      count: cart.data[cartItem.id].count\n    }));\n    return true;\n  });\n  return __jsx(Content, {\n    className: \"cart_page\"\n  }, __jsx(\"div\", {\n    className: \"cart_wrapper clearfix pt_29\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Breadcrumb, null)), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", {\n    className: \"section_title\"\n  }, ' ', messages['local.my_basket']), __jsx(Row, {\n    gutter: [32, {\n      xs: 32,\n      sm: 32,\n      md: 32,\n      lg: 32\n    }]\n  }, __jsx(Col, {\n    md: 24,\n    lg: 24,\n    xl: 16,\n    xxl: 17\n  }, __jsx(CartList, {\n    cart: fullCartInfo\n  })), __jsx(Col, {\n    md: 24,\n    lg: 24,\n    xl: 8,\n    xxl: 7\n  }, __jsx(Total, {\n    cartData: fullCartInfo,\n    bonusPercent: bonusPercent\n  }))))), (pageData === null || pageData === void 0 ? void 0 : (_pageData$data2 = pageData.data) === null || _pageData$data2 === void 0 ? void 0 : _pageData$data2.bugsData) && !!pageData.data.bugsData.length && __jsx(\"div\", {\n    className: \"recommended_product_section clearfix\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", {\n    className: \"section_title\"\n  }, messages['local.branded_paper_bags'])), __jsx(\"div\", {\n    className: \"recommended_product_wrapper\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(RecommendedList, {\n    recommendedList: pageData === null || pageData === void 0 ? void 0 : (_pageData$data3 = pageData.data) === null || _pageData$data3 === void 0 ? void 0 : _pageData$data3.bugsData\n  })))), __jsx(AccompanyingProducts, null));\n}\n\nconst mapStateToProps = ({\n  cart,\n  pageData,\n  user: {\n    bonusPercent\n  }\n}) => ({\n  cart,\n  pageData,\n  bonusPercent\n});\n\nexport default connect(mapStateToProps, {\n  getPageDataAction: getPageData,\n  resetPageDataAction: resetPageData\n})(Cart);","map":null,"metadata":{},"sourceType":"module"}