{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workSearchProduct),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchSearchProduct),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(_callee);\n\nimport { all, takeLatest, call, put, select, delay } from 'redux-saga/effects';\nimport { searchProduct, searchProductError, searchProductSuccess } from './action';\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\n\nfunction getSearchedProductsRequest(_ref) {\n  var searchWord = _ref.searchWord,\n      lang = _ref.lang;\n  return Axios.request({\n    method: 'post',\n    url: '/api/product/homePage/search',\n    data: {\n      searchWord: searchWord,\n      lang: lang\n    }\n  });\n}\n\nfunction workSearchProduct(_ref2) {\n  var searchWord, lang, _yield$call, result;\n\n  return _regeneratorRuntime.wrap(function workSearchProduct$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          searchWord = _ref2.payload.searchWord;\n          _context.next = 3;\n          return delay(200);\n\n        case 3:\n          _context.next = 5;\n          return select(selectLang);\n\n        case 5:\n          lang = _context.sent;\n          _context.prev = 6;\n          _context.next = 9;\n          return call(getSearchedProductsRequest, {\n            searchWord: searchWord,\n            lang: lang\n          });\n\n        case 9:\n          _yield$call = _context.sent;\n          result = _yield$call.data.result;\n          _context.next = 13;\n          return put(searchProductSuccess({\n            data: result\n          }));\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](6);\n          _context.next = 19;\n          return put(searchProductError());\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[6, 15]]);\n}\n\nfunction watchSearchProduct() {\n  return _regeneratorRuntime.wrap(function watchSearchProduct$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(searchProduct, workSearchProduct);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchSearchProduct()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"module"}