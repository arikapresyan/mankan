{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-return-assign */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { map, first } from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport nextId from 'react-id-generator';\nvar ArrowIcon = '/images/icons/arrow.png';\n\nvar ProductThumbnailSlider = function ProductThumbnailSlider(_ref) {\n  var img = _ref.images,\n      onPreviewImage = _ref.onPreviewImage;\n\n  var _useState = useState({\n    images: img.map(function (image) {\n      return _objectSpread(_objectSpread({}, image), {}, {\n        id: nextId()\n      });\n    }),\n    start: 0,\n    finish: 3,\n    selectedItem: null,\n    index: 0\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(null),\n      changeInterval = _useState2[0],\n      setChangeInterval = _useState2[1];\n\n  var handleOnPreview = function handleOnPreview(item, userClick) {\n    var index = state.images.findIndex(function (i) {\n      return i === item;\n    });\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      start: index - 2 >= 0 ? index - 2 : 0,\n      finish: index + 3,\n      selectedItem: item,\n      index: index\n    }));\n    onPreviewImage(item);\n    if (userClick) clearInterval(changeInterval);\n  };\n\n  useEffect(function () {\n    var images = state.images;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      selectedItem: first(images),\n      index: 0\n    }));\n    onPreviewImage(first(images)); // let counter = 0;\n\n    var intervalId = setInterval(function () {// let item = state.images[0];\n      //\n      // if (counter + 1 < state.images.length) {\n      //   counter += 1;\n      //   item = state.images[counter];\n      // } else {\n      //   counter = 0;\n      // }\n      // handleOnPreview(item);\n    }, 7000);\n    setChangeInterval(intervalId);\n    return function () {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  var handleOnUp = function handleOnUp() {\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        start: prevState.start += 1,\n        finish: prevState.finish += 1,\n        index: prevState.index + 1,\n        selectedItem: prevState.images[prevState.index + 1]\n      });\n    });\n    handleOnPreview(state.images[state.index + 1], 1);\n  };\n\n  var handleOnDown = function handleOnDown() {\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        start: prevState.start -= 1,\n        finish: prevState.finish -= 1,\n        index: prevState.index - 1,\n        selectedItem: prevState.images[prevState.index - 1]\n      });\n    });\n    handleOnPreview(state.images[state.index - 1], 1);\n  };\n\n  var renderImages = function renderImages() {\n    var start = state.start,\n        finish = state.finish;\n    var visibleImages = state.images.filter(function (item, index) {\n      return index >= start && index <= finish;\n    });\n    return visibleImages;\n  };\n\n  var validationForUp = useMemo(function () {\n    var _state$images;\n\n    return state.finish - 2 < ((_state$images = state.images) === null || _state$images === void 0 ? void 0 : _state$images.length);\n  }, [state.finish, state.images]);\n  var validationForDown = useMemo(function () {\n    return state.index !== 0;\n  }, [state]);\n  return __jsx(\"div\", {\n    className: \"thumbnail_slider\"\n  }, validationForDown && __jsx(\"span\", {\n    className: \"prev\",\n    onClick: handleOnDown\n  }, __jsx(\"img\", {\n    src: ArrowIcon,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"thumbnail_image_list\"\n  }, state.images.length > 0 && map(renderImages(), function (item, index) {\n    return __jsx(\"div\", {\n      className: \"thumb_image\",\n      key: index,\n      style: _objectSpread(_objectSpread({}, state.selectedItem && item.id === state.selectedItem.id ? {\n        border: '3px solid red'\n      } : {}), {}, {\n        cursor: 'pointer'\n      })\n    }, __jsx(\"img\", {\n      src: item.url,\n      alt: item.alt,\n      title: item.title,\n      onClick: function onClick() {\n        return handleOnPreview(item, 1);\n      }\n    }));\n  })), validationForUp && __jsx(\"span\", {\n    className: \"next\",\n    style: {\n      zIndex: '9'\n    },\n    onClick: handleOnUp\n  }, __jsx(\"img\", {\n    src: ArrowIcon,\n    alt: \"\"\n  })));\n};\n\nexport default ProductThumbnailSlider;","map":null,"metadata":{},"sourceType":"module"}