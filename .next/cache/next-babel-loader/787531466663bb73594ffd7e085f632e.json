{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Input, Spin } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { selectSearchData, selectSearchDataLoading } from '../../store/search/reducer';\nimport useOnClickOutside from '../../hooks/useOnOutClick';\nimport { searchProductReset } from '../../store/search/action';\nconst {\n  Search\n} = Input;\n\nfunction SearchComponent({\n  placeholder,\n  className,\n  onSearch,\n  style,\n  enterButton\n}) {\n  const {\n    0: searchValue,\n    1: setValue\n  } = useState();\n  const dispatch = useDispatch();\n\n  const resetSearch = () => dispatch(searchProductReset());\n\n  const router = useRouter();\n  useEffect(() => {\n    setValue('');\n  }, [router.pathname, router.asPath]);\n  const data = useSelector(selectSearchData);\n  const loading = useSelector(selectSearchDataLoading);\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(false);\n  const ref = useRef(null);\n\n  const handleSearch = value => onSearch({\n    searchWord: value\n  });\n\n  const handleFocus = ({\n    target: {\n      value\n    }\n  }) => {\n    resetSearch();\n\n    if (value) {\n      handleSearch(value);\n    }\n\n    setFocused(true);\n  };\n\n  const handleBlur = () => {\n    setFocused(false);\n  };\n\n  useOnClickOutside(ref, () => {\n    setFocused(false);\n  });\n  return __jsx(\"div\", {\n    className: \"myHeaderSearch\",\n    style: {\n      display: 'inline-block',\n      position: 'relative',\n      zIndex: '9'\n    },\n    ref: ref\n  }, __jsx(Input.Group, null, __jsx(Search, {\n    value: searchValue,\n    onChange: ({\n      target: {\n        value: eventValue\n      }\n    }) => {\n      setValue(eventValue);\n    },\n    enterButton: enterButton,\n    className: className,\n    placeholder: placeholder,\n    onSearch: handleSearch,\n    onFocus: handleFocus,\n    style: style\n  })), __jsx(\"div\", {\n    style: {\n      maxHeight: '300px',\n      overflow: 'auto',\n      background: '#fff',\n      padding: '5px 10px'\n    }\n  }, loading && __jsx(Spin, null), focused && (data || []).map(item => __jsx(\"div\", {\n    key: `search${item.id}`\n  }, __jsx(Link, {\n    href: \"/product/[id]\",\n    as: `/product/${item.id}`\n  }, __jsx(\"a\", {\n    onClick: handleBlur\n  }, item.langs[0].name))))));\n}\n\nSearchComponent.defaultProps = {\n  enterButton: undefined,\n  style: {}\n};\nexport default SearchComponent;","map":null,"metadata":{},"sourceType":"module"}