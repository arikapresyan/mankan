{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/catalog/filter-items/ClassificationFilter.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Checkbox from 'antd/lib/checkbox';\nimport Row from 'antd/lib/row';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nfunction ClassificationFilter({\n  classification,\n  onChange,\n  extraFilters\n}) {\n  const {\n    messages\n  } = useIntl();\n\n  const changeValues = values => {\n    onChange([values[values.length - 1]]);\n  };\n\n  return __jsx(\"div\", {\n    className: \"sidebar_info_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"sidebar_info_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, messages['local.specification']), __jsx(\"div\", {\n    className: \"option_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox.Group, {\n    value: classification,\n    onChange: changeValues,\n    className: \"classification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(Checkbox, {\n    value: \"isNew\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, messages['local.new_products']), __jsx(Checkbox, {\n    value: \"percent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, messages['local.discounted_assortment']), __jsx(Checkbox, {\n    value: \"bestSeller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, messages['local.best_selling']), __jsx(Checkbox, {\n    value: \"priceByAsc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, messages['local.price_by_increase']), extraFilters.map(({\n    id,\n    name\n  }) => __jsx(Checkbox, {\n    value: `${id}`,\n    key: `${id}extra `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, name, ' ')), __jsx(Checkbox, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, messages['local.all_of'])))));\n}\n\nfunction pamStateToProps({\n  catalogFilter: {\n    classification\n  }\n}) {\n  return {\n    classification\n  };\n}\n\nClassificationFilter.propTypes = {\n  classification: PropTypes.array,\n  onChange: PropTypes.func,\n  extraFilters: PropTypes.array\n};\nClassificationFilter.defaultProps = {\n  extraFilters: {}\n};\nexport default connect(pamStateToProps)(ClassificationFilter);","map":{"version":3,"sources":["/var/www/mankan-front/components/catalog/filter-items/ClassificationFilter.js"],"names":["React","Checkbox","Row","connect","PropTypes","useIntl","ClassificationFilter","classification","onChange","extraFilters","messages","changeValues","values","length","map","id","name","pamStateToProps","catalogFilter","propTypes","array","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport  Checkbox  from 'antd/lib/checkbox';\r\nimport Row  from 'antd/lib/row';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useIntl } from 'react-intl';\r\n\r\n\r\nfunction ClassificationFilter({ classification, onChange, extraFilters }) {\r\n  const { messages } = useIntl();\r\n\r\n  const changeValues = (values) => {\r\n    onChange([values[values.length - 1]]);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"sidebar_info_box\">\r\n      <h2 className=\"sidebar_info_title\">{messages['local.specification']}</h2>\r\n      <div className=\"option_list\">\r\n        <Checkbox.Group\r\n          value={classification}\r\n          onChange={changeValues}\r\n          className=\"classification\"\r\n        >\r\n          <Row>\r\n            <Checkbox value=\"isNew\">{messages['local.new_products']}</Checkbox>\r\n            <Checkbox value=\"percent\">{messages['local.discounted_assortment']}</Checkbox>\r\n            <Checkbox value=\"bestSeller\">{messages['local.best_selling']}</Checkbox>\r\n            <Checkbox value=\"priceByAsc\">{messages['local.price_by_increase']}</Checkbox>\r\n            {extraFilters.map(({ id, name }) => (\r\n              <Checkbox value={`${id}`} key={`${id}extra `}>\r\n                {name}\r\n                {' '}\r\n              </Checkbox>\r\n            ))}\r\n            <Checkbox value=\"All\">{messages['local.all_of']}</Checkbox>\r\n          </Row>\r\n        </Checkbox.Group>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction pamStateToProps({ catalogFilter: { classification } }) {\r\n  return {\r\n    classification,\r\n  };\r\n}\r\n\r\nClassificationFilter.propTypes = {\r\n  classification: PropTypes.array,\r\n  onChange: PropTypes.func,\r\n  extraFilters: PropTypes.array,\r\n};\r\nClassificationFilter.defaultProps = {\r\n  extraFilters: {},\r\n};\r\n\r\nexport default connect(pamStateToProps)(ClassificationFilter);\r\n"]},"metadata":{},"sourceType":"module"}