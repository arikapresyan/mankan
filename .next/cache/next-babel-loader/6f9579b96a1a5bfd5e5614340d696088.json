{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport Checkbox from 'antd/lib/checkbox';\nimport { useSelector } from 'react-redux';\nimport useCartActions from '../../../store/cart/useCartActions';\nimport { getBonus, addToCartObj } from '../../../constants/utils';\nimport { selectCart } from '../../../store/cart/reducer';\n\nvar useProductFullInfo = function useProductFullInfo(_ref) {\n  var product = _ref.product,\n      user = _ref.user,\n      wishlistChangeItemAction = _ref.wishlistChangeItemAction;\n  var cart = useSelector(selectCart);\n  var isInCart = !!(cart === null || cart === void 0 ? void 0 : cart[product.id]);\n\n  var _useState = useState(false),\n      hasBattery = _useState[0],\n      setHasBattery = _useState[1];\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var _useState2 = useState(1),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var text = useCallback(function () {\n    return __jsx(\"span\", null, messages['local.modal_battery']);\n  }, [messages['local.modal_battery']]);\n  var text2 = useCallback(function () {\n    return __jsx(\"span\", null, messages['local.can_use_bonus_if']);\n  }, [messages['local.can_use_bonus_if']]);\n\n  var _useCartActions = useCartActions(),\n      cartAddProductAction = _useCartActions.cartAddProductAction;\n\n  var name = useMemo(function () {\n    return product.langs[0].name;\n  }, [product.name]);\n  var Price = useCallback(function () {\n    return __jsx(\"span\", {\n      key: \"product_price\",\n      className: \"product_price\"\n    }, product.price * count, ' ', messages['local.dr'], \"\\u2024\");\n  }, [product.price, count]);\n  var LastPrice = useCallback(function () {\n    return product.xmlPrice !== product.price ? __jsx(\"span\", {\n      className: \"old_price\"\n    }, product.xmlPrice * count, ' ', messages['local.dr'], \"\\u2024\") : null;\n  }, [product.xmlPrice, product.price, count]);\n  var bonus = useMemo(function () {\n    return getBonus(product.price, user.bonusPercent || 2, count);\n  }, [user, product.price, user.bonusPercent, count]);\n  var battery = useMemo(function () {\n    var bat = product.accessories.find(function (accessory) {\n      return accessory.ProductAccessoriesMap.type === 'battery';\n    });\n    if (bat === null || bat === void 0 ? void 0 : bat.xmlCount) return bat;\n    return null;\n  }, []);\n  var batteryPrice = useMemo(function () {\n    return battery && battery.price * count * battery.ProductAccessoriesMap.count;\n  }, [battery, count]);\n  var AddBattery = useCallback(function () {\n    return battery ? __jsx(\"div\", {\n      className: \"add_prod\"\n    }, __jsx(Checkbox, {\n      checked: hasBattery,\n      onChange: function onChange() {\n        return setHasBattery(!hasBattery);\n      }\n    }, messages['local.add_batteries'])) : '';\n  }, [hasBattery, battery, setHasBattery, messages['local.add_batteries']]);\n\n  var addToCart = function addToCart(redirect) {\n    cartAddProductAction(addToCartObj({\n      hasBattery: hasBattery,\n      battery: battery,\n      count: count,\n      product: product\n    }), redirect);\n  };\n\n  var addToCartAndRedirect = function addToCartAndRedirect() {\n    addToCart(true);\n  };\n\n  var changeWishlist = useCallback(function () {\n    wishlistChangeItemAction({\n      productId: product.id\n    });\n  });\n  return {\n    setHasBattery: setHasBattery,\n    AddBattery: AddBattery,\n    hasBattery: hasBattery,\n    text: text,\n    setCount: setCount,\n    text2: text2,\n    count: count,\n    messages: messages,\n    name: name,\n    Price: Price,\n    LastPrice: LastPrice,\n    bonus: bonus,\n    isInCart: isInCart,\n    batteryPrice: batteryPrice,\n    addToCart: addToCart,\n    addToCartAndRedirect: addToCartAndRedirect,\n    changeWishlist: changeWishlist,\n    xmlCount: product.xmlCount\n  };\n};\n\nexport default useProductFullInfo;","map":null,"metadata":{},"sourceType":"module"}