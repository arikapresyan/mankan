{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport useCartActions from '../../store/cart/useCartActions';\nimport keys from '../../constants/keys';\nimport ProductQuantityBox from './components/ProductQuantityBox';\nimport RemoveProductButton from './components/RemoveProductButton';\nimport ProductName from './components/ProductName';\nimport ProductOldPrice from './components/ProductOldPrice';\nimport ProductImage from './components/ProductImage';\nvar IMAGE_POSTFIX = keys.IMAGE_POSTFIX;\n\nfunction IndexCartItem(_ref) {\n  var product = _ref.product,\n      mode = _ref.mode;\n  var price = product.price,\n      id = product.id,\n      count = product.count,\n      xmlPrice = product.xmlPrice,\n      percent = product.percent,\n      xmlCount = product.xmlCount;\n\n  var _useCartActions = useCartActions(),\n      cartRemoveProductAction = _useCartActions.cartRemoveProductAction,\n      cartChangeProductAction = _useCartActions.cartChangeProductAction;\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var totalCount = useMemo(function () {\n    return (count || 1) * price;\n  }, [price, count]);\n  var oldPrice = useMemo(function () {\n    return percent ? xmlPrice * (count || 1) : null;\n  }, [percent, xmlPrice, count]);\n  var firstPhoto = useMemo(function () {\n    return product.photos.sort(function (a, b) {\n      return a.order - b.order;\n    })[0];\n  }, [product.photos]);\n  var src = useMemo(function () {\n    return \"\".concat(IMAGE_POSTFIX + id, \"/\").concat(firstPhoto.url);\n  }, [IMAGE_POSTFIX, id, firstPhoto.url]);\n  var name = useMemo(function () {\n    return product.langs[0].name;\n  }, [product.langs[0].name]);\n  var changeCount = useCallback(function (value) {\n    return cartChangeProductAction({\n      id: id,\n      changes: {\n        count: value\n      }\n    });\n  }, [id]);\n  var removeItem = useCallback(function () {\n    cartRemoveProductAction({\n      id: id\n    });\n  }, [id]);\n\n  var ProductPrice = function ProductPrice() {\n    return __jsx(\"span\", {\n      className: \"product_price\"\n    }, \"\".concat(totalCount, \" \").concat(messages['local.dr'], \"\\u2024\"));\n  };\n\n  switch (mode) {\n    case 'mobile':\n      return __jsx(\"div\", {\n        className: \"cart_item cart_item_mobile\"\n      }, __jsx(ProductImage, {\n        src: src,\n        id: id\n      }), __jsx(\"div\", {\n        className: \"prod_info\"\n      }, __jsx(\"div\", null, __jsx(ProductName, {\n        name: name,\n        id: id\n      }), __jsx(\"div\", {\n        className: \"product_price_box\"\n      }, __jsx(ProductPrice, null), __jsx(ProductOldPrice, {\n        text: oldPrice + messages['local.dr'],\n        oldPrice: oldPrice\n      }))), __jsx(ProductQuantityBox, {\n        count: count,\n        handleChange: changeCount,\n        xmlCount: xmlCount\n      })), __jsx(RemoveProductButton, {\n        handleClick: removeItem\n      }));\n\n    default:\n      return __jsx(\"div\", {\n        className: \"cart_item cart_item_web\"\n      }, __jsx(\"span\", {\n        className: \"line line_1\"\n      }), __jsx(\"span\", {\n        className: \"line line_2\"\n      }), __jsx(\"span\", {\n        className: \"line line_3\"\n      }), __jsx(ProductImage, {\n        src: src,\n        id: id\n      }), __jsx(ProductName, {\n        name: name,\n        id: id\n      }), __jsx(ProductQuantityBox, {\n        count: count,\n        handleChange: changeCount,\n        xmlCount: xmlCount\n      }), __jsx(\"div\", {\n        className: \"product_price_box\"\n      }, __jsx(ProductOldPrice, {\n        text: oldPrice + messages['local.dr'],\n        oldPrice: oldPrice\n      }), __jsx(ProductPrice, null)), __jsx(RemoveProductButton, {\n        handleClick: removeItem\n      }));\n  }\n}\n\nexport default IndexCartItem;","map":null,"metadata":{},"sourceType":"module"}