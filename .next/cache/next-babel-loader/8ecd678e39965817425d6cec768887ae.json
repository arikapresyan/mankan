{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Icon } from 'antd';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { getProductToBuy } from '../../../store/buy-product/action';\nimport keys from '../../../constants/keys';\nimport useGlobalAPI from '../../../hooks/useGlobalAPI'; // import { APISend } from '../../../store/global-APIS/action';\n// import userAPI from '../../../API_Paths/userAPI';\n\nvar IMAGE_POSTFIX = keys.IMAGE_POSTFIX;\n\nfunction OrderListItem(_ref) {\n  var product = _ref.product,\n      reloadPageData = _ref.reloadPageData,\n      page = _ref.page,\n      data = _ref.data;\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var getProductToBuyActon = function getProductToBuyActon(id) {\n    dispatch(getProductToBuy({\n      id: id\n    }));\n  };\n\n  useGlobalAPI({\n    onCancel: function onCancel() {\n      setLoading(false);\n    },\n    onSuccess: function onSuccess() {\n      if (loading) {\n        var newPage = page;\n\n        if (data.length === 0 && page > 1) {\n          newPage = page - 1;\n        }\n\n        reloadPageData({\n          page: newPage\n        });\n      }\n    }\n  });\n  var totalPrice = product.totalPrice,\n      count = product.count,\n      _product$product = product.product,\n      id = _product$product.id,\n      xmlCount = _product$product.xmlCount,\n      name = _product$product.langs[0].name,\n      _product$product$phot = _product$product.photos[0],\n      postUrl = _product$product$phot.url,\n      alt = _product$product$phot.alt,\n      title = _product$product$phot.title,\n      createdAt = product.createdAt;\n  var date = new Date(createdAt);\n  var min = date.getMinutes();\n  var newMin = \"\".concat(min).length === 1 ? \"0\".concat(min) : min;\n  var time = \"\".concat(date.getHours(), \":\").concat(newMin);\n  var showDate = \"\".concat(date.toLocaleDateString(), \", \").concat(time);\n  var url = \"\".concat(IMAGE_POSTFIX + id, \"/\").concat(postUrl); // const removeItem = () => {\n  //   // setLoading(true);\n  //   // dispatch(APISend({\n  //   //   method: 'post',\n  //   //   url: userAPI.removeUserPageOrder,\n  //   //   data: {\n  //   //     id,\n  //   //   },\n  //   // }));\n  // };\n\n  return __jsx(\"div\", {\n    className: \"order_list_item clearfix\"\n  }, __jsx(\"div\", {\n    className: \"prod_img\"\n  }, __jsx(\"img\", {\n    src: url,\n    alt: alt,\n    title: title\n  })), __jsx(\"div\", {\n    className: \"prod_info_box\"\n  }, __jsx(\"div\", {\n    className: \"prod_info\"\n  }, __jsx(\"div\", {\n    className: \"prod_name\"\n  }, name), __jsx(\"div\", {\n    className: \"date\"\n  }, __jsx(\"span\", null, messages['local.date_of_purchase'], \"\\u0589\"), showDate)), __jsx(\"div\", {\n    className: \"prod_info\"\n  }, __jsx(\"div\", {\n    className: \"product_quantity\"\n  }, __jsx(\"span\", null, messages['local.quantity'], \"\\u0589\"), count, ' ', messages['local.item(s)']), __jsx(\"div\", {\n    className: \"product_price\"\n  }, __jsx(\"span\", null, messages['local.price'], \"\\u0589\"), totalPrice, ' ', messages['local.dr'], \"\\u2024\"), xmlCount && __jsx(\"div\", {\n    className: \"product_availability\"\n  }, messages['local.product_available']))), xmlCount && __jsx(Button, {\n    type: \"link\",\n    className: \"buy_again\",\n    onClick: function onClick() {\n      return getProductToBuyActon(id);\n    }\n  }, __jsx(Icon, {\n    type: \"shopping\"\n  }), messages['local.order_again']));\n}\n\nexport default OrderListItem;","map":null,"metadata":{},"sourceType":"module"}