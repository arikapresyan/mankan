{"ast":null,"code":"import { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { getMenuListReset, getMenuList } from '../../store/menu-list/action';\nexport default (function () {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      showMenu = _useState[0],\n      setShowMenu = _useState[1];\n\n  var _useState2 = useState(''),\n      mainHref = _useState2[0],\n      setMainHref = _useState2[1];\n\n  var _useState3 = useState(null),\n      timerId = _useState3[0],\n      setTimerId = _useState3[1];\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var onMouseEnter = useCallback(function (menuList, menuItem) {\n    clearTimeout(timerId);\n\n    if (menuList.name !== menuItem.name) {\n      setShowMenu(false);\n      dispatch(getMenuListReset());\n    }\n\n    var tId = setTimeout(function () {\n      if (menuList.name !== menuItem.name) {\n        dispatch(getMenuList({\n          name: menuItem.name,\n          messages: messages\n        }));\n      }\n\n      setMainHref(menuItem.href);\n      setShowMenu(true);\n    }, 500);\n    setTimerId(tId);\n  }, [timerId, messages]);\n  var onMouseLeave = useCallback(function () {\n    clearTimeout(timerId);\n\n    if (showMenu) {\n      setShowMenu(false);\n      dispatch(getMenuListReset());\n    }\n  }, [showMenu, timerId]);\n  return {\n    showMenu: showMenu,\n    mainHref: mainHref,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  };\n});","map":null,"metadata":{},"sourceType":"module"}