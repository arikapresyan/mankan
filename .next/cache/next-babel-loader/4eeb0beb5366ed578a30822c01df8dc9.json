{"ast":null,"code":"import * as Yup from 'yup';\nimport { regex } from '../constants/utils';\nexport const getEmailSchema = msg => Yup.object().shape({\n  email: Yup.string().required(msg['local.enter_your_email']).test('str', msg['local.invalid_email'], value => regex.email.test(value))\n});\nexport const getLoginSchema = msg => Yup.object().shape({\n  emailOrPhone: Yup.string().required(msg['local.enter_your_email']),\n  password: Yup.string().required(msg['local.enter_your_password'])\n});\nexport const getRecoverySchema = msg => Yup.object().shape({\n  email: Yup.string().required(msg['local.enter_your_email']).test('str', msg['local.invalid_email'], value => regex.email.test(value))\n});\nexport const getRegistrationSchema = msg => Yup.object().shape({\n  name: Yup.string().required(msg['local.enter_your_name']).min(3, msg['local.invalid_field']).test('str', msg['local.invalid_field'], value => regex.name.test(value)),\n  surname: Yup.string().required(msg['local.enter_your_surname']).min(3, msg['local.invalid_field']).test('str', msg['local.invalid_field'], value => regex.name.test(value)),\n  phone: Yup.string().required(msg['local.enter_your_number']).test('phone', msg['local.invalid_field'], value => regex.phone.test(value)).min(9, msg['local.invalid_field']).max(12, msg['local.invalid_field']),\n  email: Yup.string().required(msg['local.enter_your_email']).test('str', msg['local.invalid_email'], value => regex.email.test(value)),\n  password: Yup.string().required(msg['local.enter_your_password']).min(6, msg['local.password_min_length']),\n  repeatPassword: Yup.string().required(msg['local.repeat_password']).oneOf([Yup.ref('password'), null], msg['local.passwords_must_match']),\n  agreeTerms: Yup.boolean().oneOf([true], msg['local.must_accept_terms_and_conditions'])\n});\nexport const getFeedbackSchema = msg => Yup.object().shape({\n  phone: Yup.string().required(msg['local.enter_your_number']).test('phone', msg['local.invalid_field'], value => regex.phone.test(value)).min(9, msg['local.invalid_field']).max(12, msg['local.invalid_field']),\n  email: Yup.string().required(msg['local.enter_your_email']).test('str', msg['local.invalid_email'], value => regex.email.test(value)),\n  fullName: Yup.string().required(msg['local.enter_your_fullname']).trim().test('str', msg['local.invalid_field'], value => !regex.string.test(value)),\n  message: Yup.string().required(msg['local.required']).trim()\n});\nexport const getSuggestionSchema = (msg, type) => // type: 'Offer' || 'Complaint'\nYup.object().shape({\n  email: Yup.string().required(msg['local.enter_your_email']).test('str', msg['local.invalid_email'], value => regex.email.test(value)),\n  [type]: Yup.string().required(msg['local.required']).trim()\n});\nexport const getOrderSchema = msg => Yup.object().shape({\n  firstName: Yup.string().required(msg['local.enter_your_name']).min(3, msg['local.invalid_field']).test('str', msg['local.invalid_field'], value => regex.name.test(value)),\n  lastName: Yup.string().required(msg['local.enter_your_surname']).min(3, msg['local.invalid_field']).test('str', msg['local.invalid_field'], value => regex.name.test(value)),\n  phone: Yup.string().required(msg['local.enter_your_number']).test('phone', msg['local.invalid_field'], value => regex.phone.test(value)).min(9, msg['local.invalid_field']).max(12, msg['local.invalid_field']),\n  email: Yup.string().required(msg['local.enter_your_email']).test('str', msg['local.invalid_email'], value => regex.email.test(value)),\n  street: Yup.string().required(msg['local.required']).min(3, msg['local.invalid_field']).trim(),\n  house: Yup.string().required(msg['local.required']).trim(),\n  entry: Yup.string().trim(),\n  deliveryPeriodString: Yup.string().required(msg['local.required']).trim()\n});\nexport const getNewPasswordSchema = msg => Yup.object().shape({\n  password: Yup.string().required(msg['local.enter_your_password']).min(6, msg['local.password_min_length']),\n  retryPassword: Yup.string().required(msg['local.repeat_password']).oneOf([Yup.ref('password'), null], msg['local.passwords_must_match'])\n});\nexport const getChangeInfoSchema = msg => Yup.object().shape({\n  firstName: Yup.string().required(msg['local.enter_your_name']).min(3, msg['local.invalid_field']).test('str', msg['local.invalid_field'], value => regex.name.test(value)),\n  lastName: Yup.string().required(msg['local.enter_your_surname']).min(3, msg['local.invalid_field']).test('str', msg['local.invalid_field'], value => regex.name.test(value)),\n  phone: Yup.string().required(msg['local.enter_your_number']).test('phone', msg['local.invalid_field'], value => regex.phone.test(value)).min(9, msg['local.invalid_field']).max(12, msg['local.invalid_field']),\n  email: Yup.string().required(msg['local.enter_your_email']).test('str', msg['local.invalid_email'], value => regex.email.test(value)),\n  changePassMode: Yup.bool(),\n  password: Yup.string().min(6, msg['local.password_min_length']).test('changePassMode', msg['local.enter_your_password'], function (value) {\n    if (this.parent.changePassMode) {\n      if (!value || !value.trim()) {\n        return false;\n      }\n    }\n\n    return true;\n  }),\n  retryPassword: Yup.string().oneOf([Yup.ref('password'), null], msg['local.passwords_must_match']).test('changePassMode', msg['local.repeat_password'], function (value) {\n    if (this.parent.changePassMode) {\n      if (!value || !value.trim()) {\n        return false;\n      }\n    }\n\n    return true;\n  })\n});","map":{"version":3,"sources":["/var/www/mankan-front/utils/validationSchemas.js"],"names":["Yup","regex","getEmailSchema","msg","object","shape","email","string","required","test","value","getLoginSchema","emailOrPhone","password","getRecoverySchema","getRegistrationSchema","name","min","surname","phone","max","repeatPassword","oneOf","ref","agreeTerms","boolean","getFeedbackSchema","fullName","trim","message","getSuggestionSchema","type","getOrderSchema","firstName","lastName","street","house","entry","deliveryPeriodString","getNewPasswordSchema","retryPassword","getChangeInfoSchema","changePassMode","bool","parent"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { regex } from '../constants/utils';\n\nexport const getEmailSchema = (msg) => Yup.object().shape({\n  email: Yup.string()\n    .required(msg['local.enter_your_email'])\n    .test('str', msg['local.invalid_email'], (value) => regex.email.test(value)),\n});\n\nexport const getLoginSchema = (msg) => Yup.object().shape({\n  emailOrPhone: Yup.string()\n    .required(msg['local.enter_your_email']),\n  password: Yup.string()\n    .required(msg['local.enter_your_password']),\n});\n\nexport const getRecoverySchema = (msg) => Yup.object().shape({\n  email: Yup.string()\n    .required(msg['local.enter_your_email'])\n    .test('str', msg['local.invalid_email'], (value) => regex.email.test(value)),\n});\n\nexport const getRegistrationSchema = (msg) => Yup.object().shape({\n  name: Yup.string().required(msg['local.enter_your_name']).min(3, msg['local.invalid_field'])\n    .test('str', msg['local.invalid_field'], (value) => regex.name.test(value)),\n  surname: Yup.string().required(msg['local.enter_your_surname']).min(3, msg['local.invalid_field'])\n    .test('str', msg['local.invalid_field'], (value) => regex.name.test(value)),\n  phone: Yup.string().required(msg['local.enter_your_number'])\n    .test('phone', msg['local.invalid_field'], (value) => (\n      regex.phone.test(value)\n    )).min(9, msg['local.invalid_field'])\n    .max(12, msg['local.invalid_field']),\n  email: Yup.string()\n    .required(msg['local.enter_your_email'])\n    .test('str', msg['local.invalid_email'], (value) => regex.email.test(value)),\n  password: Yup.string()\n    .required(msg['local.enter_your_password'])\n    .min(6, msg['local.password_min_length']),\n  repeatPassword: Yup.string().required(msg['local.repeat_password'])\n    .oneOf([Yup.ref('password'), null], msg['local.passwords_must_match']),\n  agreeTerms: Yup.boolean().oneOf([true], msg['local.must_accept_terms_and_conditions']),\n});\n\n\nexport const getFeedbackSchema = (msg) => (Yup.object().shape({\n  phone: Yup.string().required(msg['local.enter_your_number'])\n    .test('phone', msg['local.invalid_field'], (value) => (\n      regex.phone.test(value)\n    ))\n    .min(9, msg['local.invalid_field'])\n    .max(12, msg['local.invalid_field']),\n  email: Yup.string()\n    .required(msg['local.enter_your_email'])\n    .test('str', msg['local.invalid_email'], (value) => regex.email.test(value)),\n  fullName: Yup.string().required(msg['local.enter_your_fullname'])\n    .trim()\n    .test('str', msg['local.invalid_field'], (value) => !regex.string.test(value)),\n  message: Yup.string().required(msg['local.required']).trim(),\n}));\n\nexport const getSuggestionSchema = (msg, type) => (\n  // type: 'Offer' || 'Complaint'\n  Yup.object().shape({\n    email: Yup.string()\n      .required(msg['local.enter_your_email'])\n      .test('str', msg['local.invalid_email'], (value) => regex.email.test(value)),\n    [type]: Yup.string().required(msg['local.required']).trim(),\n  }));\n\nexport const getOrderSchema = (msg) => (Yup.object().shape({\n  firstName: Yup.string().required(msg['local.enter_your_name']).min(3, msg['local.invalid_field'])\n    .test('str', msg['local.invalid_field'], (value) => regex.name.test(value)),\n  lastName: Yup.string().required(msg['local.enter_your_surname']).min(3, msg['local.invalid_field'])\n    .test('str', msg['local.invalid_field'], (value) => regex.name.test(value)),\n  phone: Yup.string().required(msg['local.enter_your_number'])\n    .test('phone', msg['local.invalid_field'], (value) => (\n      regex.phone.test(value)\n    ))\n    .min(9, msg['local.invalid_field'])\n    .max(12, msg['local.invalid_field']),\n  email: Yup.string()\n    .required(msg['local.enter_your_email'])\n    .test('str', msg['local.invalid_email'], (value) => regex.email.test(value)),\n  street: Yup.string().required(msg['local.required']).min(3, msg['local.invalid_field']).trim(),\n  house: Yup.string().required(msg['local.required']).trim(),\n  entry: Yup.string().trim(),\n  deliveryPeriodString: Yup.string().required(msg['local.required']).trim(),\n}));\n\nexport const getNewPasswordSchema = (msg) => Yup.object().shape({\n  password: Yup.string()\n    .required(msg['local.enter_your_password'])\n    .min(6, msg['local.password_min_length']),\n  retryPassword: Yup.string().required(msg['local.repeat_password'])\n    .oneOf([Yup.ref('password'), null], msg['local.passwords_must_match']),\n});\n\n\nexport const getChangeInfoSchema = (msg) => Yup.object().shape({\n  firstName: Yup.string().required(msg['local.enter_your_name']).min(3, msg['local.invalid_field'])\n    .test('str', msg['local.invalid_field'], (value) => regex.name.test(value)),\n  lastName: Yup.string().required(msg['local.enter_your_surname']).min(3, msg['local.invalid_field'])\n    .test('str', msg['local.invalid_field'], (value) => regex.name.test(value)),\n  phone: Yup.string().required(msg['local.enter_your_number'])\n    .test('phone', msg['local.invalid_field'], (value) => (\n      regex.phone.test(value)\n    )).min(9, msg['local.invalid_field'])\n    .max(12, msg['local.invalid_field']),\n  email: Yup.string()\n    .required(msg['local.enter_your_email'])\n    .test('str', msg['local.invalid_email'], (value) => regex.email.test(value)),\n  changePassMode: Yup.bool(),\n  password: Yup.string()\n    .min(6, msg['local.password_min_length'])\n    .test('changePassMode', msg['local.enter_your_password'], function (value) {\n      if (this.parent.changePassMode) {\n        if ((!value || !value.trim())) {\n          return false;\n        }\n      }\n      return true;\n    }),\n  retryPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], msg['local.passwords_must_match'])\n    .test('changePassMode', msg['local.repeat_password'], function (value) {\n      if (this.parent.changePassMode) {\n        if ((!value || !value.trim())) {\n          return false;\n        }\n      }\n      return true;\n    }),\n});\n"]},"metadata":{},"sourceType":"module"}