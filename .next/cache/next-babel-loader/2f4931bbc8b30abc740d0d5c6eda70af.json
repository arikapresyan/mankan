{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Menu from 'antd/lib/menu';\nimport Icon from 'antd/lib/icon';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { hideAll } from '../../../store/userEventListeners/action';\nconst {\n  SubMenu\n} = Menu;\n\nfunction CategorySubmenu({\n  hideAllAction,\n  globalInformationRouter: {\n    mobyle_submenu_info: mobyleSubmenuInfo\n  },\n  menuList\n}) {\n  const {\n    subType,\n    href\n  } = mobyleSubmenuInfo || {};\n  const {\n    0: openKeys,\n    1: setOpenKeys\n  } = useState([]);\n  const subKey = `mobile_sub_filters${subType}`;\n  useEffect(() => {\n    setOpenKeys([subKey]);\n  }, [subType]);\n  const {\n    messages\n  } = useIntl();\n  const productsObject = menuList.data; // type age brand meaning\n\n  const subMenuArray = useMemo(() => productsObject ? [{\n    headingName: messages['local.type'],\n    products: productsObject.type,\n    linkPart: 'type'\n  }, {\n    headingName: messages['local.age'],\n    products: productsObject.age.map(({\n      name,\n      text,\n      id\n    }) => ({\n      id,\n      name: `${name} ${messages['local.years']}`,\n      text: `${text} ${messages['local.years']}`\n    })),\n    linkPart: 'age'\n  }, {\n    headingName: messages['local.brand'],\n    products: productsObject.brand,\n    linkPart: 'brand'\n  }, {\n    headingName: messages['local.meaning'],\n    products: productsObject.meaning,\n    linkPart: 'meaning'\n  }] : [], [productsObject, messages]);\n\n  const closeAllSideBars = () => {\n    hideAllAction();\n  };\n\n  return __jsx(\"div\", {\n    className: \"subcategory_menu\"\n  }, menuList.loading ? 'loading' : __jsx(Menu, {\n    onOpenChange: setOpenKeys,\n    mode: \"inline\",\n    openKeys: openKeys\n  }, __jsx(Menu.Item, {\n    key: \"1\",\n    onClick: closeAllSideBars\n  }, __jsx(Link, {\n    href: `/catalog${href || ''}`\n  }, __jsx(\"a\", null, messages['local.all_of']))), subMenuArray.map(({\n    products,\n    headingName,\n    linkPart\n  }, parentIndex) => __jsx(SubMenu, {\n    key: `mobile_sub_filters${linkPart}`,\n    title: __jsx(\"span\", null, __jsx(\"span\", {\n      className: \"cat_name\"\n    }, headingName), __jsx(Icon, {\n      className: \"arrow_icon\",\n      type: \"right\"\n    }))\n  }, subType && products.map((product, index) => __jsx(Menu.Item, {\n    key: `mobile_sub_filters${linkPart}${parentIndex}.${index}`\n  }, __jsx(Link, {\n    href: `catalog${href ? `${href}&` : '?'}${linkPart}=${product.id}`\n  }, __jsx(\"a\", {\n    onClick: hideAllAction\n  }, product.name))))))));\n}\n\nfunction mapStateToProps({\n  globalInformationRouter,\n  menuList\n}) {\n  return {\n    globalInformationRouter,\n    menuList\n  };\n}\n\nexport default connect(mapStateToProps, {\n  hideAllAction: hideAll\n})(CategorySubmenu);","map":null,"metadata":{},"sourceType":"module"}