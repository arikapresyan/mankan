{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { useCallback, useMemo, useState } from 'react';\nimport { useFormik } from 'formik';\nimport nextId from 'react-id-generator';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { getValidationSchema, formatDateFromValues } from './constants';\nimport useGlobalAPI from '../../../../hooks/useGlobalAPI';\nimport { APISend } from '../../../../store/global-APIS/action';\nimport userAPI from '../../../../API_Paths/userAPI';\n\nfunction useApplyOnlineForm(handleClose, id) {\n  var dispatch = useDispatch();\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  useGlobalAPI({\n    onCancel: function onCancel() {\n      setLoading(false);\n    },\n    onSuccess: handleClose\n  });\n  var validationSchema = useMemo(function () {\n    return getValidationSchema(messages);\n  }, [messages]);\n  var formik = useFormik({\n    initialValues: {\n      fullName: '',\n      phone: '',\n      email: '',\n      languages: [{\n        value: '',\n        points: null,\n        id: nextId()\n      }],\n      softwareSkills: [{\n        id: nextId()\n      }],\n      favorite: [{\n        id: nextId()\n      }],\n      socialNetwork: [{\n        id: nextId()\n      }],\n      education: [{\n        id: nextId()\n      }],\n      professionalExperience: [{\n        id: nextId()\n      }],\n      imgList: [],\n      description1: '',\n      description2: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      var _formatDateFromValues = formatDateFromValues(values),\n          image = _formatDateFromValues.image,\n          rest = _objectWithoutProperties(_formatDateFromValues, [\"image\"]);\n\n      rest.id = id;\n      var FD = new FormData();\n      FD.set('image', image);\n      FD.set('data', JSON.stringify(rest));\n      setLoading(true);\n      dispatch(APISend({\n        method: 'post',\n        url: userAPI.vacancy,\n        data: FD\n      }));\n    }\n  });\n  var changeField = useCallback(function (_ref) {\n    var _ref$target = _ref.target,\n        value = _ref$target.value,\n        name = _ref$target.name;\n    formik.setFieldTouched(name, true);\n    formik.setFieldValue(name, value);\n  }, []);\n  return {\n    formik: formik,\n    changeField: changeField,\n    loading: loading\n  };\n}\n\nexport default useApplyOnlineForm;","map":null,"metadata":{},"sourceType":"module"}