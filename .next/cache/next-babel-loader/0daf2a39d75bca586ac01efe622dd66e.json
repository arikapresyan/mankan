{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Col, Form, Checkbox, Button, Icon } from 'antd';\nimport { useIntl } from 'react-intl';\nimport InputFieldWidthLocalState from '../../../../../common/InputFieldWidthLocalState';\n\nfunction SkillsFields(_ref) {\n  var hasPoints = _ref.hasPoints,\n      items = _ref.items,\n      label = _ref.label,\n      _onBlur = _ref.onBlur,\n      onChangePoints = _ref.onChangePoints,\n      name = _ref.name,\n      addMorSkills = _ref.addMorSkills,\n      removeFromSkills = _ref.removeFromSkills,\n      placeholder = _ref.placeholder,\n      addText = _ref.addText,\n      fullWidth = _ref.fullWidth;\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  return __jsx(React.Fragment, null, items.map(function (_ref2, index) {\n    var value = _ref2.value,\n        points = _ref2.points,\n        id = _ref2.id;\n    return __jsx(\"div\", {\n      key: id\n    }, __jsx(Col, {\n      xs: 24,\n      md: !fullWidth ? 12 : 24,\n      style: {\n        clear: 'both'\n      }\n    }, __jsx(Form.Item, {\n      label: label\n    }, __jsx(InputFieldWidthLocalState, {\n      defaultValue: value,\n      onBlur: function onBlur(event) {\n        return _onBlur(index, event, name);\n      },\n      placeholder: placeholder\n    })), !hasPoints && index > 0 ? __jsx(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        return removeFromSkills(name, index);\n      }\n    }, \"remove\") : null), hasPoints && __jsx(Col, {\n      xs: 24,\n      md: 12\n    }, __jsx(Form.Item, {\n      label: messages['local.Choose_from_a_5_point'],\n      className: \"assess\"\n    }, __jsx(Checkbox.Group, {\n      value: [points],\n      onChange: function onChange(val) {\n        return onChangePoints(index, val, name);\n      }\n    }, __jsx(Checkbox, {\n      value: \"1\"\n    }), __jsx(Checkbox, {\n      value: \"2\"\n    }), __jsx(Checkbox, {\n      value: \"3\"\n    }), __jsx(Checkbox, {\n      value: \"4\"\n    }), __jsx(Checkbox, {\n      value: \"5\"\n    }))), index > 0 ? __jsx(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        return removeFromSkills(name, index);\n      }\n    }, \"remove\") : null));\n  }), __jsx(Col, {\n    xs: 24\n  }, __jsx(Form.Item, null, __jsx(Button, {\n    type: \"dashed\",\n    onClick: function onClick() {\n      return addMorSkills(name);\n    }\n  }, __jsx(Icon, {\n    type: \"plus\"\n  }), ' ', addText))));\n}\n\nexport default SkillsFields;","map":null,"metadata":{},"sourceType":"module"}