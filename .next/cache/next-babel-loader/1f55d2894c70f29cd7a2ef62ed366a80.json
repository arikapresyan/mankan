{"ast":null,"code":"import { all, takeEvery, select, call, put } from 'redux-saga/effects';\nimport Axios from '../services/Axios';\nimport { getProductToBuy, getProductToBuySuccess, getProductToBuyError } from './action';\nimport { selectLang } from '../user/reducer';\n\nfunction getBuyProductById({\n  id,\n  lang\n}) {\n  return Axios.request({\n    method: 'post',\n    url: `/api/product/${id}`,\n    body: {\n      lang\n    },\n    data: {\n      lang\n    }\n  });\n}\n\nfunction* workGetProductToBuy({\n  payload: {\n    id\n  }\n}) {\n  const lang = yield select(selectLang);\n\n  try {\n    const {\n      data\n    } = yield call(getBuyProductById, {\n      id,\n      lang\n    });\n    yield put(getProductToBuySuccess({\n      data: data.result\n    }));\n  } catch (error) {\n    yield put(getProductToBuyError());\n  }\n}\n\nfunction* watchGetProductToBuy() {\n  yield takeEvery(getProductToBuy, workGetProductToBuy);\n}\n\nexport default function* () {\n  yield all([watchGetProductToBuy()]);\n}","map":null,"metadata":{},"sourceType":"module"}