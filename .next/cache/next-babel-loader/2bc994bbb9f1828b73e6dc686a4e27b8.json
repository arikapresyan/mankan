{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport dynamic from 'next/dynamic';\nimport { connect } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport Link from 'next/link';\nimport Layout from 'antd/lib/layout';\nimport message from 'antd/lib/message';\nimport Head from 'next/head';\nimport Axios from '../store/services/Axios';\nimport { show } from '../store/userEventListeners/action';\nimport { getPageData } from '../store/pages-data/action';\nimport { removeLocalStorageObj } from '../constants/utils';\nimport { sendOrderSuccess } from '../store/cart/action';\nimport { catalogGet } from '../store/catalog/action';\nconst {\n  Content\n} = Layout;\nconst ProductSlider = dynamic(() => import('../components/common/ProductSlider'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/common/ProductSlider')],\n    modules: ['../components/common/ProductSlider']\n  }\n});\nconst MobileProductList = dynamic(() => import('../components/mobile/mobile-product-list/MobileProductList'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/mobile/mobile-product-list/MobileProductList')],\n    modules: ['../components/mobile/mobile-product-list/MobileProductList']\n  }\n});\nconst SelectByAge = dynamic(() => import('../components/home/SelectByAge'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/home/SelectByAge')],\n    modules: ['../components/home/SelectByAge']\n  }\n});\nconst ChooseGift = dynamic(() => import('../components/home/ChooseGift'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/home/ChooseGift')],\n    modules: ['../components/home/ChooseGift']\n  }\n});\nconst MainSlider = dynamic(() => import('../components/home/main-slider/MainSlider'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/home/main-slider/MainSlider')],\n    modules: ['../components/home/main-slider/MainSlider']\n  }\n});\nconst MobileCategoryList = dynamic(() => import('../components/mobile/category-list-mobile/CategoryListMobile'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/mobile/category-list-mobile/CategoryListMobile')],\n    modules: ['../components/mobile/category-list-mobile/CategoryListMobile']\n  }\n});\nconst LazyLoad = dynamic(() => import('react-lazyload'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-lazyload')],\n    modules: ['react-lazyload']\n  }\n});\n\nasync function sendGetRequest(token) {\n  await Axios.get(`/api/user/verifyEmail/${token}`);\n}\n\nasync function changeEmailRequest(token) {\n  await Axios.get(`/api/user/changeEmail/${token}`);\n}\n\nasync function confirmBankOrder(orderId) {\n  await Axios.get(`/api/user/checkOrder?orderId=${orderId}`);\n}\n\nfunction Home({\n  token,\n  orderId,\n  showAction,\n  sendOrderSuccessAction,\n  pageData,\n  lang,\n  confirmEmailChange\n}) {\n  const idDesktop = useMediaQuery({\n    minWidth: 992\n  });\n  const isTablet = useMediaQuery({\n    minWidth: 766\n  });\n  const {\n    messages\n  } = useIntl();\n  useEffect(() => {\n    if (token) {\n      sendGetRequest(token).then(() => {\n        showAction({\n          name: 'loginVisible'\n        });\n      });\n    } else if (orderId) {\n      confirmBankOrder(orderId).then(() => {\n        message.success(messages['local.successText']);\n        removeLocalStorageObj('cart');\n        sendOrderSuccessAction();\n      }).catch(() => {\n        message.error(messages['local.errorText']);\n      });\n    }\n  }, [token, orderId]);\n  useEffect(() => {\n    if (confirmEmailChange) {\n      changeEmailRequest(confirmEmailChange).then(() => {\n        message.success(messages['local.successText']);\n      });\n    }\n  }, [confirmEmailChange]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Mankan Toys \\u25CF \\u053D\\u0561\\u0572\\u0561\\u056C\\u056B\\u0584\\u0576\\u0565\\u0580\\u056B \\u0585\\u0576\\u056C\\u0561\\u0575\\u0576 \\u056D\\u0561\\u0576\\u0578\\u0582\\u0569\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\\u053D\\u0561\\u0572\\u0561\\u056C\\u056B\\u0584\\u0576\\u0565\\u0580\\u056B \\u0585\\u0576\\u056C\\u0561\\u0575\\u0576 \\u057E\\u0561\\u0573\\u0561\\u057C\\u0584 \\u0565\\u0582 \\u0561\\u0580\\u0561\\u0563 \\u0561\\u057C\\u0561\\u0584\\u0578\\u0582\\u0574, \\u0574\\u0561\\u057D\\u0576\\u0561\\u0563\\u056B\\u057F\\u0561\\u0581\\u057E\\u0561\\u056E \\u056D\\u0561\\u0576\\u0578\\u0582\\u0569-\\u057D\\u0580\\u0561\\u0570\\u0576\\u0565\\u0580, \\u0583\\u0561\\u0583\\u0578\\u0582\\u056F \\u0565\\u0582 \\u056B\\u0576\\u057F\\u0565\\u0580\\u0561\\u056F\\u057F\\u056B\\u057E \\u056D\\u0561\\u0572\\u0561\\u056C\\u056B\\u0584\\u0576\\u0565\\u0580\\u056B \\u0561\\u0580\\u057F\\u0561\\u0564\\u0580\\u0578\\u0582\\u0569\\u0575\\u0578\\u0582\\u0576...\"\n  })), pageData.loading ? __jsx(Content, {\n    className: \"home_page\"\n  }, __jsx(MainSlider, null)) : __jsx(Content, {\n    className: \"home_page\"\n  }, __jsx(MainSlider, null), !idDesktop && __jsx(MobileCategoryList, null), (Array.isArray(pageData === null || pageData === void 0 ? void 0 : pageData.data) ? pageData === null || pageData === void 0 ? void 0 : pageData.data : []).map(data => {\n    var _data$products, _data$products$produc, _data$products$produc2, _data$products$produc3;\n\n    if (data.status !== 'off') {\n      if (data.id === 2) {\n        return __jsx(SelectByAge, {\n          key: `home_page${data.id}`\n        });\n      }\n\n      if (data.id === 5) {\n        return __jsx(ChooseGift, {\n          key: `home_page${data.id}`\n        });\n      }\n    }\n\n    const products = data === null || data === void 0 ? void 0 : (_data$products = data.products) === null || _data$products === void 0 ? void 0 : _data$products.products;\n    if (!products || products.rows.length === 0 || data.status === 'off') return null;\n    let link = '/catalog?classification=';\n\n    if (data.id === 1) {\n      link += 'isNew';\n    } else if (data.id === 3) {\n      link += 'percent';\n    } else if (data.id === 6) {\n      link += 'bestSeller';\n    } else if (data.id === 4) {\n      link = '/catalog?brand=1';\n    } else link += (_data$products$produc = data.products.products.rows[0]) === null || _data$products$produc === void 0 ? void 0 : (_data$products$produc2 = _data$products$produc.extraFilter) === null || _data$products$produc2 === void 0 ? void 0 : (_data$products$produc3 = _data$products$produc2[0]) === null || _data$products$produc3 === void 0 ? void 0 : _data$products$produc3.id;\n\n    return __jsx(\"div\", {\n      className: \"new_products_slider_section slider_wrapper\",\n      key: `home_page${data.id}`\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"h2\", {\n      className: \"section_title\"\n    }, __jsx(Link, {\n      href: link\n    }, __jsx(\"a\", null, data.names.find(({\n      lang: thisLang\n    }) => thisLang === lang).name)))), !isTablet ? __jsx(MobileProductList, {\n      products: products.rows\n    }) : __jsx(LazyLoad, {\n      height: 375\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(ProductSlider, {\n      products: products.rows\n    }), __jsx(\"div\", {\n      className: \"view_more\"\n    }, __jsx(Link, {\n      href: link\n    }, __jsx(\"a\", null, messages['local.view_more'], __jsx(\"img\", {\n      src: \"/images/icons/next.png\",\n      alt: \" \"\n    })))))));\n  })));\n}\n\nfunction mapStateToProps({\n  productsList,\n  pageData,\n  user: {\n    lang\n  }\n}) {\n  return {\n    productsList,\n    pageData,\n    lang\n  };\n}\n\nHome.getInitialProps = async function ({\n  query,\n  store\n}) {\n  const {\n    token,\n    confirmEmailChange,\n    orderId\n  } = query;\n  await store.dispatch(getPageData({\n    page: 'home'\n  }));\n  return {\n    token,\n    confirmEmailChange,\n    orderId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  showAction: show,\n  sendOrderSuccessAction: sendOrderSuccess,\n  catalogGetAction: catalogGet\n})(Home);","map":null,"metadata":{},"sourceType":"module"}