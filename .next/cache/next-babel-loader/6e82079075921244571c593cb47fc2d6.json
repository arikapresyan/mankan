{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { map, first } from 'lodash';\nimport React, { Component } from 'react';\nimport nextId from 'react-id-generator';\nimport ArrowIcon from '../../../assets/images/icons/arrow.png';\n\nclass ProductThumbnailSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.renderImages = this.renderImages.bind(this);\n    this.handleOnUp = this.handleOnUp.bind(this);\n    this.handleOnDown = this.handleOnDown.bind(this);\n    this.handleOnPreview = this.handleOnPreview.bind(this);\n    const {\n      images = []\n    } = this.props;\n    const idImagesArray = images.map(image => ({\n      url: image,\n      id: nextId()\n    }));\n    this.state = {\n      images: idImagesArray,\n      start: 0,\n      finish: 3,\n      selectedItem: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      onPreviewImage\n    } = this.props;\n    const {\n      images\n    } = this.state;\n    this.setState({\n      selectedItem: first(images)\n    }, () => {\n      onPreviewImage(first(images));\n    });\n  }\n\n  handleOnUp() {\n    this.setState(prevState => _objectSpread({}, prevState, {\n      start: prevState.start += 1,\n      finish: prevState.finish += 1\n    }));\n  }\n\n  handleOnDown() {\n    this.setState(prevState => _objectSpread({}, prevState, {\n      start: prevState.start -= 1,\n      finish: prevState.finish -= 1\n    }));\n  }\n\n  handleOnPreview(item) {\n    const {\n      onPreviewImage\n    } = this.props;\n    this.setState({\n      selectedItem: item\n    }, () => {\n      onPreviewImage(item);\n    });\n  }\n\n  renderImages() {\n    const {\n      start,\n      finish,\n      images\n    } = this.state;\n    const visibleImages = images.filter((item, index) => index >= start && index <= finish);\n    return visibleImages;\n  }\n\n  render() {\n    const {\n      images,\n      start,\n      finish,\n      selectedItem\n    } = this.state || {};\n    const validationForUp = finish + 1 < images.length;\n    const validationForDown = start - 1 >= 0;\n    return __jsx(\"div\", {\n      className: \"thumbnail_slider\"\n    }, validationForUp && __jsx(\"span\", {\n      className: \"prev\",\n      onClick: this.handleOnUp\n    }, __jsx(\"img\", {\n      src: ArrowIcon,\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"thumbnail_image_list\"\n    }, images.length > 0 && map(this.renderImages(), (item, index) => __jsx(\"div\", {\n      className: \"thumb_image\",\n      key: index,\n      style: selectedItem && item.id === selectedItem.id ? {\n        border: '3px solid red'\n      } : {}\n    }, __jsx(\"img\", {\n      src: item.url,\n      alt: \"\",\n      onClick: () => this.handleOnPreview(item)\n    })))), validationForDown && __jsx(\"span\", {\n      className: \"next\",\n      onClick: this.handleOnDown\n    }, __jsx(\"img\", {\n      src: ArrowIcon,\n      alt: \"\"\n    })));\n  }\n\n}\n\nexport default ProductThumbnailSlider;","map":null,"metadata":{},"sourceType":"module"}