{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/header/language.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-mixed-operators */\nimport React from 'react';\nimport Dropdown from 'antd/lib/dropdown';\nimport Icon from 'antd/lib/icon';\nimport Menu from 'antd/lib/menu';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setLang } from '../../store/user/action';\nimport { getPageData } from '../../store/pages-data/action';\n\nfunction LangSwitcher(_ref) {\n  var getPageDataAction = _ref.getPageDataAction,\n      setLangAction = _ref.setLangAction,\n      lang = _ref.lang;\n  return __jsx(\"div\", {\n    className: \"lang_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Dropdown, {\n    overlay: __jsx(Menu, {\n      className: \"lang_dropdown\",\n      onClick: function onClick(e) {\n        setLangAction({\n          lang: e.key\n        });\n        getPageDataAction({});\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, __jsx(Menu.Item, {\n      value: \"ARM\",\n      key: \"ARM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Arm\"), __jsx(Menu.Item, {\n      value: \"ENG\",\n      key: \"ENG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Eng\")),\n    trigger: ['click'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: \"ant-dropdown-link\",\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, lang === 'ARM' && 'Arm' || lang === 'RU' && 'Ru' || lang === 'ENG' && 'Eng', __jsx(Icon, {\n    type: \"caret-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_c = LangSwitcher;\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var lang = _ref2.user.lang;\n  return {\n    lang: lang\n  };\n};\n\nLangSwitcher.propTypes = {\n  setLangAction: PropTypes.func.isRequired,\n  lang: PropTypes.string.isRequired,\n  getPageDataAction: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  setLangAction: setLang,\n  getPageDataAction: getPageData\n})(LangSwitcher);\n\nvar _c;\n\n$RefreshReg$(_c, \"LangSwitcher\");","map":{"version":3,"sources":["/var/www/mankan-front/components/header/language.js"],"names":["React","Dropdown","Icon","Menu","connect","PropTypes","setLang","getPageData","LangSwitcher","getPageDataAction","setLangAction","lang","e","key","mapStateToProps","user","propTypes","func","isRequired","string"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAGA,SAASC,YAAT,OAIG;AAAA,MAHDC,iBAGC,QAHDA,iBAGC;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,IACC,QADDA,IACC;AACD,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,OAAO,EACL,MAAC,IAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdF,QAAAA,aAAa,CAAC;AAAEC,UAAAA,IAAI,EAAEC,CAAC,CAACC;AAAV,SAAD,CAAb;AACAJ,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,KAAjB;AAAuB,MAAA,GAAG,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,EASE,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,KAAjB;AAAuB,MAAA,GAAG,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CAFJ;AAcE,IAAA,OAAO,EAAE,CAAC,OAAD,CAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAiC,IAAA,IAAI,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,KAAK,KAAT,IAAkB,KAAlB,IAA2BA,IAAI,KAAK,IAAT,IAAiB,IAA5C,IAAoDA,IAAI,KAAK,KAAT,IAAkB,KADzE,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhBF,CADF,CADF;AAyBD;;KA9BQH,Y;;AAgCT,IAAMM,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAWH,IAAX,SAAGI,IAAH,CAAWJ,IAAX;AAAA,SAAyB;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAzB;AAAA,CAAxB;;AAEAH,YAAY,CAACQ,SAAb,GAAyB;AACvBN,EAAAA,aAAa,EAAEL,SAAS,CAACY,IAAV,CAAeC,UADP;AAEvBP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBD,UAFA;AAGvBT,EAAAA,iBAAiB,EAAEJ,SAAS,CAACY,IAAV,CAAeC;AAHX,CAAzB;AAOA,eAAed,OAAO,CAACU,eAAD,EAAkB;AACtCJ,EAAAA,aAAa,EAAEJ,OADuB;AAEtCG,EAAAA,iBAAiB,EAAEF;AAFmB,CAAlB,CAAP,CAGZC,YAHY,CAAf","sourcesContent":["/* eslint-disable no-mixed-operators */\r\nimport React from 'react';\r\n\r\nimport Dropdown from 'antd/lib/dropdown';\r\nimport Icon from 'antd/lib/icon';\r\nimport Menu from 'antd/lib/menu';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { setLang } from '../../store/user/action';\r\nimport { getPageData } from '../../store/pages-data/action';\r\n\r\n\r\nfunction LangSwitcher({\r\n  getPageDataAction,\r\n  setLangAction,\r\n  lang,\r\n}) {\r\n  return (\r\n    <div className=\"lang_list\">\r\n      <Dropdown\r\n        overlay={(\r\n          <Menu\r\n            className=\"lang_dropdown\"\r\n            onClick={(e) => {\r\n              setLangAction({ lang: e.key });\r\n              getPageDataAction({});\r\n            }}\r\n          >\r\n            <Menu.Item value=\"ARM\" key=\"ARM\">Arm</Menu.Item>\r\n            {/* <Menu.Item value=\"RU\" key=\"RU\">Ru</Menu.Item> */}\r\n            <Menu.Item value=\"ENG\" key=\"ENG\">Eng</Menu.Item>\r\n          </Menu>\r\n        )}\r\n        trigger={['click']}\r\n      >\r\n        <a className=\"ant-dropdown-link\" href=\"/\">\r\n          {lang === 'ARM' && 'Arm' || lang === 'RU' && 'Ru' || lang === 'ENG' && 'Eng'}\r\n          <Icon type=\"caret-down\" />\r\n        </a>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user: { lang } }) => ({ lang });\r\n\r\nLangSwitcher.propTypes = {\r\n  setLangAction: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n  getPageDataAction: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  setLangAction: setLang,\r\n  getPageDataAction: getPageData,\r\n})(LangSwitcher);\r\n"]},"metadata":{},"sourceType":"module"}