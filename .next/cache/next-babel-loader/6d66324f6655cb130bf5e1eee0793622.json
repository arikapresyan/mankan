{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/catalog/filter-items/AgeFilter.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Row from 'antd/lib/row';\nimport Checkbox from 'antd/lib/checkbox';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nfunction AgeFilter({\n  age,\n  onChange,\n  ages\n}) {\n  const {\n    messages\n  } = useIntl();\n  const agesArray = ages.map(({\n    id,\n    minAge,\n    maxAge\n  }) => ({\n    id,\n    text: `${minAge}${maxAge < 11 ? ` - ${maxAge}` : '+'}`\n  }));\n  return __jsx(\"div\", {\n    className: \"sidebar_info_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"sidebar_info_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, messages['local.age']), __jsx(\"div\", {\n    className: \"option_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox.Group, {\n    value: Array.isArray(age) ? age : [age],\n    onChange: onChange,\n    className: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, agesArray.map(({\n    id,\n    text\n  }) => __jsx(Checkbox, {\n    value: `${id}`,\n    key: `${id}ageFilter`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, text, ' ', messages['local.years'])), __jsx(Checkbox, {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, messages['local.all'])))));\n}\n\nfunction pamStateToProps({\n  catalogFilter: {\n    age\n  }\n}) {\n  return {\n    age\n  };\n}\n\nAgeFilter.propTypes = {\n  age: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  onChange: PropTypes.func,\n  ages: PropTypes.array\n};\nAgeFilter.defaultProps = {\n  ages: {}\n};\nexport default connect(pamStateToProps)(AgeFilter);","map":{"version":3,"sources":["/var/www/mankan-front/components/catalog/filter-items/AgeFilter.js"],"names":["React","Row","Checkbox","connect","PropTypes","useIntl","AgeFilter","age","onChange","ages","messages","agesArray","map","id","minAge","maxAge","text","Array","isArray","pamStateToProps","catalogFilter","propTypes","oneOfType","array","string","func","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAGA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAnB,EAA4C;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAeL,OAAO,EAA5B;AACA,QAAMM,SAAS,GAAGF,IAAI,CAACG,GAAL,CAAS,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,MAAN;AAAcC,IAAAA;AAAd,GAAD,MAA6B;AACtDF,IAAAA,EADsD;AAEtDG,IAAAA,IAAI,EAAG,GAAEF,MAAO,GAAEC,MAAM,GAAG,EAAT,GAAe,MAAKA,MAAO,EAA3B,GAA+B,GAAI;AAFC,GAA7B,CAAT,CAAlB;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,QAAQ,CAAC,WAAD,CAA5C,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,CAAU,KAAV;AACE,IAAA,KAAK,EAAEO,KAAK,CAACC,OAAN,CAAcX,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CADpC;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,SAAS,EAAC,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGG,SAAS,CAACC,GAAV,CAAc,CAAC;AAAEC,IAAAA,EAAF;AAAMG,IAAAA;AAAN,GAAD,KACb,MAAC,QAAD;AAAU,IAAA,KAAK,EAAG,GAAEH,EAAG,EAAvB;AAA0B,IAAA,GAAG,EAAG,GAAEA,EAAG,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,IADH,EAEG,GAFH,EAGGN,QAAQ,CAAC,aAAD,CAHX,CADD,CAFH,EASE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAAC,WAAD,CADX,CATF,CALF,CADF,CAFF,CADF;AA0BD;;AAED,SAASS,eAAT,CAAyB;AAAEC,EAAAA,aAAa,EAAE;AAAEb,IAAAA;AAAF;AAAjB,CAAzB,EAAqD;AACnD,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD;;AAEDD,SAAS,CAACe,SAAV,GAAsB;AACpBd,EAAAA,GAAG,EAAEH,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,KAAX,EAAkBnB,SAAS,CAACoB,MAA5B,CAApB,CADe;AAEpBhB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB,IAFA;AAGpBhB,EAAAA,IAAI,EAAEL,SAAS,CAACmB;AAHI,CAAtB;AAKAjB,SAAS,CAACoB,YAAV,GAAyB;AACvBjB,EAAAA,IAAI,EAAE;AADiB,CAAzB;AAKA,eAAeN,OAAO,CAACgB,eAAD,CAAP,CAAyBb,SAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport Row from 'antd/lib/row';\r\nimport Checkbox from 'antd/lib/checkbox';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useIntl } from 'react-intl';\r\n\r\n\r\nfunction AgeFilter({ age, onChange, ages }) {\r\n  const { messages } = useIntl();\r\n  const agesArray = ages.map(({ id, minAge, maxAge }) => ({\r\n    id,\r\n    text: `${minAge}${maxAge < 11 ? ` - ${maxAge}` : '+'}`,\r\n  }));\r\n\r\n\r\n  return (\r\n    <div className=\"sidebar_info_box\">\r\n      <h2 className=\"sidebar_info_title\">{messages['local.age']}</h2>\r\n      <div className=\"option_list\">\r\n        <Checkbox.Group\r\n          value={Array.isArray(age) ? age : [age]}\r\n          onChange={onChange}\r\n          className=\"age\"\r\n        >\r\n          <Row>\r\n\r\n            {agesArray.map(({ id, text }) => (\r\n              <Checkbox value={`${id}`} key={`${id}ageFilter`}>\r\n                {text}\r\n                {' '}\r\n                {messages['local.years']}\r\n              </Checkbox>\r\n            ))}\r\n            <Checkbox value=\"all\">\r\n              {messages['local.all']}\r\n            </Checkbox>\r\n          </Row>\r\n        </Checkbox.Group>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction pamStateToProps({ catalogFilter: { age } }) {\r\n  return {\r\n    age,\r\n  };\r\n}\r\n\r\nAgeFilter.propTypes = {\r\n  age: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\r\n  onChange: PropTypes.func,\r\n  ages: PropTypes.array,\r\n};\r\nAgeFilter.defaultProps = {\r\n  ages: {},\r\n};\r\n\r\n\r\nexport default connect(pamStateToProps)(AgeFilter);\r\n"]},"metadata":{},"sourceType":"module"}