{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { loginSuccess, logoutSuccess, resetUserReducer, authorizationError, setLang, authorizationLoading, getUserDataLoading, getUserDataSuccess, getUserDataError } from './action';\nconst initialState = {\n  id: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  phone: '',\n  errorText: null,\n  lang: 'ARM',\n  loading: false,\n  authSuccess: false,\n  fetchingInitialUserData: true\n};\nexport default handleActions({\n  [loginSuccess]: (state, {\n    payload\n  }) => _objectSpread(_objectSpread(_objectSpread({}, state), payload), {}, {\n    loading: false,\n    authSuccess: true\n  }),\n  [authorizationError]: (state, {\n    payload: {\n      errorText\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    errorText,\n    loading: false,\n    authSuccess: false\n  }),\n  [setLang]: (state, {\n    payload: {\n      lang\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    lang\n  }),\n  [authorizationLoading]: store => _objectSpread(_objectSpread({}, store), {}, {\n    loading: true\n  }),\n  [getUserDataLoading]: store => _objectSpread(_objectSpread({}, store), {}, {\n    fetchingInitialUserData: true\n  }),\n  [getUserDataSuccess]: (store, {\n    payload\n  }) => _objectSpread(_objectSpread({}, store), {}, {\n    authSuccess: true,\n    fetchingInitialUserData: false\n  }, payload),\n  [getUserDataError]: state => _objectSpread(_objectSpread({}, initialState), {}, {\n    fetchingInitialUserData: false,\n    lang: state.lang\n  }),\n  [resetUserReducer]: () => _objectSpread(_objectSpread({}, initialState), {}, {\n    fetchingInitialUserData: false\n  }),\n  [logoutSuccess]: () => _objectSpread(_objectSpread({}, initialState), {}, {\n    fetchingInitialUserData: false\n  })\n}, initialState);\nexport const selectAuthorized = ({\n  user\n}) => user.authSuccess;\nexport const selectUser = ({\n  user\n}) => user;\nexport const selectLang = ({\n  user: {\n    lang\n  }\n}) => lang;","map":{"version":3,"sources":["/var/www/mankan-front/store/user/reducer.js"],"names":["handleActions","loginSuccess","logoutSuccess","resetUserReducer","authorizationError","setLang","authorizationLoading","getUserDataLoading","getUserDataSuccess","getUserDataError","initialState","id","email","firstName","lastName","phone","errorText","lang","loading","authSuccess","fetchingInitialUserData","state","payload","store","selectAuthorized","user","selectUser","selectLang"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SACEC,YADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,OALF,EAMEC,oBANF,EAOEC,kBAPF,EAQEC,kBARF,EASEC,gBATF,QAUO,UAVP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,EADe;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,SAAS,EAAE,IANQ;AAOnBC,EAAAA,IAAI,EAAE,KAPa;AAQnBC,EAAAA,OAAO,EAAE,KARU;AASnBC,EAAAA,WAAW,EAAE,KATM;AAUnBC,EAAAA,uBAAuB,EAAE;AAVN,CAArB;AAcA,eAAepB,aAAa,CAAC;AAC3B,GAACC,YAAD,GAAgB,CACdoB,KADc,EAEd;AACEC,IAAAA;AADF,GAFc,mDAMXD,KANW,GAOXC,OAPW;AAQdJ,IAAAA,OAAO,EAAE,KARK;AASdC,IAAAA,WAAW,EAAE;AATC,IADW;AAY3B,GAACf,kBAAD,GAAsB,CAACiB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEN,MAAAA;AAAF;AAAX,GAAR,qCACjBK,KADiB;AAEpBL,IAAAA,SAFoB;AAGpBE,IAAAA,OAAO,EAAE,KAHW;AAIpBC,IAAAA,WAAW,EAAE;AAJO,IAZK;AAkB3B,GAACd,OAAD,GAAW,CAACgB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEL,MAAAA;AAAF;AAAX,GAAR,qCACNI,KADM;AAETJ,IAAAA;AAFS,IAlBgB;AAuB3B,GAACX,oBAAD,GAAyBiB,KAAD,oCAAiBA,KAAjB;AAAwBL,IAAAA,OAAO,EAAE;AAAjC,IAvBG;AAwB3B,GAACX,kBAAD,GAAuBgB,KAAD,oCAAiBA,KAAjB;AAAwBH,IAAAA,uBAAuB,EAAE;AAAjD,IAxBK;AA0B3B,GAACZ,kBAAD,GAAsB,CAACe,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,qCACjBC,KADiB;AACVJ,IAAAA,WAAW,EAAE,IADH;AACSC,IAAAA,uBAAuB,EAAE;AADlC,KAC4CE,OAD5C,CA1BK;AA6B3B,GAACb,gBAAD,GAAqBY,KAAD,oCAAiBX,YAAjB;AAA+BU,IAAAA,uBAAuB,EAAE,KAAxD;AAA+DH,IAAAA,IAAI,EAAEI,KAAK,CAACJ;AAA3E,IA7BO;AA8B3B,GAACd,gBAAD,GAAoB,sCAAYO,YAAZ;AAA0BU,IAAAA,uBAAuB,EAAE;AAAnD,IA9BO;AA+B3B,GAAClB,aAAD,GAAiB,sCAAYQ,YAAZ;AAA0BU,IAAAA,uBAAuB,EAAE;AAAnD;AA/BU,CAAD,EAgCzBV,YAhCyB,CAA5B;AAmCA,OAAO,MAAMc,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAI,CAACN,WAA5C;AACP,OAAO,MAAMO,UAAU,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAcA,IAAjC;AACP,OAAO,MAAME,UAAU,GAAG,CAAC;AAAEF,EAAAA,IAAI,EAAE;AAAER,IAAAA;AAAF;AAAR,CAAD,KAAwBA,IAA3C","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport {\n  loginSuccess,\n  logoutSuccess,\n  resetUserReducer,\n  authorizationError,\n  setLang,\n  authorizationLoading,\n  getUserDataLoading,\n  getUserDataSuccess,\n  getUserDataError,\n} from './action';\n\n\nconst initialState = {\n  id: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  phone: '',\n  errorText: null,\n  lang: 'ARM',\n  loading: false,\n  authSuccess: false,\n  fetchingInitialUserData: true,\n};\n\n\nexport default handleActions({\n  [loginSuccess]: (\n    state,\n    {\n      payload,\n    },\n  ) => ({\n    ...state,\n    ...payload,\n    loading: false,\n    authSuccess: true,\n  }),\n  [authorizationError]: (state, { payload: { errorText } }) => ({\n    ...state,\n    errorText,\n    loading: false,\n    authSuccess: false,\n  }),\n  [setLang]: (state, { payload: { lang } }) => ({\n    ...state,\n    lang,\n  }),\n\n  [authorizationLoading]: (store) => ({ ...store, loading: true }),\n  [getUserDataLoading]: (store) => ({ ...store, fetchingInitialUserData: true }),\n\n  [getUserDataSuccess]: (store, { payload }) => ({\n    ...store, authSuccess: true, fetchingInitialUserData: false, ...payload,\n  }),\n  [getUserDataError]: (state) => ({ ...initialState, fetchingInitialUserData: false, lang: state.lang }),\n  [resetUserReducer]: () => ({ ...initialState, fetchingInitialUserData: false }),\n  [logoutSuccess]: () => ({ ...initialState, fetchingInitialUserData: false }),\n}, initialState);\n\n\nexport const selectAuthorized = ({ user }) => user.authSuccess;\nexport const selectUser = ({ user }) => user;\nexport const selectLang = ({ user: { lang } }) => lang;\n"]},"metadata":{},"sourceType":"module"}