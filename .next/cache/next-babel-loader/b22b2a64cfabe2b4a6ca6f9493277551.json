{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workMenuList),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchMenuList);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, select, call } from '@redux-saga/core/effects';\nimport { getMenuList, getMenuListSuccess } from './action'; // eslint-disable-next-line import/no-cycle\n\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\nimport { getProductAge } from '../../constants/utils';\n\nfunction getRequestBody(name) {\n  switch (name) {\n    case 'own':\n      return {\n        ownBrand: true,\n        urlPostfix: 'mankan'\n      };\n\n    case 'infant':\n    case 'infants':\n      return {\n        infant: true,\n        urlPostfix: 'infant'\n      };\n\n    case 'boy':\n    case 'boys':\n      return {\n        sex: 'BOY',\n        urlPostfix: 'boy'\n      };\n\n    case 'girl':\n    case 'girls':\n      return {\n        sex: 'GIRL',\n        urlPostfix: 'girl'\n      };\n\n    default:\n      return {\n        urlPostfix: 'all'\n      };\n  }\n}\n\nfunction getMenuListRequest(_ref) {\n  var urlPostfix = _ref.urlPostfix,\n      lang = _ref.lang;\n  return Axios.request({\n    url: \"/api/product/hoverFilters/\".concat(urlPostfix, \"/?lang=\").concat(lang),\n    method: 'get'\n  });\n}\n\nfunction getBestSellerRequest(data) {\n  return Axios.request({\n    url: '/api/product/navFiltersBestSeller',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction getNavFilteredDataToView(_ref2) {\n  var brand = _ref2.brand,\n      meaning = _ref2.usage,\n      age = _ref2.age,\n      type = _ref2.type,\n      messages = _ref2.messages;\n  var ageToSend = (age || []).map(function (_ref3) {\n    var id = _ref3.id,\n        minAge = _ref3.minAge,\n        maxAge = _ref3.maxAge;\n    return {\n      id: id,\n      name: getProductAge(minAge, maxAge, messages),\n      text: getProductAge(minAge, maxAge, messages)\n    };\n  });\n  return {\n    type: type,\n    age: ageToSend,\n    brand: brand,\n    meaning: meaning\n  };\n}\n\nfunction workMenuList(_ref4) {\n  var _ref4$payload, name, messages, lang, filterData, res, _ref5, rows;\n\n  return _regeneratorRuntime.wrap(function workMenuList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref4$payload = _ref4.payload, name = _ref4$payload.name, messages = _ref4$payload.messages;\n          _context.next = 3;\n          return select(selectLang);\n\n        case 3:\n          lang = _context.sent;\n          _context.prev = 4;\n          filterData = _objectSpread({}, getRequestBody(name), {\n            lang: lang\n          });\n          _context.next = 8;\n          return call(getMenuListRequest, filterData);\n\n        case 8:\n          res = _context.sent;\n          _context.next = 11;\n          return call(getBestSellerRequest, filterData);\n\n        case 11:\n          _ref5 = _context.sent;\n          rows = _ref5.data.result.rows;\n          _context.next = 15;\n          return put(getMenuListSuccess({\n            data: getNavFilteredDataToView(_objectSpread({}, res.data, {\n              messages: messages\n            })),\n            name: name,\n            bestseller: rows[0]\n          }));\n\n        case 15:\n          _context.next = 20;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](4);\n          console.log(_context.t0);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 17]]);\n}\n\nfunction watchMenuList() {\n  return _regeneratorRuntime.wrap(function watchMenuList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(getMenuList, workMenuList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport { // eslint-disable-next-line import/prefer-default-export\nwatchMenuList };","map":null,"metadata":{},"sourceType":"module"}