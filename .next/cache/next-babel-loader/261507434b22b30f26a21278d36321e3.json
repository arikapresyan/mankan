{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Checkbox, Row } from 'antd';\nimport { connect } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport ShowMoreItems from './ShowMoreItems';\n\nfunction MeaningFilter(_ref) {\n  var meaning = _ref.meaning,\n      onChange = _ref.onChange,\n      meanings = _ref.meanings;\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var meaningsArray = Object.keys(meanings).map(function (key) {\n    return {\n      id: meanings[key].id,\n      name: meanings[key].langs[0].name\n    };\n  });\n  var itemsCount = Object.keys(meanings).length;\n\n  var _useState = useState(10),\n      limit = _useState[0],\n      setLimit = _useState[1];\n\n  var showMore = function showMore() {\n    setLimit(limit + 10);\n  };\n\n  return __jsx(\"div\", {\n    className: \"sidebar_info_box\"\n  }, __jsx(\"h2\", {\n    className: \"sidebar_info_title\"\n  }, messages['local.meaning']), __jsx(\"div\", {\n    className: \"option_list\"\n  }, __jsx(Checkbox.Group, {\n    value: meaning.map(function (a) {\n      return \"\".concat(a);\n    }),\n    onChange: onChange,\n    className: \"toy_meaning\"\n  }, __jsx(Row, null, meaningsArray.map(function (_ref2, index) {\n    var id = _ref2.id,\n        name = _ref2.name;\n    return index < limit ? __jsx(Checkbox, {\n      key: \"\".concat(id, \" meaning\"),\n      value: \"\".concat(id)\n    }, name) : null;\n  }), __jsx(Checkbox, {\n    value: \"all\"\n  }, messages['local.all'])))), __jsx(ShowMoreItems, {\n    handleClick: showMore,\n    moreItems: itemsCount - limit\n  }));\n}\n\nfunction pamStateToProps(_ref3) {\n  var meaning = _ref3.catalogFilter.meaning;\n  return {\n    meaning: meaning\n  };\n}\n\nexport default connect(pamStateToProps)(MeaningFilter);","map":null,"metadata":{},"sourceType":"module"}