{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Modal, Form, Upload, Icon } from 'antd';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport useGlobalAPI from '../../../hooks/useGlobalAPI';\nimport { APISend } from '../../../store/global-APIS/action';\nimport userAPI from '../../../API_Paths/userAPI';\nimport { handleChange } from './constants';\n\nfunction AttachCvModal({\n  visible,\n  handleHideModal,\n  vacancyId: id\n}) {\n  const {\n    messages\n  } = useIntl();\n  const dispatch = useDispatch();\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: submit,\n    1: setSubmit\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useGlobalAPI({\n    onCancel: () => {\n      setLoading(false);\n    },\n    onSuccess: () => {\n      setLoading(false);\n      setFileList([]);\n      setSubmit(false);\n      handleHideModal();\n    }\n  });\n  const changeAction = useCallback(handleChange(setFileList, messages), [setFileList, messages]);\n  useEffect(() => setSubmit(false), [visible]);\n  const uploadProps = {\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    onChange: changeAction,\n    multiple: true,\n    accept: 'png',\n    showUploadList: {\n      showDownloadIcon: false\n    }\n  };\n\n  const sendCv = e => {\n    e.preventDefault();\n    setSubmit(true);\n    if (!fileList.length) return false;\n    const FD = new FormData();\n    FD.set('image', fileList[0].originFileObj);\n    FD.set('id', id);\n    setLoading(true);\n    dispatch(APISend({\n      method: 'post',\n      url: userAPI.vacancyFile,\n      data: FD\n    }));\n    return true;\n  };\n\n  return __jsx(Modal, {\n    destroyOnClose: true,\n    visible: visible,\n    onCancel: handleHideModal,\n    footer: null,\n    className: \"attach_cv_modal\"\n  }, __jsx(\"h2\", null, messages['local.attach'], ' ', \"CV\"), __jsx(Form, {\n    onSubmit: sendCv\n  }, __jsx(Form.Item, {\n    validateStatus: submit && !fileList.length ? 'error' : null,\n    help: submit && !fileList.length && 'File is required'\n  }, __jsx(Upload, _extends({}, uploadProps, {\n    fileList: fileList,\n    className: \"upload_file\",\n    accept: \".doc, .docx, application/pdf, image/jpeg\"\n  }), __jsx(Button, null, __jsx(Icon, {\n    type: \"upload\"\n  }), ' ', messages['local.download_CV_using_formats']))), __jsx(Button, {\n    disabled: loading,\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"send_btn\"\n  }, messages['local.send'])));\n}\n\nexport default AttachCvModal;","map":null,"metadata":{},"sourceType":"module"}