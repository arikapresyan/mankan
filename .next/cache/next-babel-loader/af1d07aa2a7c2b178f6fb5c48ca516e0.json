{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst regex = {\n  name: new RegExp('^\\\\p{L}+$', 'u'),\n  string: /\\`|\\~|\\!|\\@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|\\+|\\=|\\[|\\{|\\]|\\}|\\||\\\\|\\'|\\<|\\,|\\.|\\>|\\?|\\/|\\\"|\\\"|\\;|\\:|[0-9]/g,\n  // phone: /^[\\+]?[0-9\\s]*$/im,\n  phone: new RegExp('^[\\\\+]?[(]?[0-9]+$', 'i'),\n  email: new RegExp(\"^([\\\\w\\\\!\\\\#$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\`{\\\\|\\\\}\\\\~]+\\\\.)*[\\\\w\\\\!\\\\#$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\`{\\\\|\\\\}\\\\~]+@((((([a-z0-9]{1}[a-z0-9\\\\-]{0,62}[a-z0-9]{1})|[a-z])\\\\.)+[a-z]{2,6})|(\\\\d{1,3}\\\\.){3}\\\\d{1,3}(\\\\:\\\\d{1,5})?)$\")\n};\n\nfunction setLocalStorageObj(name, obj) {\n  localStorage.setItem(name, JSON.stringify(obj));\n}\n\nfunction getLocalStorageObj(name) {\n  return JSON.parse(localStorage.getItem(name));\n}\n\nfunction removeLocalStorageObj(name) {\n  return localStorage.removeItem(name);\n}\n\nconst getProductSizeFromObj = size => size && `${size.width ? `${size.width} x` : ''}\n ${size.height ? `${size.height} x` : ''}\n ${size.length ? `${size.length}` : ''}`;\n\nconst getProductBrand = brand => brand && brand[0] && brand[0].name;\n\nconst getBonus = (price, percent, count) => Math.ceil(count * (+price * (+percent / 100)));\n\nconst getProductAge = (minAge, maxAge) => {\n  if (maxAge > 8) maxAge = '8+';\n  if (minAge === 8) return '8+';\n  return `${minAge}-${maxAge}`;\n};\n\nconst getProductBattery = accessories => {\n  if (accessories && accessories.length) {\n    return accessories.find(({\n      ProductAccessoriesMap: {\n        type: accessoryType\n      }\n    }) => accessoryType === 'battery');\n  }\n\n  return null;\n};\n\nconst addToCartObj = ({\n  product,\n  count,\n  battery,\n  hasBattery\n}) => {\n  var _battery$ProductAcces, _battery$ProductAcces2, _basket;\n\n  let newCount = battery === null || battery === void 0 ? void 0 : (_battery$ProductAcces = battery.ProductAccessoriesMap) === null || _battery$ProductAcces === void 0 ? void 0 : _battery$ProductAcces.count;\n  const maxCount = battery === null || battery === void 0 ? void 0 : battery.xmlCount;\n  const batteryNeededCunt = battery === null || battery === void 0 ? void 0 : (_battery$ProductAcces2 = battery.ProductAccessoriesMap) === null || _battery$ProductAcces2 === void 0 ? void 0 : _battery$ProductAcces2.count;\n  const basket = getLocalStorageObj('cart');\n  const productIn = basket === null || basket === void 0 ? void 0 : basket[product.id];\n  const batteryInBasketCount = (basket === null || basket === void 0 ? void 0 : (_basket = basket[battery === null || battery === void 0 ? void 0 : battery.id]) === null || _basket === void 0 ? void 0 : _basket.count) || 0;\n\n  if (hasBattery) {\n    const plusCount = batteryInBasketCount + batteryNeededCunt;\n\n    if (maxCount < plusCount && plusCount < 10) {\n      newCount = maxCount - batteryInBasketCount;\n    } else if (plusCount > 10) {\n      newCount = 10 - batteryInBasketCount;\n    }\n\n    if (productIn === null || productIn === void 0 ? void 0 : productIn.batteryId) newCount = 0;\n  }\n\n  return _objectSpread({\n    [product.id]: _objectSpread({\n      id: product.id,\n      count,\n      status: true\n    }, hasBattery ? {\n      batteryId: battery.id\n    } : {})\n  }, hasBattery ? {\n    [battery.id]: {\n      id: battery.id,\n      count: newCount,\n      status: true,\n      type: 'battery'\n    }\n  } : {});\n};\n\nconst getTooltipTexts = msg => ({\n  bonusText: msg['local.sign_up_for_bonus'],\n  promoText: msg['local.follow_us_for_promo']\n});\n\nconst createObjectArrayFromObject = (object, callback, limit) => {\n  const keys = Object.keys(object);\n  const {\n    length\n  } = keys;\n  const arr = [];\n  const maxItems = length > limit ? limit : length;\n  keys.forEach((key, index) => {\n    if (index < maxItems) {\n      arr.push(callback(object[key]));\n    }\n  });\n  return arr;\n};\n\nconst C_TOKEN = 'mnktkn';\nexport { regex, setLocalStorageObj, getLocalStorageObj, removeLocalStorageObj, getProductSizeFromObj, getBonus, getProductBrand, getProductAge, getProductBattery, addToCartObj, createObjectArrayFromObject, C_TOKEN, getTooltipTexts };","map":null,"metadata":{},"sourceType":"module"}