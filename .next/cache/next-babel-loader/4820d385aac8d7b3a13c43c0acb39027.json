{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Icon from 'antd/lib/icon';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { toggleVisibility, hide } from '../../store/userEventListeners/action';\nimport CartWishlistConteiner from '../../components/header/CartWishlistConteiner';\nimport { catalogGet } from '../../store/catalog/action';\n\nfunction MobileMenuBar({\n  toggleVisibilityAction,\n  hideAction,\n  isVisible,\n  catalogGetAction,\n  pagesCount\n}) {\n  const router = useRouter();\n\n  const isPageActive = path => router.pathname === path && !isVisible.isFilterListOpen && !isVisible.isCategoryMenuOpen;\n\n  return __jsx(\"div\", {\n    className: \"mobile_menu_bar\"\n  }, __jsx(\"div\", {\n    className: `menu_bar_item ${isPageActive('/') ? 'is_active' : ''}`\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(Icon, {\n    type: \"home\"\n  })))), __jsx(\"div\", {\n    className: `menu_bar_item ${isVisible.isFilterListOpen ? 'is_active' : ''}`,\n    onClick: () => {\n      !pagesCount && catalogGetAction();\n      hideAction({\n        name: 'isCategoryMenuOpen'\n      });\n      hideAction({\n        name: 'isCategorySubMenuOpen'\n      });\n      toggleVisibilityAction({\n        name: 'isFilterListOpen'\n      });\n    }\n  }, __jsx(Icon, {\n    type: \"search\"\n  })), __jsx(\"div\", {\n    className: `menu_bar_item ${isVisible.isCategoryMenuOpen ? 'is_active' : ''}`,\n    onClick: () => {\n      hideAction({\n        name: 'isFilterListOpen'\n      });\n      hideAction({\n        name: 'isCategorySubMenuOpen'\n      });\n      toggleVisibilityAction({\n        name: 'isCategoryMenuOpen'\n      });\n    }\n  }, __jsx(Icon, {\n    type: \"menu\"\n  })), __jsx(CartWishlistConteiner, {\n    mode: \"mobil\",\n    isPageActive: isPageActive\n  }));\n}\n\nconst mapStateToProps = ({\n  userEventListeners: {\n    isVisible\n  },\n  catalog: {\n    pagesCount\n  }\n}) => ({\n  isVisible,\n  pagesCount\n});\n\nexport default connect(mapStateToProps, {\n  toggleVisibilityAction: toggleVisibility,\n  hideAction: hide,\n  catalogGetAction: catalogGet\n})(MobileMenuBar);","map":null,"metadata":{},"sourceType":"module"}