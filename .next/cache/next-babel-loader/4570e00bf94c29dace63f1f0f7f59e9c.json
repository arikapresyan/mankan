{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workCatalogFilterChange),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchCatalogFilterChange),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(workCatalogFilterSetValues),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchCatalogFilterSetValues),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchCatalogMainSearch);\n\nimport { takeLatest, put, select, takeEvery } from '@redux-saga/core/effects';\nimport Router from 'next/router';\nimport { catalogFilterChange, catalogFilterChangeSuccess, catalogFilterSetValues, catalogMainSearch, catalogSetFilters, resetFilterView } from './action';\nimport { catalogGet } from '../catalog/action';\nimport { getCatalogFilterByName, selectCatalogFilters } from './reducer';\n\nfunction workCatalogFilterChange(_ref) {\n  var _ref$payload, name, value, classificationAll;\n\n  return _regeneratorRuntime.wrap(function workCatalogFilterChange$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref$payload = _ref.payload, name = _ref$payload.name, value = _ref$payload.value;\n          _context.prev = 1;\n\n          if (!(name === 'classification' && (value === null || value === void 0 ? void 0 : value[0]) === 'all')) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 5;\n          return put(resetFilterView());\n\n        case 5:\n          _context.next = 13;\n          break;\n\n        case 7:\n          _context.next = 9;\n          return select(getCatalogFilterByName('classification'));\n\n        case 9:\n          classificationAll = _context.sent;\n\n          if (!(classificationAll[0] === 'all')) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 13;\n          return put(catalogFilterChangeSuccess({\n            name: 'classification',\n            value: []\n          }));\n\n        case 13:\n          _context.next = 15;\n          return put(catalogFilterChangeSuccess({\n            name: name,\n            value: value\n          }));\n\n        case 15:\n          _context.next = 17;\n          return put(catalogGet({\n            name: name,\n            value: value\n          }));\n\n        case 17:\n          _context.next = 21;\n          break;\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](1);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 19]]);\n}\n\nfunction watchCatalogFilterChange() {\n  return _regeneratorRuntime.wrap(function watchCatalogFilterChange$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(catalogFilterChange, workCatalogFilterChange);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction workCatalogFilterSetValues(_ref2) {\n  var payload, _payload$classificati, all, classificationAll;\n\n  return _regeneratorRuntime.wrap(function workCatalogFilterSetValues$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context3.prev = 1;\n          all = payload === null || payload === void 0 ? void 0 : (_payload$classificati = payload.classification) === null || _payload$classificati === void 0 ? void 0 : _payload$classificati[0];\n\n          if (!all) {\n            _context3.next = 8;\n            break;\n          }\n\n          _context3.next = 6;\n          return put(resetFilterView({\n            exception: 'classification'\n          }));\n\n        case 6:\n          _context3.next = 14;\n          break;\n\n        case 8:\n          _context3.next = 10;\n          return select(getCatalogFilterByName('classification'));\n\n        case 10:\n          classificationAll = _context3.sent;\n\n          if (!(classificationAll[0] === 'all')) {\n            _context3.next = 14;\n            break;\n          }\n\n          _context3.next = 14;\n          return put(catalogFilterChangeSuccess({\n            name: 'classification',\n            value: []\n          }));\n\n        case 14:\n          _context3.next = 18;\n          break;\n\n        case 16:\n          _context3.prev = 16;\n          _context3.t0 = _context3[\"catch\"](1);\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 16]]);\n}\n\nfunction watchCatalogFilterSetValues() {\n  return _regeneratorRuntime.wrap(function watchCatalogFilterSetValues$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(catalogFilterSetValues, workCatalogFilterSetValues);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchCatalogMainSearch() {\n  return _regeneratorRuntime.wrap(function watchCatalogMainSearch$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(catalogMainSearch, /*#__PURE__*/_regeneratorRuntime.mark(function workCatalogMainSearch(_ref3) {\n            var searchWord, filters;\n            return _regeneratorRuntime.wrap(function workCatalogMainSearch$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    searchWord = _ref3.payload.searchWord;\n                    _context5.prev = 1;\n                    _context5.next = 4;\n                    return select(selectCatalogFilters);\n\n                  case 4:\n                    filters = _context5.sent;\n                    _context5.next = 7;\n                    return put(catalogSetFilters({\n                      filters: _objectSpread(_objectSpread({}, filters), {}, {\n                        searchWord: searchWord\n                      })\n                    }));\n\n                  case 7:\n                    Router.push('/catalog');\n                    _context5.next = 13;\n                    break;\n\n                  case 10:\n                    _context5.prev = 10;\n                    _context5.t0 = _context5[\"catch\"](1);\n\n                    if (false) {\n                      console.log(_context5.t0);\n                    }\n\n                  case 13:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, workCatalogMainSearch, null, [[1, 10]]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked5);\n}\n\nexport { watchCatalogFilterChange, watchCatalogFilterSetValues, watchCatalogMainSearch };","map":null,"metadata":{},"sourceType":"module"}