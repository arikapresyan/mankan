{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workGetSingleData),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetSingleData),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(_callee);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { all, put, call, takeEvery, select } from 'redux-saga/effects';\nimport Axios from '../services/Axios';\nimport { getSingleData, getSingleDataError, getSingleDataSuccess, resetSingleData } from './action';\nimport { selectLang } from '../user/reducer';\n\nfunction getPaymentDeliveryRequest() {\n  var _ref, _ref$data$result, days, time, res;\n\n  return _regeneratorRuntime.async(function getPaymentDeliveryRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Axios.request({\n            method: 'get',\n            url: '/api/user/deliveryWeekTime'\n          }));\n\n        case 2:\n          _ref = _context.sent;\n          _ref$data$result = _ref.data.result;\n          days = _ref$data$result.week;\n          time = _ref$data$result.time;\n          _context.prev = 6;\n          res = {\n            time: time.filter(function (day) {\n              return day;\n            }).map(function (tameStr) {\n              var _tameStr$split = tameStr.split(':'),\n                  _tameStr$split2 = _slicedToArray(_tameStr$split, 2),\n                  hour = _tameStr$split2[0],\n                  min = _tameStr$split2[1];\n\n              var start = new Date(new Date().setHours(hour, min));\n              var end = new Date(new Date().setHours(+hour === 24 ? 1 : +hour + 1, min));\n              return {\n                start: start,\n                end: end\n              };\n            }),\n            days: days\n          };\n          return _context.abrupt(\"return\", res);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](6);\n          return _context.abrupt(\"return\", null);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 11]]);\n}\n\nfunction getPromoCode(promoCode) {\n  var _ref2, result;\n\n  return _regeneratorRuntime.async(function getPromoCode$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(Axios({\n            method: 'get',\n            url: \"/api/user/promoCode/\".concat(promoCode)\n          }));\n\n        case 2:\n          _ref2 = _context2.sent;\n          result = _ref2.data.result;\n          return _context2.abrupt(\"return\", result);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\n\nfunction getUsages(data) {\n  var response;\n  return _regeneratorRuntime.async(function getUsages$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(Axios({\n            method: 'post',\n            url: '/api/product/usage',\n            data: {\n              lang: data.lang\n            }\n          }));\n\n        case 2:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", response.data.result);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n}\n\nfunction getRequest(data) {\n  var res;\n  return _regeneratorRuntime.async(function getRequest$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.t0 = data.name;\n          _context4.next = _context4.t0 === 'paymentDelivery' ? 3 : _context4.t0 === 'promoCode' ? 7 : _context4.t0 === 'usage' ? 11 : 15;\n          break;\n\n        case 3:\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(getPaymentDeliveryRequest());\n\n        case 5:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res);\n\n        case 7:\n          _context4.next = 9;\n          return _regeneratorRuntime.awrap(getPromoCode(data.promoCode));\n\n        case 9:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res);\n\n        case 11:\n          _context4.next = 13;\n          return _regeneratorRuntime.awrap(getUsages(data));\n\n        case 13:\n          res = _context4.sent;\n          return _context4.abrupt(\"return\", res);\n\n        case 15:\n          return _context4.abrupt(\"return\", null);\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n}\n\nfunction workGetSingleData(_ref3) {\n  var data, lang, result;\n  return _regeneratorRuntime.wrap(function workGetSingleData$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          data = _ref3.payload.data;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return select(selectLang);\n\n        case 4:\n          lang = _context5.sent;\n          _context5.next = 7;\n          return call(getRequest, _objectSpread({}, data, {\n            lang: lang\n          }));\n\n        case 7:\n          result = _context5.sent;\n          _context5.next = 10;\n          return put(getSingleDataSuccess({\n            data: result,\n            name: data.name\n          }));\n\n        case 10:\n          _context5.next = 16;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 16;\n          return put(getSingleDataError({\n            name: data.name\n          }));\n\n        case 16:\n          _context5.prev = 16;\n          _context5.next = 19;\n          return put(resetSingleData({\n            name: data.name\n          }));\n\n        case 19:\n          return _context5.finish(16);\n\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked, null, [[1, 12, 16, 20]]);\n}\n\nfunction watchGetSingleData() {\n  return _regeneratorRuntime.wrap(function watchGetSingleData$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(getSingleData, workGetSingleData);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([watchGetSingleData()]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked3);\n}","map":null,"metadata":{},"sourceType":"module"}