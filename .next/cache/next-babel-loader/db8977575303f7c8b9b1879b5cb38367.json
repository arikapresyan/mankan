{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nexport default function useHeader(_ref) {\n  var toggleVisibilityAction = _ref.toggleVisibilityAction,\n      hideAction = _ref.hideAction,\n      fixedSearchVisible = _ref.fixedSearchVisible;\n  var headerRef = useRef(null);\n\n  var _useState = useState(false),\n      fixedNavVisible = _useState[0],\n      setFixedNavVisible = _useState[1];\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var _useState2 = useState({\n    isMenuOpen: false\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    if (!fixedNavVisible && fixedSearchVisible) {\n      hideAction({\n        name: 'fixedSearchVisible'\n      });\n    }\n  }, [fixedNavVisible]);\n  useEffect(function () {\n    var header = headerRef.current;\n\n    var detectMenuVisibility = function detectMenuVisibility() {\n      var _header$getBoundingCl = header.getBoundingClientRect(),\n          bottom = _header$getBoundingCl.bottom;\n\n      if (bottom < 30) {\n        setFixedNavVisible(true);\n      } else {\n        setFixedNavVisible(false);\n      }\n    };\n\n    detectMenuVisibility();\n\n    var scrollEventHandler = function scrollEventHandler(e) {\n      e.preventDefault();\n      detectMenuVisibility();\n    };\n\n    var clickEventHandler = function clickEventHandler(e) {\n      if (!e.target.closest('.search_container.open') && fixedSearchVisible) {\n        hideAction({\n          name: 'fixedSearchVisible'\n        });\n      }\n    };\n\n    window.addEventListener('scroll', scrollEventHandler);\n    window.addEventListener('click', clickEventHandler);\n    return function () {\n      window.removeEventListener('scroll', scrollEventHandler);\n      window.removeEventListener('click', clickEventHandler);\n    };\n  }, []);\n\n  var setRegistrationVisible = function setRegistrationVisible() {\n    toggleVisibilityAction({\n      name: 'registrationVisible'\n    });\n  };\n\n  var hideLogin = function hideLogin() {\n    toggleVisibilityAction({\n      name: 'loginVisible'\n    });\n  };\n\n  var handleOnHideModal = function handleOnHideModal(name) {\n    hideAction({\n      name: name\n    });\n  };\n\n  var handleOnOpenModals = function handleOnOpenModals(name) {\n    toggleVisibilityAction({\n      name: name\n    });\n  };\n\n  var handleOnForgotPassword = function handleOnForgotPassword() {\n    hideAction({\n      name: 'loginVisible'\n    });\n    toggleVisibilityAction({\n      name: 'forgotVisible'\n    });\n  };\n\n  var handleOnLoginOpen = function handleOnLoginOpen() {\n    toggleVisibilityAction({\n      name: 'loginVisible'\n    });\n  };\n\n  var handleMoveToRegistration = function handleMoveToRegistration(callBack) {\n    hideAction({\n      name: 'loginVisible'\n    });\n    callBack();\n  };\n\n  var handleMenuToggle = function handleMenuToggle() {\n    setState({\n      isMenuOpen: !state.isMenuOpen\n    });\n  };\n\n  var handleToggleSearchVisibility = function handleToggleSearchVisibility() {\n    toggleVisibilityAction({\n      name: 'fixedSearchVisible'\n    });\n  };\n\n  return {\n    headerRef: headerRef,\n    handleMenuToggle: handleMenuToggle,\n    handleToggleSearchVisibility: handleToggleSearchVisibility,\n    handleMoveToRegistration: handleMoveToRegistration,\n    handleOnLoginOpen: handleOnLoginOpen,\n    fixedNavVisible: fixedNavVisible,\n    messages: messages,\n    setRegistrationVisible: setRegistrationVisible,\n    hideLogin: hideLogin,\n    handleOnHideModal: handleOnHideModal,\n    handleOnOpenModals: handleOnOpenModals,\n    handleOnForgotPassword: handleOnForgotPassword,\n    state: state\n  };\n}","map":null,"metadata":{},"sourceType":"module"}