{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workGetCurrantTime),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetCurrantTime),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(_callee);\n\nimport { all, put, call, takeEvery } from 'redux-saga/effects';\nimport Axios from 'axios';\nimport { getCurrantTime, setCurrantTime } from './action';\n\nfunction workGetCurrantTime() {\n  var i, _yield$call, datetime, newTime;\n\n  return _regeneratorRuntime.wrap(function workGetCurrantTime$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          i = 0;\n\n        case 1:\n          if (!(i < 3)) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.prev = 2;\n          _context.next = 5;\n          return call(Axios.request, {\n            url: 'https://worldtimeapi.org/api/timezone/Asia/Yerevan',\n            method: 'get'\n          });\n\n        case 5:\n          _yield$call = _context.sent;\n          datetime = _yield$call.data.datetime;\n          newTime = datetime.split('.')[0];\n          _context.next = 10;\n          return put(setCurrantTime({\n            currantTime: new Date(newTime)\n          }));\n\n        case 10:\n          return _context.abrupt(\"return\", true);\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 16:\n          i++;\n          _context.next = 1;\n          break;\n\n        case 19:\n          return _context.abrupt(\"return\", true);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 13]]);\n}\n\nfunction watchGetCurrantTime() {\n  return _regeneratorRuntime.wrap(function watchGetCurrantTime$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(getCurrantTime, workGetCurrantTime);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchGetCurrantTime()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/var/www/mankan-front/store/currant-time/saga.js"],"names":["workGetCurrantTime","watchGetCurrantTime","all","put","call","takeEvery","Axios","getCurrantTime","setCurrantTime","i","request","url","method","datetime","data","newTime","split","currantTime","Date","console","log"],"mappings":";;oDAMUA,kB;qDAkBAC,mB;;;AAxBV,SACEC,GADF,EACOC,GADP,EACYC,IADZ,EACkBC,SADlB,QAEO,oBAFP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,UAA/C;;AAEA,SAAUR,kBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AACWS,UAAAA,CADX,GACe,CADf;;AAAA;AAAA,gBACkBA,CAAC,GAAG,CADtB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGqC,iBAAML,IAAI,CAACE,KAAK,CAACI,OAAP,EAAgB;AACvDC,YAAAA,GAAG,EAAE,oDADkD;AAEvDC,YAAAA,MAAM,EAAE;AAF+C,WAAhB,CAAV;;AAHrC;AAAA;AAGsBC,UAAAA,QAHtB,eAGcC,IAHd,CAGsBD,QAHtB;AAQYE,UAAAA,OARZ,GAQsBF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoB,CAApB,CARtB;AAAA;AASM,iBAAMb,GAAG,CAACK,cAAc,CAAC;AAAES,YAAAA,WAAW,EAAE,IAAIC,IAAJ,CAASH,OAAT;AAAf,WAAD,CAAf,CAAT;;AATN;AAAA,2CAUa,IAVb;;AAAA;AAAA;AAAA;AAYMI,UAAAA,OAAO,CAACC,GAAR;;AAZN;AACyBX,UAAAA,CAAC,EAD1B;AAAA;AAAA;;AAAA;AAAA,2CAeS,IAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAAUR,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,SAAS,CAACE,cAAD,EAAiBP,kBAAjB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CAACD,mBAAmB,EAApB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\n  all, put, call, takeEvery,\n} from 'redux-saga/effects';\nimport Axios from 'axios';\nimport { getCurrantTime, setCurrantTime } from './action';\n\nfunction* workGetCurrantTime() {\n  for (let i = 0; i < 3; i++) {\n    try {\n      const { data: { datetime } } = yield call(Axios.request, {\n        url: 'https://worldtimeapi.org/api/timezone/Asia/Yerevan',\n        method: 'get',\n      });\n\n      const newTime = datetime.split('.')[0];\n      yield put(setCurrantTime({ currantTime: new Date(newTime) }));\n      return true;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return true;\n}\n\nfunction* watchGetCurrantTime() {\n  yield takeEvery(getCurrantTime, workGetCurrantTime);\n}\n\nexport default function* () {\n  yield all([watchGetCurrantTime()]);\n}\n"]},"metadata":{},"sourceType":"module"}