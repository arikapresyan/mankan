{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/common/PriceSlider.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useCallback } from 'react';\nimport Col from 'antd/lib/col';\nimport InputNumber from 'antd/lib/input-number';\nimport Slider from 'antd/lib/slider';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport keys from '../../constants/keys';\n\nfunction sortNumber(a, b) {\n  return a - b;\n}\n\nfunction closerTimer() {\n  let timerId = null;\n  return (callback, time) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(callback, time);\n  };\n}\n\nfunction PriceSlider({\n  handleChange,\n  price,\n  mod\n}) {\n  const {\n    messages\n  } = useIntl();\n  const {\n    0: inputsValue,\n    1: setInputsValue\n  } = useState(price);\n  const timerFunction = useMemo(() => closerTimer(), []); // useEffect(() => {\n  //   if (price[0] === inputsValue[0] && price[1] === inputsValue[1]) return;\n  //   setInputsValue([...inputsValue].sort(sortNumber));\n  // }, [price]);\n\n  const timerChange = useCallback(values => {\n    const undefinedIndex = values.findIndex(val => val === '');\n    if (undefinedIndex !== -1) values[undefinedIndex] = undefined;\n    setInputsValue(values);\n    timerFunction(() => {\n      handleChange(values);\n    }, 500);\n  }, []);\n\n  const handleChangeSlider = values => {\n    const cloneValues = [...values];\n\n    if (!cloneValues[0] || !cloneValues[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      cloneValues[0] ? cloneValues[1] = cloneValues[0] : cloneValues[0] = cloneValues[1];\n    }\n\n    timerChange(values);\n  };\n\n  const sortValues = () => {\n    if (inputsValue[0] && inputsValue[1]) {\n      setInputsValue([...inputsValue].sort(sortNumber));\n    }\n  };\n\n  const numberInputs = () => __jsx(React.Fragment, null, __jsx(InputNumber, {\n    min: 1,\n    max: keys.DEFAULT_PRICE[1],\n    value: inputsValue[0],\n    onChange: value => {\n      timerChange([value, inputsValue[1]]);\n    },\n    onBlur: sortValues,\n    placeholder: messages['local.min-price'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(\"span\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(InputNumber, {\n    min: 1,\n    max: keys.DEFAULT_PRICE[1],\n    value: inputsValue[1],\n    onChange: value => {\n      timerChange([inputsValue[0], value]);\n    },\n    onBlur: sortValues,\n    placeholder: messages['local.max-price'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n\n  const slider = () => __jsx(React.Fragment, null, __jsx(Slider, {\n    range: true,\n    onChange: values => {\n      if (!values[0]) {\n        values[0] = inputsValue[0] || inputsValue[1] || values[1];\n      } else if (!values[1]) {\n        values[1] = inputsValue[1] || inputsValue[0] || values[0];\n      }\n\n      handleChangeSlider(values);\n    },\n    value: [...(inputsValue[0] || inputsValue[1] ? [Number.isInteger(inputsValue[0]) ? inputsValue[0] : inputsValue[1], inputsValue[1] || inputsValue[0]] : [])].sort(sortNumber),\n    max: keys.DEFAULT_PRICE[1],\n    min: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n\n  switch (mod) {\n    case 'Home':\n      return __jsx(React.Fragment, null, __jsx(Col, {\n        xs: 24,\n        sm: 24,\n        md: 12,\n        lg: 6,\n        xxl: 5,\n        className: \"choose_price clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, messages['local.specify_price']), __jsx(\"div\", {\n        className: \"price_slider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, numberInputs()), __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }, slider()))), __jsx(Col, {\n        xs: 24,\n        className: \"choose_price_mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, numberInputs()), __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, slider())));\n\n    default:\n      return __jsx(\"div\", {\n        className: \"price_slider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, numberInputs()), __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, slider()));\n  }\n}\n\nPriceSlider.propTypes = {\n  handleChange: PropTypes.func,\n  price: PropTypes.array,\n  mod: PropTypes.string\n};\nexport default PriceSlider;","map":{"version":3,"sources":["/var/www/mankan-front/components/common/PriceSlider.js"],"names":["React","useState","useMemo","useCallback","Col","InputNumber","Slider","PropTypes","useIntl","keys","sortNumber","a","b","closerTimer","timerId","callback","time","clearTimeout","setTimeout","PriceSlider","handleChange","price","mod","messages","inputsValue","setInputsValue","timerFunction","timerChange","values","undefinedIndex","findIndex","val","undefined","handleChangeSlider","cloneValues","sortValues","sort","numberInputs","DEFAULT_PRICE","value","slider","Number","isInteger","propTypes","func","array","string"],"mappings":"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","sourcesContent":["import React, {\n  useState, useMemo, useCallback,\n} from 'react';\nimport Col from 'antd/lib/col';\nimport InputNumber from 'antd/lib/input-number';\nimport Slider from 'antd/lib/slider';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport keys from '../../constants/keys';\n\nfunction sortNumber(a, b) {\n  return a - b;\n}\n\nfunction closerTimer() {\n  let timerId = null;\n  return (callback, time) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(callback, time);\n  };\n}\n\nfunction PriceSlider({ handleChange, price, mod }) {\n  const { messages } = useIntl();\n  const [inputsValue, setInputsValue] = useState(price);\n  const timerFunction = useMemo(() => closerTimer(), []);\n\n\n  // useEffect(() => {\n  //   if (price[0] === inputsValue[0] && price[1] === inputsValue[1]) return;\n  //   setInputsValue([...inputsValue].sort(sortNumber));\n  // }, [price]);\n\n\n  const timerChange = useCallback((values) => {\n    const undefinedIndex = values.findIndex((val) => val === '');\n    if (undefinedIndex !== -1) values[undefinedIndex] = undefined;\n\n    setInputsValue(values);\n    timerFunction(() => {\n      handleChange(values);\n    }, 500);\n  }, []);\n  const handleChangeSlider = (values) => {\n    const cloneValues = [...values];\n    if (!cloneValues[0] || !cloneValues[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      cloneValues[0] ? cloneValues[1] = cloneValues[0] : cloneValues[0] = cloneValues[1];\n    }\n    timerChange(values);\n  };\n\n  const sortValues = () => {\n    if (inputsValue[0] && inputsValue[1]) {\n      setInputsValue([...inputsValue].sort(sortNumber));\n    }\n  };\n\n  const numberInputs = () => (\n    <>\n      <InputNumber\n        min={1}\n        max={keys.DEFAULT_PRICE[1]}\n        value={inputsValue[0]}\n        onChange={(value) => {\n          timerChange([value, inputsValue[1]]);\n        }}\n        onBlur={sortValues}\n        placeholder={messages['local.min-price']}\n      />\n      <span className=\"line\" />\n      <InputNumber\n        min={1}\n        max={keys.DEFAULT_PRICE[1]}\n        value={inputsValue[1]}\n        onChange={(value) => {\n          timerChange([inputsValue[0], value]);\n        }}\n        onBlur={sortValues}\n        placeholder={messages['local.max-price']}\n      />\n    </>\n  );\n\n  const slider = () => (\n    <>\n      <Slider\n        range\n        onChange={(values) => {\n          if (!values[0]) {\n            values[0] = inputsValue[0] || inputsValue[1] || values[1];\n          } else if (!values[1]) {\n            values[1] = inputsValue[1] || inputsValue[0] || values[0];\n          }\n          handleChangeSlider(values);\n        }}\n        value={[\n          ...(inputsValue[0] || inputsValue[1]\n            ? [Number.isInteger(inputsValue[0]) ? inputsValue[0] : inputsValue[1],\n              inputsValue[1] || inputsValue[0]] : []\n          )].sort(sortNumber)}\n        max={keys.DEFAULT_PRICE[1]}\n        min={1}\n\n      />\n    </>\n  );\n\n\n  switch (mod) {\n    case 'Home':\n      return (\n        <>\n          <Col xs={24} sm={24} md={12} lg={6} xxl={5} className=\"choose_price clearfix\">\n            <h3>{messages['local.specify_price']}</h3>\n\n            <div className=\"price_slider\">\n              <Col>\n                {numberInputs()}\n              </Col>\n              <Col>\n                {slider()}\n              </Col>\n            </div>\n          </Col>\n\n          <Col xs={24} className=\"choose_price_mobile\">\n            <Col>\n              {numberInputs()}\n            </Col>\n            <Col>\n              {slider()}\n            </Col>\n          </Col>\n        </>\n      );\n\n    default:\n      return (\n        <div className=\"price_slider\">\n          <Col>\n            {numberInputs()}\n          </Col>\n          <Col>\n            {slider()}\n          </Col>\n        </div>\n      );\n  }\n}\nPriceSlider.propTypes = {\n  handleChange: PropTypes.func,\n  price: PropTypes.array,\n  mod: PropTypes.string,\n};\n\nexport default PriceSlider;\n"]},"metadata":{},"sourceType":"module"}