{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeEvery, call, put, select, all } from '@redux-saga/core/effects';\nimport { wishlistGet, wishlistSet, wishlistChangeItem, wishlistChangeItemSuccess, wishlistItemLoading, wishlistPopulate, wishlistPopulateSuccess, wishlistPopulateLoading, wishlistPopulateError, wishlistError } from './action';\nimport { selectAuthorized, selectUser, selectLang } from '../user/reducer';\nimport { setLocalStorageObj, getLocalStorageObj } from '../../constants/utils';\nimport { selectWishlistIds } from './reducer';\nimport Axios from '../services/Axios';\n\nfunction getProductsByIdsRequest({\n  ids,\n  lang\n}) {\n  return Axios.request({\n    url: '/api/product/byIds',\n    data: {\n      ids,\n      lang\n    },\n    method: 'post'\n  });\n}\n\nfunction* changeWishlistRequest(productIds) {\n  yield call(Axios.request, {\n    method: 'post',\n    url: '/api/user/addWish/byIds',\n    data: {\n      type: 'wish',\n      productIds\n    }\n  });\n}\n\nfunction* workWishlistGet() {\n  // get products by ids\n  try {\n    const lang = yield select(selectLang); // get from local storage\n\n    let productIds = getLocalStorageObj('products').wishlistIds;\n    const ids = Object.keys(productIds);\n\n    if (!ids.length) {\n      yield put(wishlistSet({\n        products: [],\n        productIds: {}\n      }));\n      return;\n    }\n\n    const {\n      data: {\n        result\n      }\n    } = yield call(getProductsByIdsRequest, {\n      ids,\n      lang\n    });\n\n    if (result.length !== ids.length) {\n      const isAuth = yield select(selectAuthorized);\n      productIds = {};\n      result.forEach(({\n        id\n      }) => {\n        productIds[id] = true;\n      });\n      setLocalStorageObj('products', {\n        wishlistIds: productIds\n      });\n\n      if (isAuth) {\n        yield call(changeWishlistRequest, Object.keys(productIds));\n      }\n    }\n\n    yield put(wishlistSet({\n      products: result,\n      productIds\n    }));\n  } catch (error) {\n    yield put(wishlistError());\n  }\n}\n\nfunction* workWishlistPopulate() {\n  try {\n    yield put(wishlistPopulateLoading());\n    const userWishListArray = (_objectSpread({}, yield select(selectUser)).wishList || []).map(({\n      productId\n    }) => productId);\n    const userWishlistObj = {};\n    userWishListArray.forEach(i => {\n      userWishlistObj[i] = true;\n    });\n    const wishlistIds = userWishListArray.length && userWishlistObj || getLocalStorageObj('products') && getLocalStorageObj('products').wishlistIds || {};\n    yield put(wishlistPopulateSuccess({\n      wishlistIds\n    }));\n    setLocalStorageObj('products', {\n      wishlistIds\n    });\n  } catch (error) {\n    yield put(wishlistPopulateError());\n  }\n}\n\nfunction* watchWishlistPopulate() {\n  yield takeEvery(wishlistPopulate, workWishlistPopulate);\n}\n\nfunction setToWishlistRequest(productId) {\n  return Axios.request({\n    method: 'post',\n    url: '/api/user/addWish',\n    data: {\n      productId,\n      type: 'wish'\n    }\n  });\n}\n\nfunction removeFromWishlistRequest(productId) {\n  return Axios.request({\n    method: 'delete',\n    url: '/api/user/removeWish',\n    data: {\n      productId,\n      type: 'wish'\n    }\n  });\n}\n\nfunction* workWishlistChangeItem({\n  payload: {\n    productId\n  }\n}) {\n  const authorizedUser = yield select(selectAuthorized);\n  yield put(wishlistItemLoading({\n    id: productId\n  }));\n\n  try {\n    const wishlistIds = yield select(selectWishlistIds);\n    const inWishlist = !!wishlistIds[productId];\n\n    if (authorizedUser) {\n      // axios add to send to server to add user wishlistIds\n      if (inWishlist) {\n        yield call(removeFromWishlistRequest, productId);\n      } else {\n        // add to wishlistIds\n        yield call(setToWishlistRequest, productId); // remove from wishlistIds\n      }\n    }\n\n    wishlistIds[productId] = inWishlist ? null : productId;\n\n    if (inWishlist) {\n      delete wishlistIds[productId];\n    } else wishlistIds[productId] = true;\n\n    yield put(wishlistChangeItemSuccess({\n      wishlistIds: _objectSpread({}, wishlistIds),\n      id: productId\n    }));\n    setLocalStorageObj('products', {\n      wishlistIds\n    });\n  } catch (error) {}\n}\n\nfunction* watchWishlistChangeItem() {\n  yield takeEvery(wishlistChangeItem, workWishlistChangeItem);\n}\n\nfunction* watchWishlistGet() {\n  yield takeEvery(wishlistGet, workWishlistGet);\n}\n\nexport default function* () {\n  yield all([watchWishlistGet(), watchWishlistChangeItem(), watchWishlistPopulate()]);\n}","map":{"version":3,"sources":["/var/www/mankan-front/store/wishlist/saga.js"],"names":["takeEvery","call","put","select","all","wishlistGet","wishlistSet","wishlistChangeItem","wishlistChangeItemSuccess","wishlistItemLoading","wishlistPopulate","wishlistPopulateSuccess","wishlistPopulateLoading","wishlistPopulateError","wishlistError","selectAuthorized","selectUser","selectLang","setLocalStorageObj","getLocalStorageObj","selectWishlistIds","Axios","getProductsByIdsRequest","ids","lang","request","url","data","method","changeWishlistRequest","productIds","type","workWishlistGet","wishlistIds","Object","keys","length","products","result","isAuth","forEach","id","error","workWishlistPopulate","userWishListArray","wishList","map","productId","userWishlistObj","i","watchWishlistPopulate","setToWishlistRequest","removeFromWishlistRequest","workWishlistChangeItem","payload","authorizedUser","inWishlist","watchWishlistChangeItem","watchWishlistGet"],"mappings":"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","sourcesContent":["import {\n  takeEvery, call, put, select, all,\n} from '@redux-saga/core/effects';\nimport {\n  wishlistGet,\n  wishlistSet,\n  wishlistChangeItem,\n  wishlistChangeItemSuccess,\n  wishlistItemLoading,\n  wishlistPopulate,\n  wishlistPopulateSuccess,\n  wishlistPopulateLoading,\n  wishlistPopulateError,\n  wishlistError,\n} from './action';\nimport { selectAuthorized, selectUser, selectLang } from '../user/reducer';\nimport {\n  setLocalStorageObj,\n  getLocalStorageObj,\n} from '../../constants/utils';\nimport { selectWishlistIds } from './reducer';\nimport Axios from '../services/Axios';\n\nfunction getProductsByIdsRequest({ ids, lang }) {\n  return Axios.request({\n    url: '/api/product/byIds',\n    data: { ids, lang },\n    method: 'post',\n  });\n}\n\nfunction* changeWishlistRequest(productIds) {\n  yield call(Axios.request, {\n    method: 'post',\n    url: '/api/user/addWish/byIds',\n    data: {\n      type: 'wish',\n      productIds,\n    },\n  });\n}\nfunction* workWishlistGet() {\n  // get products by ids\n  try {\n    const lang = yield select(selectLang);\n    // get from local storage\n    let productIds = getLocalStorageObj('products').wishlistIds;\n    const ids = Object.keys(productIds);\n\n    if (!ids.length) {\n      yield put(wishlistSet({ products: [], productIds: {} }));\n      return;\n    }\n\n    const { data: { result } } = yield call(getProductsByIdsRequest, { ids, lang });\n\n    if (result.length !== ids.length) {\n      const isAuth = yield select(selectAuthorized);\n      productIds = {};\n      result.forEach(({ id }) => { productIds[id] = true; });\n      setLocalStorageObj('products', { wishlistIds: productIds });\n      if (isAuth) {\n        yield call(changeWishlistRequest, Object.keys(productIds));\n      }\n    }\n    yield put(wishlistSet({ products: result, productIds }));\n  } catch (error) {\n    yield put(wishlistError());\n  }\n}\n\n\nfunction* workWishlistPopulate() {\n  try {\n    yield put(wishlistPopulateLoading());\n    const userWishListArray = (({ ...yield select(selectUser) }).wishList\n    || []).map(({ productId }) => productId);\n    const userWishlistObj = {};\n\n    userWishListArray.forEach((i) => { userWishlistObj[i] = true; });\n\n\n    const wishlistIds = (userWishListArray.length && userWishlistObj)\n    || (getLocalStorageObj('products')\n    && getLocalStorageObj('products').wishlistIds) || {};\n\n    yield put(wishlistPopulateSuccess({ wishlistIds }));\n    setLocalStorageObj('products', { wishlistIds });\n  } catch (error) {\n    yield put(wishlistPopulateError());\n  }\n}\n\nfunction* watchWishlistPopulate() {\n  yield takeEvery(wishlistPopulate, workWishlistPopulate);\n}\n\nfunction setToWishlistRequest(productId) {\n  return Axios.request({\n    method: 'post',\n    url: '/api/user/addWish',\n    data: {\n      productId,\n      type: 'wish',\n    },\n  });\n}\nfunction removeFromWishlistRequest(productId) {\n  return Axios.request({\n    method: 'delete',\n    url: '/api/user/removeWish',\n    data: {\n      productId,\n      type: 'wish',\n    },\n  });\n}\n\nfunction* workWishlistChangeItem({ payload: { productId } }) {\n  const authorizedUser = yield select(selectAuthorized);\n  yield put(wishlistItemLoading({ id: productId }));\n  try {\n    const wishlistIds = yield select(selectWishlistIds);\n    const inWishlist = !!wishlistIds[productId];\n\n    if (authorizedUser) {\n      // axios add to send to server to add user wishlistIds\n      if (inWishlist) {\n        yield call(removeFromWishlistRequest, productId);\n      } else {\n        // add to wishlistIds\n        yield call(setToWishlistRequest, productId);\n        // remove from wishlistIds\n      }\n    }\n    wishlistIds[productId] = inWishlist ? null : productId;\n    if (inWishlist) {\n      delete wishlistIds[productId];\n    } else wishlistIds[productId] = true;\n\n\n    yield put(wishlistChangeItemSuccess({\n      wishlistIds: { ...wishlistIds },\n      id: productId,\n    }));\n    setLocalStorageObj('products', { wishlistIds });\n  } catch (error) {\n  }\n}\n\nfunction* watchWishlistChangeItem() {\n  yield takeEvery(wishlistChangeItem, workWishlistChangeItem);\n}\n\n\nfunction* watchWishlistGet() {\n  yield takeEvery(wishlistGet, workWishlistGet);\n}\n\n\nexport default function* () {\n  yield all([\n    watchWishlistGet(),\n    watchWishlistChangeItem(),\n    watchWishlistPopulate(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}