{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { getSlides, getSlidesSuccess, getSlidesError } from './actions';\nconst initialState = {\n  data: [],\n  error: false,\n  loading: true\n};\nexport default handleActions({\n  [getSlides]: state => _objectSpread(_objectSpread({}, state), {}, {\n    loading: true,\n    error: false\n  }),\n  [getSlidesSuccess]: (state, {\n    payload: {\n      data\n    }\n  }) => ({\n    data,\n    loading: false,\n    error: false\n  }),\n  [getSlidesError]: state => _objectSpread(_objectSpread({}, state), {}, {\n    loading: false,\n    error: true\n  })\n}, initialState);","map":{"version":3,"sources":["/var/www/mankan-front/store/main-slides/reducer.js"],"names":["handleActions","getSlides","getSlidesSuccess","getSlidesError","initialState","data","error","loading","state","payload"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,cAAtC,QAA4D,WAA5D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAeP,aAAa,CAAC;AAC3B,GAACC,SAAD,GAAcO,KAAD,oCACRA,KADQ;AAEXD,IAAAA,OAAO,EAAE,IAFE;AAGXD,IAAAA,KAAK,EAAE;AAHI,IADc;AAM3B,GAACJ,gBAAD,GAAoB,CAACM,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEJ,MAAAA;AAAF;AAAX,GAAR,MAAmC;AACrDA,IAAAA,IADqD;AAErDE,IAAAA,OAAO,EAAE,KAF4C;AAGrDD,IAAAA,KAAK,EAAE;AAH8C,GAAnC,CANO;AAW3B,GAACH,cAAD,GAAmBK,KAAD,oCACbA,KADa;AAEhBD,IAAAA,OAAO,EAAE,KAFO;AAGhBD,IAAAA,KAAK,EAAE;AAHS;AAXS,CAAD,EAgBzBF,YAhByB,CAA5B","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { getSlides, getSlidesSuccess, getSlidesError } from './actions';\n\nconst initialState = {\n  data: [],\n  error: false,\n  loading: true,\n};\n\nexport default handleActions({\n  [getSlides]: (state) => ({\n    ...state,\n    loading: true,\n    error: false,\n  }),\n  [getSlidesSuccess]: (state, { payload: { data } }) => ({\n    data,\n    loading: false,\n    error: false,\n  }),\n  [getSlidesError]: (state) => ({\n    ...state,\n    loading: false,\n    error: true,\n  }),\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}