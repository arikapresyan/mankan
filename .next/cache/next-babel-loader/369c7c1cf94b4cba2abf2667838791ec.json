{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Icon } from 'antd';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { getProductToBuy } from '../../../store/buy-product/action';\nimport keys from '../../../constants/keys';\nimport useGlobalAPI from '../../../hooks/useGlobalAPI'; // import { APISend } from '../../../store/global-APIS/action';\n// import userAPI from '../../../API_Paths/userAPI';\n\nconst {\n  IMAGE_POSTFIX\n} = keys;\n\nfunction OrderListItem({\n  product,\n  reloadPageData,\n  page,\n  data\n}) {\n  const {\n    messages\n  } = useIntl();\n  const dispatch = useDispatch();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const getProductToBuyActon = id => {\n    dispatch(getProductToBuy({\n      id\n    }));\n  };\n\n  useGlobalAPI({\n    onCancel: () => {\n      setLoading(false);\n    },\n    onSuccess: () => {\n      if (loading) {\n        let newPage = page;\n\n        if (data.length === 0 && page > 1) {\n          newPage = page - 1;\n        }\n\n        reloadPageData({\n          page: newPage\n        });\n      }\n    }\n  });\n  const {\n    totalPrice,\n    count,\n    product: {\n      id,\n      xmlCount,\n      langs: {\n        0: {\n          name\n        }\n      },\n      photos: {\n        0: {\n          url: postUrl,\n          alt,\n          title\n        }\n      }\n    },\n    createdAt\n  } = product;\n  const date = new Date(createdAt);\n  const min = date.getMinutes();\n  const newMin = `${min}`.length === 1 ? `0${min}` : min;\n  const time = `${date.getHours()}:${newMin}`;\n  const showDate = `${date.toLocaleDateString()}, ${time}`;\n  const url = `${IMAGE_POSTFIX + id}/${postUrl}`; // const removeItem = () => {\n  //   // setLoading(true);\n  //   // dispatch(APISend({\n  //   //   method: 'post',\n  //   //   url: userAPI.removeUserPageOrder,\n  //   //   data: {\n  //   //     id,\n  //   //   },\n  //   // }));\n  // };\n\n  return __jsx(\"div\", {\n    className: \"order_list_item clearfix\"\n  }, __jsx(\"div\", {\n    className: \"prod_img\"\n  }, __jsx(\"img\", {\n    src: url,\n    alt: alt,\n    title: title\n  })), __jsx(\"div\", {\n    className: \"prod_info_box\"\n  }, __jsx(\"div\", {\n    className: \"prod_info\"\n  }, __jsx(\"div\", {\n    className: \"prod_name\"\n  }, name), __jsx(\"div\", {\n    className: \"date\"\n  }, __jsx(\"span\", null, messages['local.date_of_purchase'], \"\\u0589\"), showDate)), __jsx(\"div\", {\n    className: \"prod_info\"\n  }, __jsx(\"div\", {\n    className: \"product_quantity\"\n  }, __jsx(\"span\", null, messages['local.quantity'], \"\\u0589\"), count, ' ', messages['local.item(s)']), __jsx(\"div\", {\n    className: \"product_price\"\n  }, __jsx(\"span\", null, messages['local.price'], \"\\u0589\"), totalPrice, ' ', messages['local.dr'], \"\\u2024\"), xmlCount && __jsx(\"div\", {\n    className: \"product_availability\"\n  }, messages['local.product_available']))), xmlCount && __jsx(Button, {\n    type: \"link\",\n    className: \"buy_again\",\n    onClick: () => getProductToBuyActon(id)\n  }, __jsx(Icon, {\n    type: \"shopping\"\n  }), messages['local.order_again']));\n}\n\nexport default OrderListItem;","map":null,"metadata":{},"sourceType":"module"}