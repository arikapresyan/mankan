{"ast":null,"code":"import { all, put, call, select, takeEvery } from 'redux-saga/effects';\nimport Axios from '../services/Axios';\nimport { getViewedProducts, getViewedProductsError, getViewedProductsSuccess, setViewedProducts } from './action';\nimport { getLocalStorageObj, setLocalStorageObj } from '../../constants/utils';\nimport { selectLang, selectAuthorized } from '../user/reducer';\n\nconst getProductsByIds = async ({\n  lang,\n  ids\n}) => {\n  const {\n    data: {\n      result\n    }\n  } = await Axios.request({\n    url: '/api/product/byIds',\n    data: {\n      lang,\n      ids\n    },\n    method: 'post'\n  });\n  const newIds = ids.filter(id => result.find(({\n    id: prodId\n  }) => prodId === id));\n  const r = [];\n  result.forEach(a => {\n    r[newIds.indexOf(a.id)] = a;\n  });\n  return r.reverse();\n};\n\nfunction* workGetViewedProducts(action) {\n  const {\n    payload: {\n      limit\n    }\n  } = action;\n\n  try {\n    let viewedProductIds = getLocalStorageObj('viewed') || [];\n\n    if (!limit && viewedProductIds.length > 6) {\n      viewedProductIds = viewedProductIds.splice(viewedProductIds.length - 6, 6);\n    } else if (limit && viewedProductIds.length > limit) {\n      viewedProductIds = viewedProductIds.splice(viewedProductIds.length - limit, limit);\n    }\n\n    const lang = yield select(selectLang);\n    const res = yield call(getProductsByIds, {\n      ids: viewedProductIds,\n      lang\n    });\n    yield put(getViewedProductsSuccess({\n      data: res\n    }));\n  } catch (error) {\n    yield put(getViewedProductsError());\n  }\n}\n\nfunction* watchGetViewedProducts() {\n  yield takeEvery(getViewedProducts, workGetViewedProducts);\n}\n\nfunction* workSetViewedProducts({\n  payload: {\n    id\n  }\n}) {\n  const authorizedUser = yield select(selectAuthorized);\n\n  try {\n    if (authorizedUser) {// send api to watched products\n    }\n\n    const lastViewed = getLocalStorageObj('viewed') || [];\n\n    if (lastViewed.indexOf(id) === -1) {\n      lastViewed.push(id);\n      setLocalStorageObj('viewed', lastViewed);\n    }\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* watchSetViewedProducts() {\n  yield takeEvery(setViewedProducts, workSetViewedProducts);\n}\n\nexport default function* () {\n  yield all([watchGetViewedProducts(), watchSetViewedProducts()]);\n}","map":{"version":3,"sources":["/var/www/mankan-front/store/viewed-products/saga.js"],"names":["all","put","call","select","takeEvery","Axios","getViewedProducts","getViewedProductsError","getViewedProductsSuccess","setViewedProducts","getLocalStorageObj","setLocalStorageObj","selectLang","selectAuthorized","getProductsByIds","lang","ids","data","result","request","url","method","newIds","filter","id","find","prodId","r","forEach","a","indexOf","reverse","workGetViewedProducts","action","payload","limit","viewedProductIds","length","splice","res","error","watchGetViewedProducts","workSetViewedProducts","authorizedUser","lastViewed","push","console","log","watchSetViewedProducts"],"mappings":"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","sourcesContent":["import {\n  all, put, call, select, takeEvery,\n} from 'redux-saga/effects';\nimport Axios from '../services/Axios';\nimport {\n  getViewedProducts, getViewedProductsError, getViewedProductsSuccess, setViewedProducts,\n} from './action';\nimport { getLocalStorageObj, setLocalStorageObj } from '../../constants/utils';\nimport { selectLang, selectAuthorized } from '../user/reducer';\n\n\nconst getProductsByIds = async ({ lang, ids }) => {\n  const { data: { result } } = await Axios.request({\n    url: '/api/product/byIds',\n    data: { lang, ids },\n    method: 'post',\n  });\n\n  const newIds = ids.filter((id) => result.find(({ id: prodId }) => prodId === id));\n\n  const r = [];\n\n  result.forEach((a) => {\n    r[newIds.indexOf(a.id)] = a;\n  });\n\n  return r.reverse();\n};\nfunction* workGetViewedProducts(action) {\n  const { payload: { limit } } = action;\n  try {\n    let viewedProductIds = getLocalStorageObj('viewed') || [];\n    if (!limit && viewedProductIds.length > 6) {\n      viewedProductIds = viewedProductIds.splice(viewedProductIds.length - 6, 6);\n    } else if (limit && viewedProductIds.length > limit) {\n      viewedProductIds = viewedProductIds.splice(viewedProductIds.length - limit, limit);\n    }\n\n    const lang = yield select(selectLang);\n    const res = yield call(getProductsByIds, { ids: viewedProductIds, lang });\n\n    yield put(getViewedProductsSuccess({ data: res }));\n  } catch (error) {\n    yield put(getViewedProductsError());\n  }\n}\n\nfunction* watchGetViewedProducts() {\n  yield takeEvery(getViewedProducts, workGetViewedProducts);\n}\n\nfunction* workSetViewedProducts({ payload: { id } }) {\n  const authorizedUser = yield select(selectAuthorized);\n  try {\n    if (authorizedUser) {\n      // send api to watched products\n    }\n    const lastViewed = getLocalStorageObj('viewed') || [];\n    if (lastViewed.indexOf(id) === -1) {\n      lastViewed.push(id);\n      setLocalStorageObj('viewed', lastViewed);\n    }\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* watchSetViewedProducts() {\n  yield takeEvery(setViewedProducts, workSetViewedProducts);\n}\n\n\nexport default function* () {\n  yield all([\n    watchGetViewedProducts(),\n    watchSetViewedProducts(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}