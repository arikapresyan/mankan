{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workMenuList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchMenuList);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, select, call } from '@redux-saga/core/effects';\nimport { getMenuList, getMenuListSuccess } from './action'; // eslint-disable-next-line import/no-cycle\n\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\nimport { getProductAge } from '../../constants/utils';\n\nfunction getRequestBody(name) {\n  switch (name) {\n    case 'own':\n      return {\n        ownBrand: true,\n        urlPostfix: 'mankan'\n      };\n\n    case 'infant':\n    case 'infants':\n      return {\n        infant: true,\n        urlPostfix: 'infant'\n      };\n\n    case 'boy':\n    case 'boys':\n      return {\n        sex: 'BOY',\n        urlPostfix: 'boy'\n      };\n\n    case 'girl':\n    case 'girls':\n      return {\n        sex: 'GIRL',\n        urlPostfix: 'girl'\n      };\n\n    default:\n      return {\n        urlPostfix: 'all'\n      };\n  }\n}\n\nfunction getMenuListRequest(_ref) {\n  var urlPostfix = _ref.urlPostfix,\n      lang = _ref.lang;\n  return Axios.request({\n    url: \"/api/product/hoverFilters/\".concat(urlPostfix, \"/?lang=\").concat(lang),\n    method: 'get'\n  });\n}\n\nfunction getBestSellerRequest(data) {\n  return Axios.request({\n    url: '/api/product/navFiltersBestSeller',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction getNavFilteredDataToView(_ref2) {\n  var brand = _ref2.brand,\n      meaning = _ref2.usage,\n      age = _ref2.age,\n      type = _ref2.type,\n      messages = _ref2.messages;\n  var ageToSend = (age || []).map(function (_ref3) {\n    var id = _ref3.id,\n        minAge = _ref3.minAge,\n        maxAge = _ref3.maxAge;\n    return {\n      id: id,\n      name: getProductAge(minAge, maxAge, messages),\n      text: getProductAge(minAge, maxAge, messages)\n    };\n  });\n  return {\n    type: type,\n    age: ageToSend,\n    brand: brand,\n    meaning: meaning\n  };\n}\n\nfunction workMenuList(_ref4) {\n  var _ref4$payload, name, messages, lang, filterData, res, _yield$call, rows;\n\n  return _regeneratorRuntime.wrap(function workMenuList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref4$payload = _ref4.payload, name = _ref4$payload.name, messages = _ref4$payload.messages;\n          _context.next = 3;\n          return select(selectLang);\n\n        case 3:\n          lang = _context.sent;\n          _context.prev = 4;\n          filterData = _objectSpread(_objectSpread({}, getRequestBody(name)), {}, {\n            lang: lang\n          });\n          _context.next = 8;\n          return call(getMenuListRequest, filterData);\n\n        case 8:\n          res = _context.sent;\n          _context.next = 11;\n          return call(getBestSellerRequest, filterData);\n\n        case 11:\n          _yield$call = _context.sent;\n          rows = _yield$call.data.result.rows;\n          _context.next = 15;\n          return put(getMenuListSuccess({\n            data: getNavFilteredDataToView(_objectSpread(_objectSpread({}, res.data), {}, {\n              messages: messages\n            })),\n            name: name,\n            bestseller: rows[0]\n          }));\n\n        case 15:\n          _context.next = 20;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](4);\n          console.log(_context.t0);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 17]]);\n}\n\nfunction watchMenuList() {\n  return _regeneratorRuntime.wrap(function watchMenuList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(getMenuList, workMenuList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport { // eslint-disable-next-line import/prefer-default-export\nwatchMenuList };","map":{"version":3,"sources":["/var/www/mankan-front/store/menu-list/saga.js"],"names":["workMenuList","watchMenuList","takeLatest","put","select","call","getMenuList","getMenuListSuccess","Axios","selectLang","getProductAge","getRequestBody","name","ownBrand","urlPostfix","infant","sex","getMenuListRequest","lang","request","url","method","getBestSellerRequest","data","getNavFilteredDataToView","brand","meaning","usage","age","type","messages","ageToSend","map","id","minAge","maxAge","text","payload","filterData","res","rows","result","bestseller","console","log"],"mappings":"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","sourcesContent":["import {\n  takeLatest, put, select, call,\n} from '@redux-saga/core/effects';\n\nimport { getMenuList, getMenuListSuccess } from './action';\n// eslint-disable-next-line import/no-cycle\nimport Axios from '../services/Axios';\nimport { selectLang } from '../user/reducer';\nimport { getProductAge } from '../../constants/utils';\n\nfunction getRequestBody(name) {\n  switch (name) {\n    case 'own':\n      return {\n        ownBrand: true,\n        urlPostfix: 'mankan',\n      };\n    case 'infant':\n    case 'infants':\n      return {\n        infant: true,\n        urlPostfix: 'infant',\n      };\n    case 'boy':\n    case 'boys':\n      return {\n        sex: 'BOY',\n        urlPostfix: 'boy',\n      };\n    case 'girl':\n    case 'girls':\n      return {\n        sex: 'GIRL',\n        urlPostfix: 'girl',\n      };\n    default:\n      return {\n        urlPostfix: 'all',\n      };\n  }\n}\n\nfunction getMenuListRequest({ urlPostfix, lang }) {\n  return Axios.request({\n    url: `/api/product/hoverFilters/${urlPostfix}/?lang=${lang}`,\n    method: 'get',\n  });\n}\nfunction getBestSellerRequest(data) {\n  return Axios.request({\n    url: '/api/product/navFiltersBestSeller',\n    method: 'post',\n    data,\n  });\n}\n\n\nfunction getNavFilteredDataToView({\n  brand, usage: meaning, age, type, messages,\n}) {\n  const ageToSend = (age || []).map(({ id, minAge, maxAge }) => ({\n    id,\n    name: getProductAge(minAge, maxAge, messages),\n    text: getProductAge(minAge, maxAge, messages),\n  }));\n\n\n  return {\n    type,\n    age: ageToSend,\n    brand,\n    meaning,\n  };\n}\n\nfunction* workMenuList({ payload: { name, messages } }) {\n  const lang = yield select(selectLang);\n  try {\n    const filterData = { ...getRequestBody(name), lang };\n\n\n    const res = yield call(getMenuListRequest, filterData);\n\n\n    const { data: { result: { rows } } } = yield call(getBestSellerRequest, filterData);\n\n\n    yield put(\n      getMenuListSuccess({\n        data: getNavFilteredDataToView({\n          ...res.data,\n          messages,\n        }),\n        name,\n        bestseller: rows[0],\n      }),\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nfunction* watchMenuList() {\n  yield takeLatest(getMenuList, workMenuList);\n}\n\nexport {\n  // eslint-disable-next-line import/prefer-default-export\n  watchMenuList,\n};\n"]},"metadata":{},"sourceType":"module"}