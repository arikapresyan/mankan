{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workGetViewedProducts),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetViewedProducts),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(workSetViewedProducts),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSetViewedProducts),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(_callee);\n\nimport { all, put, call, select, takeEvery } from 'redux-saga/effects';\nimport Axios from '../services/Axios';\nimport { getViewedProducts, getViewedProductsError, getViewedProductsSuccess, setViewedProducts } from './action';\nimport { getLocalStorageObj, setLocalStorageObj } from '../../constants/utils';\nimport { selectLang, selectAuthorized } from '../user/reducer';\n\nvar getProductsByIds = function getProductsByIds(_ref) {\n  var lang, ids, _ref2, result;\n\n  return _regeneratorRuntime.async(function getProductsByIds$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          lang = _ref.lang, ids = _ref.ids;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Axios.request({\n            url: '/api/product/byIds',\n            data: {\n              lang: lang,\n              ids: ids\n            },\n            method: 'post'\n          }));\n\n        case 3:\n          _ref2 = _context.sent;\n          result = _ref2.data.result;\n          return _context.abrupt(\"return\", result);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nfunction workGetViewedProducts(action) {\n  var limit, viewedProductIds, lang, res;\n  return _regeneratorRuntime.wrap(function workGetViewedProducts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          limit = action.payload.limit;\n          _context2.prev = 1;\n          viewedProductIds = getLocalStorageObj('viewed') || [];\n\n          if (!limit && viewedProductIds.length > 6) {\n            viewedProductIds = viewedProductIds.splice(viewedProductIds.length - 6, 6);\n          } else if (limit && viewedProductIds.length > limit) {\n            viewedProductIds = viewedProductIds.splice(viewedProductIds.length - limit, limit);\n          }\n\n          _context2.next = 6;\n          return select(selectLang);\n\n        case 6:\n          lang = _context2.sent;\n          _context2.next = 9;\n          return call(getProductsByIds, {\n            ids: viewedProductIds,\n            lang: lang\n          });\n\n        case 9:\n          res = _context2.sent;\n          _context2.next = 12;\n          return put(getViewedProductsSuccess({\n            data: res\n          }));\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 18;\n          return put(getViewedProductsError());\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[1, 14]]);\n}\n\nfunction watchGetViewedProducts() {\n  return _regeneratorRuntime.wrap(function watchGetViewedProducts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeEvery(getViewedProducts, workGetViewedProducts);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction workSetViewedProducts(_ref3) {\n  var id, authorizedUser, lastViewed;\n  return _regeneratorRuntime.wrap(function workSetViewedProducts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = _ref3.payload.id;\n          _context4.next = 3;\n          return select(selectAuthorized);\n\n        case 3:\n          authorizedUser = _context4.sent;\n\n          try {\n            if (authorizedUser) {// send api to watched products\n            }\n\n            lastViewed = getLocalStorageObj('viewed') || [];\n\n            if (lastViewed.indexOf(id) === -1) {\n              lastViewed.push(id);\n              setLocalStorageObj('viewed', lastViewed);\n            }\n          } catch (error) {\n            console.log('error', error);\n          }\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchSetViewedProducts() {\n  return _regeneratorRuntime.wrap(function watchSetViewedProducts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(setViewedProducts, workSetViewedProducts);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([watchGetViewedProducts(), watchSetViewedProducts()]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked5);\n}","map":null,"metadata":{},"sourceType":"module"}