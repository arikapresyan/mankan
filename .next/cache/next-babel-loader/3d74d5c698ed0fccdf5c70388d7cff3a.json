{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { getDataListByPagination, getDataListByPaginationSuccess, getDataListByPaginationError, getDataListByPaginationReset } from './action';\nconst initialState = {\n  buyProductList: {\n    loading: false,\n    error: false,\n    data: [],\n    page: 1,\n    pages: 1\n  }\n};\nexport default handleActions({\n  [getDataListByPagination]: (state, {\n    payload: {\n      name\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    [name]: _objectSpread(_objectSpread({}, state[name]), {}, {\n      error: false,\n      loading: true\n    })\n  }),\n  [getDataListByPaginationSuccess]: (state, {\n    payload: {\n      name,\n      data,\n      page,\n      pages\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    [name]: _objectSpread(_objectSpread({}, state[name]), {}, {\n      error: false,\n      loading: false,\n      data,\n      page,\n      pages: pages || 0\n    })\n  }),\n  [getDataListByPaginationError]: (state, {\n    payload: {\n      name\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    [name]: _objectSpread(_objectSpread({}, state[name]), {}, {\n      error: true,\n      loading: false\n    })\n  }),\n  [getDataListByPaginationReset]: (state, {\n    payload: {\n      name\n    }\n  }) => _objectSpread(_objectSpread({}, state), {}, {\n    [name]: _objectSpread({}, initialState[name])\n  })\n}, initialState);","map":null,"metadata":{},"sourceType":"module"}