{"ast":null,"code":"var _jsxFileName = \"/var/www/mankan-front/components/modals/suggestion-modal/SuggestionModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useMemo } from 'react';\nimport Button from 'antd/lib/button';\nimport Form from 'antd/lib/form';\nimport Input from 'antd/lib/input';\nimport Modal from 'antd/lib/modal';\nimport Tabs from 'antd/lib/tabs';\nimport { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { getSuggestionSchema } from '../../../utils/validationSchemas';\nimport userAPI from '../../../API_Paths/userAPI';\nimport { APISend } from '../../../store/global-APIS/action';\nimport { hideAll } from '../../../store/userEventListeners/action';\nimport useGlobalAPI from '../../../hooks/useGlobalAPI';\nvar TextArea = Input.TextArea;\nvar TabPane = Tabs.TabPane;\n\nfunction SuggestionModal(props) {\n  _s();\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState('suggestion'),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(''),\n      success = _useState3[0],\n      setSuccess = _useState3[1];\n\n  var validationSchema = useMemo(function () {\n    return getSuggestionSchema(messages, type);\n  }, [messages, type]);\n  var visible = props.visible,\n      handleHideModal = props.handleHideModal,\n      APISendAction = props.APISendAction,\n      hideAllAction = props.hideAllAction;\n  useGlobalAPI({\n    onCancel: function onCancel() {\n      setLoading(false);\n    },\n    onSuccess: hideAllAction\n  });\n  var formik = useFormik({\n    initialValues: {\n      email: '',\n      suggestion: '',\n      Complaint: ''\n    },\n    onSubmit: function onSubmit(values) {\n      setLoading(true);\n      APISendAction({\n        method: 'post',\n        url: userAPI.offer_complaint,\n        data: {\n          userEmail: values.email,\n          type: 'complain',\n          description: values[type],\n          title: type === 'suggestion' ? 'suggestion' : 'complain'\n        },\n        successText: messages['local.successText'],\n        errorText: messages['local.errorText'],\n        loadingText: messages['local.loadingText']\n      });\n      return true;\n    },\n    validationSchema: validationSchema\n  });\n  var errors = formik.errors,\n      values = formik.values,\n      touched = formik.touched,\n      handleSubmit = formik.handleSubmit,\n      handleChange = formik.handleChange,\n      handleBlur = formik.handleBlur;\n\n  var decoratedHandelBlur = function decoratedHandelBlur(e) {\n    success && setSuccess('');\n    return handleBlur(e);\n  };\n\n  return __jsx(Modal, {\n    destroyOnClose: true,\n    title: messages['local.complain_suggestion'],\n    visible: visible,\n    onCancel: handleHideModal,\n    footer: null,\n    className: \"complain_suggestion_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, errors && errors.global, __jsx(Tabs, {\n    defaultActiveKey: \"suggestion\",\n    onChange: function onChange(type) {\n      return setType(type);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(TabPane, {\n    tab: messages['local.suggestion'],\n    key: \"suggestion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    validateStatus: errors.suggestion && touched.suggestion && 'error',\n    help: touched.suggestion && errors.suggestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(TextArea, {\n    name: \"suggestion\",\n    value: values.suggestion,\n    onChange: handleChange,\n    onBlur: decoratedHandelBlur,\n    placeholder: messages['local.write_offer'],\n    autoSize: {\n      minRows: 3,\n      maxRows: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }))), __jsx(TabPane, {\n    tab: messages['local.complaint'],\n    key: \"Complaint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    validateStatus: errors.Complaint && touched.Complaint && 'error',\n    help: touched.Complaint && errors.Complaint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(TextArea, {\n    name: \"Complaint\",\n    value: values.Complaint,\n    onChange: handleChange,\n    onBlur: decoratedHandelBlur,\n    placeholder: messages['local.write_complaint'],\n    autoSize: {\n      minRows: 3,\n      maxRows: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })))), __jsx(Form.Item, {\n    validateStatus: errors.email && touched.email && 'error',\n    help: touched.email && errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: messages['local.email'],\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: decoratedHandelBlur,\n    className: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    disabled: loading,\n    type: \"primary\",\n    className: \"send_suggestion_btn\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, messages['local.send']))));\n}\n\n_s(SuggestionModal, \"z9qlOq0hEz2kbHvKyoe5Vmk3hT4=\", false, function () {\n  return [useIntl, useGlobalAPI, useFormik];\n});\n\n_c = SuggestionModal;\nSuggestionModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  handleHideModal: PropTypes.func.isRequired,\n  APISendAction: PropTypes.func,\n  hideAllAction: PropTypes.func\n};\n\nfunction mapStateToProps(_ref) {\n  var globalAPIS = _ref.globalAPIS;\n  return {\n    globalAPIS: globalAPIS\n  };\n}\n\nexport default connect(mapStateToProps, {\n  APISendAction: APISend,\n  hideAllAction: hideAll\n})(SuggestionModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"SuggestionModal\");","map":{"version":3,"sources":["/var/www/mankan-front/components/modals/suggestion-modal/SuggestionModal.js"],"names":["React","useState","useMemo","Button","Form","Input","Modal","Tabs","useFormik","PropTypes","connect","useIntl","getSuggestionSchema","userAPI","APISend","hideAll","useGlobalAPI","TextArea","TabPane","SuggestionModal","props","messages","loading","setLoading","type","setType","success","setSuccess","validationSchema","visible","handleHideModal","APISendAction","hideAllAction","onCancel","onSuccess","formik","initialValues","email","suggestion","Complaint","onSubmit","values","method","url","offer_complaint","data","userEmail","description","title","successText","errorText","loadingText","errors","touched","handleSubmit","handleChange","handleBlur","decoratedHandelBlur","e","global","minRows","maxRows","propTypes","bool","isRequired","func","mapStateToProps","globalAPIS"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\r\n\r\n\r\nimport Button from 'antd/lib/button';\r\nimport Form from 'antd/lib/form';\r\nimport Input from 'antd/lib/input';\r\nimport Modal from 'antd/lib/modal';\r\nimport Tabs from 'antd/lib/tabs';\r\n\r\nimport { useFormik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useIntl } from 'react-intl';\r\nimport { getSuggestionSchema } from '../../../utils/validationSchemas';\r\nimport userAPI from '../../../API_Paths/userAPI';\r\nimport { APISend } from '../../../store/global-APIS/action';\r\nimport { hideAll } from '../../../store/userEventListeners/action';\r\nimport useGlobalAPI from '../../../hooks/useGlobalAPI';\r\n\r\nconst { TextArea } = Input;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nfunction SuggestionModal(props) {\r\n  const { messages } = useIntl();\r\n  const [loading, setLoading] = useState(false);\r\n  const [type, setType] = useState('suggestion');\r\n  const [success, setSuccess] = useState('');\r\n  const validationSchema = useMemo(() => getSuggestionSchema(messages, type), [messages, type]);\r\n  const {\r\n    visible,\r\n    handleHideModal,\r\n    APISendAction,\r\n    hideAllAction,\r\n  } = props;\r\n\r\n  useGlobalAPI({\r\n    onCancel: () => {\r\n      setLoading(false);\r\n    },\r\n    onSuccess: hideAllAction,\r\n  });\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      suggestion: '',\r\n      Complaint: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      setLoading(true);\r\n      APISendAction({\r\n        method: 'post',\r\n        url: userAPI.offer_complaint,\r\n        data: {\r\n          userEmail: values.email,\r\n          type: 'complain',\r\n          description: values[type],\r\n          title: type === 'suggestion' ? 'suggestion' : 'complain',\r\n        },\r\n        successText: messages['local.successText'],\r\n        errorText: messages['local.errorText'],\r\n        loadingText: messages['local.loadingText'],\r\n      });\r\n      return true;\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const {\r\n    errors,\r\n    values,\r\n    touched,\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n  } = formik;\r\n\r\n  const decoratedHandelBlur = (e) => {\r\n    success && setSuccess('');\r\n    return handleBlur(e);\r\n  };\r\n  return (\r\n    <Modal\r\n      destroyOnClose\r\n      title={messages['local.complain_suggestion']}\r\n      visible={visible}\r\n      onCancel={handleHideModal}\r\n      footer={null}\r\n      className=\"complain_suggestion_modal\"\r\n    >\r\n      <Form onSubmit={handleSubmit}>\r\n        {errors && errors.global}\r\n\r\n        <Tabs defaultActiveKey=\"suggestion\" onChange={(type) => setType(type)}>\r\n          <TabPane tab={messages['local.suggestion']} key=\"suggestion\">\r\n            <Form.Item\r\n              validateStatus={errors.suggestion && touched.suggestion && 'error'}\r\n              help={touched.suggestion && errors.suggestion}\r\n            >\r\n              <TextArea\r\n                name=\"suggestion\"\r\n                value={values.suggestion}\r\n                onChange={handleChange}\r\n                onBlur={decoratedHandelBlur}\r\n                placeholder={messages['local.write_offer']}\r\n                autoSize={{ minRows: 3, maxRows: 12 }}\r\n              />\r\n            </Form.Item>\r\n          </TabPane>\r\n          <TabPane tab={messages['local.complaint']} key=\"Complaint\">\r\n            <Form.Item\r\n              validateStatus={errors.Complaint && touched.Complaint && 'error'}\r\n              help={touched.Complaint && errors.Complaint}\r\n            >\r\n              <TextArea\r\n                name=\"Complaint\"\r\n                value={values.Complaint}\r\n                onChange={handleChange}\r\n                onBlur={decoratedHandelBlur}\r\n                placeholder={messages['local.write_complaint']}\r\n                autoSize={{ minRows: 3, maxRows: 12 }}\r\n              />\r\n            </Form.Item>\r\n          </TabPane>\r\n        </Tabs>\r\n        <Form.Item\r\n          validateStatus={errors.email && touched.email && 'error'}\r\n          help={touched.email && errors.email}\r\n        >\r\n          <Input\r\n            placeholder={messages['local.email']}\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={decoratedHandelBlur}\r\n            className=\"email\"\r\n          />\r\n          <Button disabled={loading} type=\"primary\" className=\"send_suggestion_btn\" htmlType=\"submit\">\r\n            {messages['local.send']}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\nSuggestionModal.propTypes = {\r\n  visible: PropTypes.bool.isRequired,\r\n  handleHideModal: PropTypes.func.isRequired,\r\n  APISendAction: PropTypes.func,\r\n  hideAllAction: PropTypes.func,\r\n};\r\nfunction mapStateToProps({ globalAPIS }) {\r\n  return { globalAPIS };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  APISendAction: APISend,\r\n  hideAllAction: hideAll,\r\n})(SuggestionModal);\r\n"]},"metadata":{},"sourceType":"module"}