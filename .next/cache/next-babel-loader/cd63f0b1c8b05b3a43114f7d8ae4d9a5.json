{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Col, InputNumber, Slider } from 'antd';\nimport { useIntl } from 'react-intl';\nimport keys from '../../constants/keys';\n\nfunction sortNumber(a, b) {\n  return a - b;\n}\n\nfunction PriceSlider(_ref) {\n  var handleChange = _ref.handleChange,\n      price = _ref.price,\n      mod = _ref.mod;\n\n  var _useIntl = useIntl(),\n      messages = _useIntl.messages;\n\n  var _useState = useState(price),\n      inputsValue = _useState[0],\n      setInputsValue = _useState[1];\n\n  var _useState2 = useState(null),\n      timer = _useState2[0],\n      setTimer = _useState2[1];\n\n  useEffect(function () {\n    clearTimeout(timer);\n    if (price[0] === inputsValue[0] && price[1] === inputsValue[1]) return;\n    setTimer(setTimeout(function () {\n      handleChange(inputsValue);\n    }, 500));\n  }, [inputsValue]);\n  useEffect(function () {\n    if (price[0] === inputsValue[0] && price[1] === inputsValue[1]) return;\n    setInputsValue(_toConsumableArray(inputsValue).sort(sortNumber));\n  }, [price]);\n\n  var handleChangeSlider = function handleChangeSlider(values) {\n    var cloneValues = _toConsumableArray(values);\n\n    if (!cloneValues[0] || !cloneValues[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      cloneValues[0] ? cloneValues[1] = cloneValues[0] : cloneValues[0] = cloneValues[1];\n    }\n\n    setInputsValue(cloneValues);\n  };\n\n  var sortValues = function sortValues() {\n    setInputsValue(_toConsumableArray(inputsValue).sort(sortNumber));\n  };\n\n  var numberInputs = function numberInputs() {\n    return __jsx(React.Fragment, null, __jsx(InputNumber, {\n      min: 1,\n      max: keys.DEFAULT_PRICE[1],\n      value: inputsValue[0],\n      onChange: function onChange(value) {\n        setInputsValue([value, inputsValue[1]]);\n      },\n      onBlur: sortValues,\n      placeholder: messages['local.min-price']\n    }), __jsx(\"span\", {\n      className: \"line\"\n    }), __jsx(InputNumber, {\n      min: 1,\n      max: keys.DEFAULT_PRICE[1],\n      value: inputsValue[1],\n      onChange: function onChange(value) {\n        setInputsValue([inputsValue[0], value]);\n      },\n      onBlur: sortValues,\n      placeholder: messages['local.max-price']\n    }));\n  };\n\n  var slider = function slider() {\n    return __jsx(React.Fragment, null, __jsx(Slider, {\n      range: true,\n      onChange: handleChangeSlider,\n      defaultValue: [],\n      value: _toConsumableArray(inputsValue).sort(sortNumber),\n      min: 1,\n      max: keys.DEFAULT_PRICE[1]\n    }));\n  };\n\n  switch (mod) {\n    case 'Home':\n      return __jsx(React.Fragment, null, __jsx(Col, {\n        xs: 24,\n        sm: 24,\n        md: 12,\n        lg: 6,\n        xxl: 5,\n        className: \"choose_price clearfix\"\n      }, __jsx(\"h3\", null, messages['local.specify_price']), __jsx(\"div\", {\n        className: \"price_slider\"\n      }, __jsx(Col, null, numberInputs()), __jsx(Col, null, slider()))), __jsx(Col, {\n        xs: 24,\n        className: \"choose_price_mobile\"\n      }, numberInputs()));\n\n    default:\n      return __jsx(\"div\", {\n        className: \"price_slider\"\n      }, __jsx(Col, null, numberInputs()), __jsx(Col, null, slider()));\n  }\n}\n\nexport default PriceSlider;","map":null,"metadata":{},"sourceType":"module"}