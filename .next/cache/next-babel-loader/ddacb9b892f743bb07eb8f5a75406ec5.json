{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo, useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport useCartActions from '../../store/cart/useCartActions';\nimport keys from '../../constants/keys';\nimport ProductQuantityBox from './components/ProductQuantityBox';\nimport RemoveProductButton from './components/RemoveProductButton';\nimport ProductName from './components/ProductName';\nimport ProductOldPrice from './components/ProductOldPrice';\nimport ProductImage from './components/ProductImage';\nconst {\n  IMAGE_POSTFIX\n} = keys;\n\nfunction IndexCartItem({\n  product,\n  mode\n}) {\n  const {\n    price,\n    id,\n    count,\n    xmlPrice,\n    percent,\n    xmlCount\n  } = product;\n  const {\n    cartRemoveProductAction,\n    cartChangeProductAction\n  } = useCartActions();\n  const {\n    messages\n  } = useIntl();\n  const totalCount = useMemo(() => (count || 1) * price, [price, count]);\n  const oldPrice = useMemo(() => percent ? xmlPrice * (count || 1) : null, [percent, xmlPrice, count]);\n  const firstPhoto = useMemo(() => product.photos.sort((a, b) => a.order - b.order)[0], [product.photos]);\n  const src = useMemo(() => `${IMAGE_POSTFIX + id}/${firstPhoto.url}`, [IMAGE_POSTFIX, id, firstPhoto.url]);\n  const name = useMemo(() => product.langs[0].name, [product.langs[0].name]);\n  const changeCount = useCallback(value => cartChangeProductAction({\n    id,\n    changes: {\n      count: value\n    }\n  }), [id]);\n  const removeItem = useCallback(() => {\n    cartRemoveProductAction({\n      id\n    });\n  }, [id]);\n\n  const ProductPrice = () => __jsx(\"span\", {\n    className: \"product_price\"\n  }, `${totalCount} ${messages['local.dr']}â€¤`);\n\n  switch (mode) {\n    case 'mobile':\n      return __jsx(\"div\", {\n        className: \"cart_item cart_item_mobile\"\n      }, __jsx(ProductImage, {\n        src: src,\n        id: id\n      }), __jsx(\"div\", {\n        className: \"prod_info\"\n      }, __jsx(\"div\", {\n        className: \"product_price_box\"\n      }, __jsx(ProductPrice, null), __jsx(ProductOldPrice, {\n        text: oldPrice + messages['local.dr'],\n        oldPrice: oldPrice\n      })), __jsx(ProductName, {\n        name: name,\n        id: id\n      }), __jsx(ProductQuantityBox, {\n        count: count,\n        handleChange: changeCount,\n        xmlCount: xmlCount\n      })), __jsx(RemoveProductButton, {\n        handleClick: removeItem\n      }));\n\n    default:\n      return __jsx(\"div\", {\n        className: \"cart_item cart_item_web\"\n      }, __jsx(\"span\", {\n        className: \"line line_1\"\n      }), __jsx(\"span\", {\n        className: \"line line_2\"\n      }), __jsx(\"span\", {\n        className: \"line line_3\"\n      }), __jsx(ProductImage, {\n        src: src,\n        id: id\n      }), __jsx(ProductName, {\n        name: name,\n        id: id\n      }), __jsx(ProductQuantityBox, {\n        count: count,\n        handleChange: changeCount,\n        xmlCount: xmlCount\n      }), __jsx(\"div\", {\n        className: \"product_price_box\"\n      }, __jsx(ProductOldPrice, {\n        text: oldPrice + messages['local.dr'],\n        oldPrice: oldPrice\n      }), __jsx(ProductPrice, null)), __jsx(RemoveProductButton, {\n        handleClick: removeItem\n      }));\n  }\n}\n\nexport default IndexCartItem;","map":null,"metadata":{},"sourceType":"module"}