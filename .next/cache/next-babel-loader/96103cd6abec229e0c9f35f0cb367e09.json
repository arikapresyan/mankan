{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _handleActions;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { handleActions } from 'redux-actions';\nimport { cartChangeProduct, resetCartReducer, changeCart, changeCartSuccess, changeCartError, cartSetAll, sendOrder, sendOrderSuccess, sendOrderError } from './action';\nimport { addLoadingItems } from './handleFunctions';\nvar initialState = {\n  loading: {},\n  error: false,\n  data: {},\n  order: {\n    loading: false,\n    error: false\n  },\n  cartSetCounter: 0\n};\nexport default handleActions((_handleActions = {}, _defineProperty(_handleActions, changeCart, function (state, _ref) {\n  var ids = _ref.payload.ids;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loading: addLoadingItems(state, ids),\n    error: false\n  });\n}), _defineProperty(_handleActions, changeCartSuccess, function (state, _ref2) {\n  var _ref2$payload = _ref2.payload,\n      id = _ref2$payload.id,\n      data = _ref2$payload.data;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loading: _objectSpread(_objectSpread({}, state.loading), {}, _defineProperty({}, id, false)),\n    error: false,\n    data: data\n  });\n}), _defineProperty(_handleActions, changeCartError, function (state, _ref3) {\n  var ids = _ref3.payload.ids;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loading: _objectSpread(_objectSpread({}, state.loading), {}, {\n      loading: addLoadingItems(state, ids, true)\n    }),\n    error: true\n  });\n}), _defineProperty(_handleActions, cartChangeProduct, function (state, _ref4) {\n  var _ref4$payload = _ref4.payload,\n      id = _ref4$payload.id,\n      changes = _ref4$payload.changes;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: _objectSpread(_objectSpread({}, state.data), {}, _defineProperty({}, id, _objectSpread(_objectSpread({}, state[id]), changes)))\n  });\n}), _defineProperty(_handleActions, cartSetAll, function (state, _ref5) {\n  var cart = _ref5.payload.cart;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: cart,\n    cartSetCounter: state.cartSetCounter + 1\n  });\n}), _defineProperty(_handleActions, resetCartReducer, function (state) {\n  return _objectSpread(_objectSpread({}, initialState), {}, {\n    cartSetCounter: state.cartSetCounter\n  });\n}), _defineProperty(_handleActions, sendOrder, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    order: {\n      error: false,\n      loading: true\n    }\n  });\n}), _defineProperty(_handleActions, sendOrderSuccess, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    data: {},\n    order: {\n      error: false,\n      loading: false\n    }\n  });\n}), _defineProperty(_handleActions, sendOrderError, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    order: {\n      error: true,\n      loading: false\n    }\n  });\n}), _handleActions), initialState);\nexport function getTotalPrice(store) {\n  var data = store.cart.data;\n  var keys = Object.keys(data);\n  var total = 0;\n  keys.forEach(function (key) {\n    total += (data[key] && data[key].price || 200) * (data[key] && data[key].count || 1);\n  });\n  return total;\n}\nexport function getTotalCount(store) {\n  var cart = store.cart;\n  return Object.keys(cart.data).length;\n}\nexport var selectCart = function selectCart(_ref6) {\n  var cart = _ref6.cart;\n  return cart.data;\n};","map":null,"metadata":{},"sourceType":"module"}