{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { Layout, Row, Col, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Breadcrumb, ViewedProductsList } from '../../components';\nimport FilterWrapper from '../../components/mobile/filter-list-sidebar/FilterListWrapper';\nimport { toggleVisibility } from '../../store/userEventListeners/action';\nimport { resetCatalogFilterReducer, catalogFilterSetValues } from '../../store/catalog-filter/action';\nimport { catalogGet } from '../../store/catalog/action';\nimport { getIsUserFilter, clearFilters } from '../../store/catalog-filter/reducer';\nimport IndexFilterList from '../../components/catalog/index-filter-list/IndexFilterList';\nimport CatalogLoader from '../../components/catalog/catalog-loader/CatalogLoader';\nconst Pagination = dynamic(() => import('antd/lib/pagination/index'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('antd/lib/pagination/index')],\n    modules: ['antd/lib/pagination/index']\n  }\n});\nconst ProductList = dynamic(() => import('../../components/catalog/ProductList'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/catalog/ProductList')],\n    modules: ['../../components/catalog/ProductList']\n  }\n});\nconst AccompanyingProductList = dynamic(() => import('../../components/common/AccompanyingProductList'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/common/AccompanyingProductList')],\n    modules: ['../../components/common/AccompanyingProductList']\n  }\n});\nconst CatalogEmpty = dynamic(() => import('../../components/catalog/catalog-empty/CatalogEmpty'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/catalog/catalog-empty/CatalogEmpty')],\n    modules: ['../../components/catalog/catalog-empty/CatalogEmpty']\n  }\n});\n\nfunction itemRender(current, type, originalBattery) {\n  if (type === 'prev') {\n    return __jsx(\"a\", null, \"Previous\");\n  }\n\n  if (type === 'next') {\n    return __jsx(\"a\", null, \"Next\");\n  }\n\n  return originalBattery;\n}\n\nfunction Catalog({\n  toggleVisibilityAction,\n  products,\n  pagesCount,\n  page,\n  catalogGetAction,\n  loading,\n  resetCatalogFilterReducerAction,\n  lang\n}) {\n  const {\n    formatMessage,\n    messages\n  } = useIntl();\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  useEffect(() => () => {\n    resetCatalogFilterReducerAction();\n    catalogGetAction();\n  }, []);\n\n  function changePage(clickedPage) {\n    window.scrollTo(0, 0);\n    catalogGetAction({\n      page: clickedPage\n    });\n  }\n\n  useEffect(() => {\n    if (count === 1) {\n      catalogGetAction({\n        page\n      });\n    }\n\n    setCount(1);\n  }, [lang]);\n  return __jsx(Layout.Content, {\n    className: \"catalog_page\",\n    key: \"content\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"top_content\"\n  }, __jsx(Breadcrumb, null), __jsx(\"div\", {\n    className: \"delivery_terms\"\n  }, formatMessage({\n    id: 'local.free_shipping_message'\n  }, {\n    price: __jsx(\"span\", {\n      className: \"toChangePrice\"\n    }, \"20000\", ' ', formatMessage({\n      id: 'local.dr'\n    }))\n  }))), __jsx(Row, {\n    gutter: [32, {\n      xs: 32,\n      sm: 32,\n      md: 32,\n      lg: 32\n    }]\n  }, __jsx(Col, {\n    className: \"filter_col\",\n    md: 24,\n    lg: 8,\n    xl: 8,\n    xxl: 7\n  }, __jsx(\"div\", {\n    className: \"filter_wrapper\"\n  }, __jsx(IndexFilterList, null)), __jsx(FilterWrapper, null), __jsx(ViewedProductsList, {\n    key: \"ViewedProductsList\"\n  })), __jsx(Col, {\n    className: \"prod_list_col\",\n    md: 24,\n    lg: 16,\n    xl: 16,\n    xxl: 17\n  }, loading ? __jsx(CatalogLoader, null) : __jsx(React.Fragment, null, __jsx(ProductList, {\n    products: products\n  }), __jsx(AccompanyingProductList, {\n    products: products\n  }), pagesCount > 1 ? __jsx(Pagination, {\n    total: pagesCount * 10,\n    current: page,\n    itemRender: itemRender,\n    onChange: changePage\n  }) : pagesCount !== 1 && __jsx(CatalogEmpty, null)))), __jsx(Button, {\n    type: \"primary\",\n    className: \"filter_btn\",\n    onClick: () => toggleVisibilityAction({\n      name: 'isFilterListOpen'\n    })\n  }, __jsx(\"img\", {\n    src: \"/images/icons/controls.png\",\n    alt: \"\"\n  }), messages['local.filter'])));\n}\n\nCatalog.getInitialProps = async ({\n  store,\n  query\n}) => {\n  const {\n    age,\n    gender,\n    classification,\n    type,\n    brand,\n    meaning\n  } = query;\n  const filter = {};\n\n  if (age) {\n    filter.age = age;\n  }\n\n  if (gender) {\n    filter.gender = [gender];\n  }\n\n  if (brand) {\n    filter.brand = [brand];\n  }\n\n  if (classification) {\n    filter.classification = [classification];\n  }\n\n  if (type) {\n    filter.type = [type];\n  }\n\n  if (meaning) {\n    filter.meaning = [meaning];\n  } // filter.price = [...keys.DEFAULT_PRICE];\n\n\n  const isUserFilter = getIsUserFilter(store.getState());\n\n  if (!isUserFilter) {\n    store.dispatch(resetCatalogFilterReducer());\n    store.dispatch(catalogFilterSetValues(_objectSpread({}, filter)));\n  } else {\n    store.dispatch(catalogFilterSetValues(_objectSpread(_objectSpread({}, clearFilters(store.getState())), {}, {\n      isUserFilter: false\n    })));\n  }\n\n  await store.dispatch(catalogGet());\n  return {};\n};\n\nfunction mapStateToProps({\n  catalog: {\n    products,\n    pagesCount,\n    page,\n    loading\n  },\n  user: {\n    lang\n  }\n}) {\n  return {\n    products,\n    pagesCount,\n    page,\n    loading,\n    lang\n  };\n}\n\nexport default connect(mapStateToProps, {\n  toggleVisibilityAction: toggleVisibility,\n  resetCatalogFilterReducerAction: resetCatalogFilterReducer,\n  catalogGetAction: catalogGet\n})(Catalog);","map":null,"metadata":{},"sourceType":"module"}