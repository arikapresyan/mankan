{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useMemo } from 'react';\nimport { Row, Col, Layout } from 'antd';\nimport { useIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport keys from '../../../constants/keys';\nimport { Breadcrumb, ProductImageView, ProductInfo, ProductDescription, ProductCharacteristics, ProductUsefulness, ProductSlider, AccompanyingProductList } from '../../../components';\nimport { getPageData } from '../../../store/pages-data/action';\nimport { wishlistChangeItem } from '../../../store/wishlist/action';\nimport AccompanyingProducts from '../../../components/accompanying-products/AccompanyingProducts';\nimport { setViewedProducts } from '../../../store/viewed-products/action';\nimport PagesLoader from '../../../components/pages-loader/PagesLoader';\nconst {\n  IMAGE_POSTFIX\n} = keys;\nconst {\n  Content\n} = Layout;\n\nfunction Product({\n  pageData,\n  user,\n  wishlistChangeItemAction,\n  wishlistIds,\n  setViewedProductsAction\n}) {\n  if (pageData.loading || !pageData.data) return __jsx(PagesLoader, null);\n  const thisProduct = pageData.data.result.productById;\n  const similarProducts = pageData.data.result.similarProducts.rows;\n  const images = useMemo(() => {\n    const sorted = thisProduct.photos.sort((a, b) => a.order - b.order);\n    return sorted.map(photo => `${IMAGE_POSTFIX}${thisProduct.id}/${photo.url}`);\n  }, [IMAGE_POSTFIX, thisProduct.id, thisProduct.photos]);\n  const {\n    messages\n  } = useIntl();\n  useEffect(() => {\n    if (thisProduct.id) {\n      setViewedProductsAction({\n        id: thisProduct.id\n      });\n    }\n  }, [thisProduct.id]);\n  const name = useMemo(() => thisProduct.langs[0].name, [thisProduct]);\n  return __jsx(Content, {\n    className: \"product_page\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Breadcrumb, {\n    prodName: name\n  })), __jsx(\"div\", {\n    className: \"product_main_wrap\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Row, {\n    gutter: [32, {\n      xs: 32,\n      sm: 32,\n      md: 32,\n      lg: 32,\n      xl: 32,\n      xxl: 32\n    }]\n  }, __jsx(Col, {\n    md: 14,\n    lg: 14,\n    xl: 14\n  }, __jsx(ProductImageView, {\n    images: images\n  })), __jsx(Col, {\n    md: 10,\n    lg: 10,\n    xl: 10\n  }, __jsx(ProductInfo, {\n    oneProduct: thisProduct,\n    user: user,\n    wishlistChangeItemAction: wishlistChangeItemAction,\n    inWishlist: !!wishlistIds[thisProduct.id]\n  })))), __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: '-25px'\n    }\n  }, __jsx(Row, {\n    gutter: [32, {\n      xs: 32,\n      sm: 32,\n      md: 32,\n      lg: 32,\n      xl: 32,\n      xxl: 32\n    }]\n  }, __jsx(Col, {\n    xl: 10,\n    className: \"characteristic_col\"\n  }, __jsx(ProductCharacteristics, {\n    product: thisProduct\n  })), __jsx(Col, {\n    xl: 14\n  }, __jsx(ProductDescription, {\n    product: thisProduct\n  })))), !!thisProduct.productUsage.length && __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(ProductUsefulness, {\n    usefulness: thisProduct.productUsage\n  }))), __jsx(AccompanyingProducts, null), similarProducts.length ? __jsx(\"div\", {\n    className: \"slider_wrapper\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h2\", {\n    className: \"section_title\"\n  }, messages['local.similar_products']), __jsx(ProductSlider, {\n    products: similarProducts\n  }), __jsx(AccompanyingProductList, {\n    products: similarProducts\n  }))) : null);\n}\n\nProduct.getInitialProps = ({\n  store,\n  query\n}) => {\n  const {\n    id\n  } = query;\n  store.dispatch(getPageData({\n    page: 'oneProduct',\n    id\n  }));\n  return {};\n};\n\nfunction mapStateToProps({\n  oneProduct,\n  pageData,\n  user,\n  wishlist\n}) {\n  return {\n    oneProduct,\n    pageData,\n    user,\n    wishlistIds: wishlist.productIds\n  };\n}\n\nexport default connect(mapStateToProps, {\n  wishlistChangeItemAction: wishlistChangeItem,\n  setViewedProductsAction: setViewedProducts\n})(Product);","map":null,"metadata":{},"sourceType":"module"}