{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { getMenuList, getMenuListSuccess, getMenuListError, getMenuListReset } from './action';\nconst initialState = {\n  data: {\n    type: [],\n    age: [],\n    brand: [],\n    meaning: []\n  },\n  loading: false,\n  success: false,\n  error: false,\n  name: '',\n  bestseller: null\n};\nexport default handleActions({\n  [getMenuList]: () => _objectSpread(_objectSpread({}, initialState), {}, {\n    loading: true\n  }),\n  [getMenuListSuccess]: (state, {\n    payload: {\n      data,\n      name,\n      bestseller\n    }\n  }) => _objectSpread(_objectSpread({}, initialState), {}, {\n    loading: false,\n    success: true,\n    data,\n    name,\n    bestseller\n  }),\n  [getMenuListError]: () => _objectSpread(_objectSpread({}, initialState), {}, {\n    loading: false,\n    success: true\n  }),\n  [getMenuListReset]: () => _objectSpread({}, initialState)\n}, initialState);\nexport const selectMenuListName = ({\n  menuList\n}) => menuList.name;\nexport const selectMenuList = ({\n  menuList\n}) => menuList;","map":{"version":3,"sources":["/var/www/mankan-front/store/menu-list/reducer.js"],"names":["handleActions","getMenuList","getMenuListSuccess","getMenuListError","getMenuListReset","initialState","data","type","age","brand","meaning","loading","success","error","name","bestseller","state","payload","selectMenuListName","menuList","selectMenuList"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SACEC,WADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,gBAJF,QAKO,UALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,GAAG,EAAE,EAFD;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,OAAO,EAAE;AAJL,GADa;AAOnBC,EAAAA,OAAO,EAAE,KAPU;AAQnBC,EAAAA,OAAO,EAAE,KARU;AASnBC,EAAAA,KAAK,EAAE,KATY;AAUnBC,EAAAA,IAAI,EAAE,EAVa;AAWnBC,EAAAA,UAAU,EAAE;AAXO,CAArB;AAcA,eAAef,aAAa,CAAC;AAC3B,GAACC,WAAD,GAAe,sCACVI,YADU;AAEbM,IAAAA,OAAO,EAAE;AAFI,IADY;AAK3B,GAACT,kBAAD,GAAsB,CAACc,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEX,MAAAA,IAAF;AAAQQ,MAAAA,IAAR;AAAcC,MAAAA;AAAd;AAAX,GAAR,qCACjBV,YADiB;AAEpBM,IAAAA,OAAO,EAAE,KAFW;AAGpBC,IAAAA,OAAO,EAAE,IAHW;AAIpBN,IAAAA,IAJoB;AAKpBQ,IAAAA,IALoB;AAMpBC,IAAAA;AANoB,IALK;AAa3B,GAACZ,gBAAD,GAAoB,sCACfE,YADe;AAElBM,IAAAA,OAAO,EAAE,KAFS;AAGlBC,IAAAA,OAAO,EAAE;AAHS,IAbO;AAkB3B,GAACR,gBAAD,GAAoB,wBACfC,YADe;AAlBO,CAAD,EAqBzBA,YArByB,CAA5B;AAuBA,OAAO,MAAMa,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkBA,QAAQ,CAACL,IAAtD;AACP,OAAO,MAAMM,cAAc,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAkBA,QAAzC","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport {\n  getMenuList,\n  getMenuListSuccess,\n  getMenuListError,\n  getMenuListReset,\n} from './action';\n\nconst initialState = {\n  data: {\n    type: [],\n    age: [],\n    brand: [],\n    meaning: [],\n  },\n  loading: false,\n  success: false,\n  error: false,\n  name: '',\n  bestseller: null,\n};\n\nexport default handleActions({\n  [getMenuList]: () => ({\n    ...initialState,\n    loading: true,\n  }),\n  [getMenuListSuccess]: (state, { payload: { data, name, bestseller } }) => ({\n    ...initialState,\n    loading: false,\n    success: true,\n    data,\n    name,\n    bestseller,\n  }),\n  [getMenuListError]: () => ({\n    ...initialState,\n    loading: false,\n    success: true,\n  }),\n  [getMenuListReset]: () => ({\n    ...initialState,\n  }),\n}, initialState);\n\nexport const selectMenuListName = ({ menuList }) => menuList.name;\nexport const selectMenuList = ({ menuList }) => menuList;\n"]},"metadata":{},"sourceType":"module"}