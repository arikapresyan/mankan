{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Button from 'antd/lib/button';\nimport Form from 'antd/lib/form';\nimport Input from 'antd/lib/input';\nimport Checkbox from 'antd/lib/checkbox';\nimport Modal from 'antd/lib/modal';\nimport { connect } from 'react-redux';\nimport { registration } from '../../../store/user/action';\nimport { hideAll } from '../../../store/userEventListeners/action';\nimport useRegistration from './useRegistration';\n\nfunction RegistrationModal(_ref) {\n  var visible = _ref.visible,\n      handleHideModal = _ref.handleHideModal,\n      registrationAction = _ref.registrationAction,\n      hideAllAction = _ref.hideAllAction,\n      userAuthorisationLoading = _ref.userAuthorisationLoading,\n      authSuccess = _ref.authSuccess,\n      errorText = _ref.errorText;\n\n  var _useRegistration = useRegistration({\n    registrationAction: registrationAction,\n    hideAllAction: hideAllAction,\n    authSuccess: authSuccess,\n    errorText: errorText\n  }),\n      formik = _useRegistration.formik,\n      messages = _useRegistration.messages,\n      formatMessage = _useRegistration.formatMessage;\n\n  var values = formik.values,\n      touched = formik.touched,\n      errors = formik.errors,\n      handleChange = formik.handleChange,\n      handleBlur = formik.handleBlur,\n      handleSubmit = formik.handleSubmit;\n  return __jsx(Modal, {\n    visible: visible,\n    destroyOnClose: true,\n    centered: true,\n    onCancel: handleHideModal,\n    footer: null,\n    className: \"registration_modal\"\n  }, __jsx(\"h2\", null, messages['local.registration']), __jsx(Form, {\n    onSubmit: handleSubmit\n  }, errors.globalError && __jsx(\"p\", {\n    style: {\n      color: '#C40A04'\n    }\n  }, errors.globalError), __jsx(Form.Item, {\n    validateStatus: errors.name && touched.name && 'error',\n    help: touched.name && errors.name\n  }, __jsx(Input, {\n    placeholder: \"\".concat(messages['local.name'], \" *\"),\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Form.Item, {\n    validateStatus: errors.surname && touched.surname && 'error',\n    help: touched.surname && errors.surname\n  }, __jsx(Input, {\n    placeholder: \"\".concat(messages['local.last_name'], \" *\"),\n    value: values.surname,\n    name: \"surname\",\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Form.Item, {\n    validateStatus: errors.email && touched.email && 'error',\n    help: touched.email && errors.email\n  }, __jsx(Input, {\n    placeholder: \"\".concat(messages['local.email'], \" *\"),\n    value: values.email,\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Form.Item, {\n    validateStatus: errors.phone && touched.phone && 'error',\n    help: touched.phone && errors.phone\n  }, __jsx(Input, {\n    placeholder: \"\".concat(messages['local.tel'], \" *\"),\n    name: \"phone\",\n    value: values.phone,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Form.Item, {\n    validateStatus: errors.password && touched.password && 'error',\n    help: touched.password && errors.password\n  }, __jsx(Input, {\n    type: \"password\",\n    placeholder: \"\".concat(messages['local.password'], \" *\"),\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Form.Item, {\n    validateStatus: errors.repeatPassword && touched.repeatPassword && 'error',\n    help: touched.repeatPassword && errors.repeatPassword\n  }, __jsx(Input, {\n    type: \"password\",\n    placeholder: messages['local.repeat_password'],\n    name: \"repeatPassword\",\n    value: values.repeatPassword,\n    onChange: handleChange,\n    onBlur: handleBlur\n  })), __jsx(Form.Item, {\n    validateStatus: errors.agreeTerms && touched.agreeTerms && 'error',\n    help: touched.agreeTerms && errors.agreeTerms\n  }, __jsx(Checkbox, {\n    className: \"terms\",\n    checked: +values.agreeTerms,\n    onChange: handleChange,\n    name: \"agreeTerms\"\n  }, \" \".concat(messages['local.i_know'], \" \"), __jsx(\"a\", {\n    href: \"/using-rules\",\n    target: \"_blank\"\n  }, messages['local.rules_of_using']))), __jsx(Form.Item, null, __jsx(\"div\", {\n    className: \"registration_btn\"\n  }, __jsx(Button // disabled={userAuthorisationLoading}\n  , {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: userAuthorisationLoading\n  }, messages['local.registration1'])))));\n}\n\nfunction mapStateToProps(_ref2) {\n  var _ref2$user = _ref2.user,\n      userAuthorisationLoading = _ref2$user.loading,\n      authSuccess = _ref2$user.authSuccess,\n      errorText = _ref2$user.errorText;\n  return {\n    userAuthorisationLoading: userAuthorisationLoading,\n    authSuccess: authSuccess,\n    errorText: errorText\n  };\n}\n\nexport default connect(mapStateToProps, {\n  registrationAction: registration,\n  hideAllAction: hideAll\n})(RegistrationModal);","map":null,"metadata":{},"sourceType":"module"}