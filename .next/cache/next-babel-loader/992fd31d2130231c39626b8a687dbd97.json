{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport function setCookie(name, value, options = {}) {\n  options = _objectSpread({\n    path: '/'\n  }, options);\n\n  if (options.expires instanceof Date) {\n    options.expires = options.expires.toUTCString();\n  }\n\n  let updatedCookie = `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n\n  for (const optionKey in options) {\n    updatedCookie += `; ${optionKey}`;\n    const optionValue = options[optionKey];\n\n    if (optionValue !== true) {\n      updatedCookie += `=${optionValue}`;\n    }\n  }\n\n  document.cookie = updatedCookie;\n}\nexport function getCookie(name) {\n  const matches = document.cookie.match(new RegExp(`(?:^|; )${name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1')}=([^;]*)`));\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\nexport function deleteCookie(name) {\n  setCookie(name, '', {\n    'max-age': -1\n  });\n}","map":null,"metadata":{},"sourceType":"module"}