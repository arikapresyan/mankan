{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport useIntl from 'react-intl';\nimport { APISend } from '../../../store/global-APIS/action';\nimport usePersonalInfo from './usePersonalInfo';\n\nfunction PersonalInfo(_ref) {\n  var user = _ref.user,\n      APISendAction = _ref.APISendAction;\n\n  var _usePersonalInfo = usePersonalInfo({\n    APISendAction: APISendAction,\n    user: user\n  }),\n      openChangePass = _usePersonalInfo.openChangePass,\n      handleChange = _usePersonalInfo.handleChange,\n      handleBlur = _usePersonalInfo.handleBlur,\n      handleSubmit = _usePersonalInfo.handleSubmit,\n      errors = _usePersonalInfo.errors,\n      touched = _usePersonalInfo.touched,\n      messages = _usePersonalInfo.messages,\n      values = _usePersonalInfo.values,\n      loading = _usePersonalInfo.loading,\n      isChangedEmail = _usePersonalInfo.isChangedEmail; //todo placeholders lang ???\n\n\n  return __jsx(\"div\", {\n    className: \"personal_info_form\"\n  }, __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: \"First name\",\n    name: \"firstName\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    defaultValue: \"\".concat(values.firstName)\n  }), touched.firstName && errors.firstName && errors.firstName), __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: \"Last name\",\n    name: \"lastName\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    defaultValue: \"\".concat(values.lastName)\n  }), touched.lastName && errors.lastName && errors.lastName), __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: \"Email\",\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    defaultValue: \"\".concat(values.email)\n  }), touched.email && errors.email && errors.email), __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: \"Phone\",\n    name: \"phone\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    defaultValue: \"\".concat(values.phone)\n  }), touched.phone && errors.phone && errors.phone), __jsx(Button, {\n    type: \"link\",\n    className: \"change_pass\",\n    onClick: openChangePass\n  }, messages['local.change_password']), values.changePassMode && __jsx(\"div\", null, __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    defaultValue: \"\".concat(values.password)\n  }), touched.password && errors.password && errors.password), __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: messages['local.repeat_new_password'],\n    type: \"password\",\n    name: \"retryPassword\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    defaultValue: \"\".concat(values.retryPassword)\n  }), touched.retryPassword && errors.retryPassword && errors.retryPassword)), __jsx(Form.Item, null, __jsx(Button, {\n    disabled: loading,\n    htmlType: \"submit\",\n    className: \"confirm_changes\"\n  }, messages['local.confirm_changes']))));\n}\n\nfunction mapStateToProps(_ref2) {\n  var user = _ref2.user;\n  return {\n    user: user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  APISendAction: APISend\n})(PersonalInfo);","map":null,"metadata":{},"sourceType":"module"}