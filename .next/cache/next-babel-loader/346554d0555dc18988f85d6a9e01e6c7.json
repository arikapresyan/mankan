{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { changeGlobalInformationRouter, resetGlobalInformationRouter } from './action';\nconst initialState = {};\nexport default handleActions({\n  [changeGlobalInformationRouter]: (state, {\n    payload\n  }) => _objectSpread(_objectSpread({}, state), payload),\n  [resetGlobalInformationRouter]: () => initialState\n}, initialState);","map":{"version":3,"sources":["/var/www/mankan-front/store/global-Information-Router/reducer.js"],"names":["handleActions","changeGlobalInformationRouter","resetGlobalInformationRouter","initialState","state","payload"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SACEC,6BADF,EAEEC,4BAFF,QAGO,UAHP;AAKA,MAAMC,YAAY,GAAG,EAArB;AAGA,eAAeH,aAAa,CAAC;AAC3B,GAACC,6BAAD,GAAiC,CAC/BG,KAD+B,EACxB;AAAEC,IAAAA;AAAF,GADwB,qCAG5BD,KAH4B,GAGlBC,OAHkB,CADN;AAO3B,GAACH,4BAAD,GAAgC,MAAMC;AAPX,CAAD,EAQzBA,YARyB,CAA5B","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport {\n  changeGlobalInformationRouter,\n  resetGlobalInformationRouter,\n} from './action';\n\nconst initialState = {};\n\n\nexport default handleActions({\n  [changeGlobalInformationRouter]: (\n    state, { payload },\n  ) => ({\n    ...state, ...payload,\n  }),\n\n  [resetGlobalInformationRouter]: () => initialState,\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}