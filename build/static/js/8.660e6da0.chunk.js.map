{"version":3,"sources":["hooks/useTableInfo.js","pages/usage/constants.js","pages/usage/component/usage-form/UsageForm.jsx","pages/usage/component/UsageComp.jsx","pages/usage/Usage.jsx"],"names":["useTableInfo","name","getData","resetData","searchResetAction","useEffect","changePage","useCallback","newPage","page","usageSchema","Yup","shape","armName","required","armDesc","imgList","vacancySchema","armShort","TabPane","pathname","USAGE","UsageForm","setShowModal","edit","editMode","dispatch","useDispatch","initialValues","useMemo","data","image","langs","uid","type","status","url","process","thumbUrl","engName","ruName","description","engDesc","ruDesc","useFormik","onSubmit","values","formData","FormData","append","originFileObj","names","lang","JSON","stringify","id","editData","createData","validationSchema","errors","touched","handleBlur","handleSubmit","handleChange","setFieldValue","handleEditorChange","fieldName","event","editor","Item","validateStatus","help","ImageUpload","onChange","info","file","fileList","map","item","message","error","listType","defaultActiveKey","className","tab","key","placeholder","value","onBlur","htmlType","UsageComp","dataSource","loading","useState","showModal","showCreateModal","setShowCreateModal","checkedRows","setCheckedRows","selectedIds","setSelectedIds","confirm","showDeleteConfirm","ids","content","length","okText","okType","cancelText","onOk","deleteData","onCancel","rowSelection","selectedRowKeys","selectedRows","selected","row","getCheckboxProps","record","disabled","columns","title","dataIndex","render","size","src","_","dangerouslySetInnerHTML","__html","onClick","editFetchingAction","pagination","visible","afterClose","editFetchingResetAction","destroyOnClose","footer","defaultProps","connect","tables","list","isFetching","pages","getTableDataAction","getTableData","getTableDataResetAction","getTableDataReset","editFetching","editFetchingReset","editDataAction","searchReset","current","total"],"mappings":"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","file":"static/js/8.660e6da0.chunk.js","sourcesContent":["import { useEffect, useCallback } from 'react';\n\n\nexport default function useTableInfo(name, getData, resetData, searchResetAction) {\n  useEffect(() => {\n    getData({ name });\n    return () => {\n      resetData({ name });\n      searchResetAction();\n    };\n  }, [getData, name, resetData, searchResetAction]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      getData({ name, page: newPage });\n    },\n    [getData, name],\n  );\n  // return func\n  return { changePage };\n}\n","import * as Yup from 'yup';\n\nexport const usageSchema = Yup.object().shape({\n  armName: Yup.string().required('Armenian is required'),\n  armDesc: Yup.string().required('Armenian description is required'),\n  imgList: Yup.array().required('Please upload an image'),\n});\n\nexport const vacancySchema = Yup.object().shape({\n  armName: Yup.string().required('Armenian is required'),\n  armDesc: Yup.string().required('Armenian description is required'),\n  armShort: Yup.string().required('Armenian short description is required'),\n  imgList: Yup.array().required('Please upload an image'),\n});\n","import React, { useMemo } from 'react';\nimport {\n  Input, Tabs, Button, Form, message,\n} from 'antd';\nimport { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { usageSchema } from '../../constants';\nimport ImageUpload from '../../../../components/image-upload/ImageUpload';\nimport { CKEditor } from '../../../../components';\nimport { createData, editData } from '../../../../store/edit/action';\nimport pathname from '../../../../constants';\nimport './UsageForm.less';\n\nconst { TabPane } = Tabs;\nconst name = pathname.USAGE;\n\nfunction UsageForm({ setShowModal, edit = {}, editMode = false }) {\n  const dispatch = useDispatch();\n\n  const initialValues = useMemo(() => {\n    if (editMode) {\n      const { image, langs } = edit.data;\n      return {\n        imgList: [{\n          uid: '-1',\n          name: image,\n          type: 'image/jpeg',\n          status: 'done',\n          url: `${process.env.REACT_APP_HOST_NAME}/ProductUsageImages/${image}`,\n          thumbUrl: `${process.env.REACT_APP_HOST_NAME}/ProductUsageImages/${image}`,\n        }],\n        armName: langs[0].name,\n        engName: langs[1].name,\n        ruName: langs[2].name,\n        armDesc: langs[0].description,\n        engDesc: langs[1].description,\n        ruDesc: langs[2].description,\n      };\n    }\n    return {\n      imgList: [],\n      armName: '',\n      ruName: '',\n      engName: '',\n      armDesc: '',\n      ruDesc: '',\n      engDesc: '',\n    };\n  },\n  // eslint-disable-next-line\n    [editMode]);\n  const onSubmit = (values) => {\n    const formData = new FormData();\n    if (values.imgList[0].uid !== '-1') {\n      formData.append('image', values.imgList[0].originFileObj);\n    }\n    const names = [{\n      name: values.armName,\n      lang: 'ARM',\n      description: values.armDesc,\n    }, {\n      name: values.engName,\n      lang: 'ENG',\n      description: values.engDesc,\n    }, {\n      name: values.ruName,\n      lang: 'RU',\n      description: values.ruDesc,\n    }];\n    formData.append('names', JSON.stringify(names));\n    if (!editMode) dispatch(createData({ name, data: formData }));\n    else {\n      const { id } = edit.data;\n      dispatch(editData({ name, data: formData, id }));\n    }\n    setShowModal(false);\n  };\n\n  const {\n    values, errors, touched, handleBlur,\n    handleSubmit, handleChange, setFieldValue,\n  } = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema: usageSchema,\n  });\n\n  const handleUploadChange = (info) => {\n    const isJpgOrPng = info.file.type === 'image/jpeg' || info.file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }  else {\n      setFieldValue('imgList', [...info.fileList.map(item => ({\n        ...item,\n        status: 'done',\n      }))]);\n    }\n  };\n  const handleEditorChange = (fieldName) => (event, editor) => {\n    const data = editor.getData();\n    setFieldValue(fieldName, data);\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Item\n        validateStatus={errors.imgList && 'error'}\n        help={errors.imgList}\n      >\n        <ImageUpload\n          onChange={handleUploadChange}\n          listType=\"picture\"\n          name=\"imgList\"\n          fileList={values.imgList}\n        />\n      </Form.Item>\n      <Tabs defaultActiveKey=\"1\" className=\"modalTab\">\n        <TabPane tab=\"Arm /\" key=\"1\">\n          <div>\n            <Form.Item\n              validateStatus={touched.armName && errors.armName && 'error'}\n              help={touched.armName && errors.armName}\n            >\n              <Input\n                placeholder=\"Name\"\n                name=\"armName\"\n                value={values.armName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </Form.Item>\n            <h3>Description</h3>\n            <Form.Item\n              validateStatus={touched.armDesc && errors.armDesc && 'error'}\n              help={touched.armDesc && errors.armDesc}\n            >\n              <CKEditor\n                name=\"armDesc\"\n                onChange={handleEditorChange('armDesc')}\n                data={values.armDesc}\n              />\n            </Form.Item>\n          </div>\n        </TabPane>\n        <TabPane tab=\"Ru /\" key=\"2\">\n          <div>\n            <Form.Item\n              validateStatus={touched.armName && errors.armName && 'error'}\n              help={touched.armName && errors.armName}\n            >\n              <Input\n                placeholder=\"Name\"\n                name=\"ruName\"\n                value={values.ruName}\n                onChange={handleChange}\n              />\n            </Form.Item>\n            <h3>Description</h3>\n            <Form.Item\n              validateStatus={touched.armDesc && errors.armDesc && 'error'}\n              help={touched.armDesc && errors.armDesc}\n            >\n              <CKEditor\n                onChange={handleEditorChange('ruDesc')}\n                data={values.ruDesc}\n              />\n            </Form.Item>\n          </div>\n        </TabPane>\n        <TabPane tab=\"Eng\" key=\"3\">\n          <div>\n            <Form.Item\n              validateStatus={touched.armName && errors.armName && 'error'}\n              help={touched.armName && errors.armName}\n            >\n              <Input\n                placeholder=\"Name\"\n                name=\"engName\"\n                value={values.engName}\n                onChange={handleChange}\n              />\n            </Form.Item>\n            <h3>Description</h3>\n            <Form.Item\n              validateStatus={touched.armDesc && errors.armDesc && 'error'}\n              help={touched.armDesc && errors.armDesc}\n            >\n              <CKEditor\n                onChange={handleEditorChange('engDesc')}\n                data={values.engDesc}\n              />\n            </Form.Item>\n          </div>\n        </TabPane>\n      </Tabs>\n      <Form.Item>\n        <Button key=\"submit\" type=\"primary\" htmlType=\"submit\">\n          {!editMode ? 'Create' : 'Save'}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nUsageForm.propTypes = {\n  setShowModal: PropTypes.func.isRequired,\n  edit: PropTypes.objectOf(Object).isRequired,\n  editMode: PropTypes.bool,\n};\n\nexport default UsageForm;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Icon, Button, Modal, Avatar,\n} from 'antd';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Table } from '../../../components';\nimport { deleteData } from '../../../store/edit/action';\nimport pathname from '../../../constants';\nimport UsageForm from './usage-form/UsageForm';\n\nfunction UsageComp({ dataSource, loading, edit }) {\n  const [showModal, setShowModal] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [checkedRows, setCheckedRows] = useState([]);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const dispatch = useDispatch();\n  const { confirm } = Modal;\n\n  useEffect(() => {\n    setSelectedIds([]);\n    setCheckedRows([]);\n  }, [dataSource, setCheckedRows, setSelectedIds]);\n\n  const showDeleteConfirm = (ids) => confirm({\n    content: `Are you sure to delete ${ids.length === 1 ? 'this product usage?' : 'these product usages'}`,\n    okText: 'Yes',\n    okType: 'primary',\n    cancelText: 'No',\n    className: 'confirm-mod',\n    onOk() {\n      dispatch(deleteData({ name: pathname.USAGE, ids }));\n    },\n    onCancel() {\n    },\n  });\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      const selected = selectedRows.map((row) => row.id);\n      setSelectedIds(selected);\n      setCheckedRows(selectedRowKeys);\n    },\n    getCheckboxProps: (record) => ({\n      disabled: record.name === 'Disabled User', // Column configuration not to be checked\n      name: record.name,\n    }),\n    selectedRowKeys: checkedRows,\n  };\n  const columns = [\n    {\n      title: 'Img',\n      dataIndex: 'image',\n      render: (image) => (image && (\n        <Avatar\n          size={60}\n          src={`${process.env.REACT_APP_HOST_NAME}/ProductUsageImages/${image}`}\n        />\n      )),\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      render: (_, data) => (data.langs && data.langs.length) && data.langs[0].name,\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      render: (_, data) => data.langs && data.langs.length && (\n        <p dangerouslySetInnerHTML={{ __html: data.langs[0].description }} />\n      ),\n    },\n    {\n      title: 'Edit',\n      dataIndex: 'edit',\n      render: (_, { id }) => (\n        <Icon\n          onClick={() => {\n            edit.editFetchingAction({ name: pathname.USAGE, id });\n            setShowModal(true);\n          }}\n          type=\"edit\"\n        />\n      ),\n    },\n    {\n      title: 'Delete',\n      dataIndex: 'id',\n      render: (id) => (\n        <Icon\n          onClick={() => showDeleteConfirm([id])}\n          type=\"delete\"\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Button className=\"btn\" type=\"primary\" onClick={() => setShowCreateModal(true)}>Create</Button>\n      <Button className=\"btn\" type=\"primary\" disabled={!selectedIds.length} onClick={() => showDeleteConfirm(selectedIds)}>Delete</Button>\n      <Table\n        rowSelection={rowSelection}\n        columns={columns}\n        loading={loading}\n        dataSource={dataSource}\n        pagination={false}\n      />\n      <Modal\n        title=\"Edit\"\n        visible={showModal}\n        onCancel={() => setShowModal(false)}\n        afterClose={edit.editFetchingResetAction}\n        destroyOnClose\n        footer={null}\n      >\n        {!edit.data ? '...Loading' : (\n          <UsageForm edit={edit} setShowModal={setShowModal} editMode />\n        )}\n      </Modal>\n      <Modal\n        title=\"Create\"\n        visible={showCreateModal}\n        onCancel={() => setShowCreateModal(false)}\n        destroyOnClose\n        footer={null}\n      >\n        <UsageForm setShowModal={setShowCreateModal} />\n      </Modal>\n    </div>\n  );\n}\n\nUsageComp.propTypes = {\n  dataSource: PropTypes.arrayOf(Array),\n  loading: PropTypes.bool,\n  edit: PropTypes.objectOf(Object).isRequired,\n};\nUsageComp.defaultProps = {\n  dataSource: [],\n  loading: false,\n};\n\nexport default UsageComp;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Pagination } from 'antd';\nimport PropTypes from 'prop-types';\nimport UsageComp from './component/UsageComp';\nimport useTableInfo from '../../hooks/useTableInfo';\nimport pathname from '../../constants';\nimport { getTableData, getTableDataReset } from '../../store/tables/action';\nimport { editData, editFetching, editFetchingReset } from '../../store/edit/action';\nimport { searchReset } from '../../store/search/action';\n\nfunction Usage({\n  list,\n  page,\n  pages,\n  isFetching,\n  getTableDataAction,\n  getTableDataResetAction,\n  edit,\n  editFetchingAction,\n  editFetchingResetAction,\n  editDataAction,\n  searchResetAction,\n}) {\n  const { changePage } = useTableInfo(\n    pathname.USAGE,\n    getTableDataAction,\n    getTableDataResetAction,\n    searchResetAction,\n  );\n\n  return (\n    <div>\n      <UsageComp\n        dataSource={list}\n        loading={isFetching}\n        edit={{\n          ...edit, editFetchingAction, editFetchingResetAction, editDataAction,\n        }}\n      />\n      <Pagination onChange={changePage} current={page} total={pages * 10} />\n    </div>\n  );\n}\n\nUsage.propTypes = {\n  list: PropTypes.arrayOf(Array).isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  getTableDataResetAction: PropTypes.func.isRequired,\n  getTableDataAction: PropTypes.func.isRequired,\n  pages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  edit: PropTypes.objectOf(Object).isRequired,\n  editFetchingAction: PropTypes.func.isRequired,\n  editFetchingResetAction: PropTypes.func.isRequired,\n  editDataAction: PropTypes.func.isRequired,\n  searchResetAction: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  tables: {\n    list,\n    isFetching,\n    pages,\n    page,\n  },\n  edit,\n}) => ({\n  list,\n  isFetching,\n  pages,\n  page,\n  edit,\n});\nexport default connect(mapStateToProps, {\n  getTableDataAction: getTableData,\n  getTableDataResetAction: getTableDataReset,\n  editFetchingAction: editFetching,\n  editFetchingResetAction: editFetchingReset,\n  editDataAction: editData,\n  searchResetAction: searchReset,\n})(Usage);\n"],"sourceRoot":""}