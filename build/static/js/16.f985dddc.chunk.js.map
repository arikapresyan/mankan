{"version":3,"sources":["hooks/useTableInfo.js","pages/clients/ActiveClients.jsx","pages/clients/constants.js","pages/clients/Clients.jsx"],"names":["useTableInfo","name","getData","resetData","searchResetAction","useEffect","changePage","useCallback","newPage","page","ActiveClients","getUsersOrdersAction","useSelector","store","tables","useState","expanded","setExpanded","columns","title","dataIndex","key","render","data","Date","toLocaleDateString","a","b","onClick","id","keyIndex","indexOf","status","newExpanded","splice","setExpandedKeys","style","cursor","color","columDrop","promo","connect","list","isFetching","pages","ordersLoading","users","getUsersOrders","getTableDataAction","getTableData","getTableDataResetAction","getTableDataReset","searchReset","forEach","item","fullName","firstName","lastName","pathname","CUSTOMERS","loading","dataSource","expandedRowKeys","pagination","expandIcon","expandedRowRender","userOrders","row","onChange","current","total"],"mappings":"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","file":"static/js/16.f985dddc.chunk.js","sourcesContent":["import { useEffect, useCallback } from 'react';\n\n\nexport default function useTableInfo(name, getData, resetData, searchResetAction) {\n  useEffect(() => {\n    getData({ name });\n    return () => {\n      resetData({ name });\n      searchResetAction();\n    };\n  }, [getData, name, resetData, searchResetAction]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      getData({ name, page: newPage });\n    },\n    [getData, name],\n  );\n  // return func\n  return { changePage };\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function ActiveClients(getUsersOrdersAction) {\n  const page = useSelector((store) => store.tables.page);\n  const [expanded, setExpanded] = useState([]);\n  useEffect(() => setExpanded([]), [page]);\n  function setExpandedKeys(id, key) {\n    const keyIndex = expanded.indexOf(key);\n    if (keyIndex === -1) {\n      setExpanded([...expanded, key]);\n      getUsersOrdersAction({ id, status: 'completed' });\n    } else {\n      const newExpanded = [...expanded];\n      newExpanded.splice(keyIndex, 1);\n      setExpanded(newExpanded);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: '1',\n    },\n    {\n      title: 'Գրանցման ամսաթիվ',\n      dataIndex: 'createdAt',\n      key: '2',\n      render: (data) => `${new Date(data).toLocaleDateString('en-US')}`,\n    },\n    {\n      title: 'Անուն Ազգանուն',\n      dataIndex: 'fullName',\n      key: '3',\n    },\n    {\n      title: 'էլ-հասցե',\n      dataIndex: 'email',\n      key: '4',\n    },\n\n    {\n      title: 'Հեռախոս',\n      dataIndex: 'phone',\n      key: '6',\n    },\n    {\n      title: 'Բալ %',\n      dataIndex: 'bonusPercent',\n      key: '7',\n    },\n    {\n      title: 'Բալ',\n      dataIndex: 'bonus',\n      key: '8',\n    },\n    {\n      title: 'Գնման թիվ',\n      dataIndex: 'boughtSum',\n      key: '9',\n    },\n    {\n      title: 'History',\n      dataIndex: 'history',\n      key: '10',\n      render: (a, b) => (<span onClick={() => setExpandedKeys(b.id, b.key)}><span style={{ cursor: 'pointer', color: '#40a9ff' }}>history</span></span>),\n    },\n  ];\n  return { columns, expanded };\n}\n","const columDrop = [\n  {\n    title: 'Պրոմո կոդ',\n    dataIndex: 'promoCode',\n    render: (promo) => promo || '-',\n    key: '1',\n  },\n  {\n    title: 'Կուտակված բալ',\n    dataIndex: 'bonus',\n    key: '2',\n  },\n  {\n    title: 'Առաքման հասցե',\n    dataIndex: 'deliveryAddress',\n    key: '3',\n  },\n  {\n    title: 'արժեք',\n    dataIndex: 'totalWithPromo',\n    key: '4',\n  },\n  {\n    title: 'Ժամանակահատված',\n    dataIndex: 'deliveryTime',\n    key: '5',\n  },\n  {\n    title: 'Պատվերի ժամ',\n    dataIndex: 'createdAt',\n    render: (data) => `${new Date(data).toLocaleDateString('en-US')}`,\n    key: '6',\n  },\n];\n\n// eslint-disable-next-line import/prefer-default-export\nexport { columDrop };\n","import React from 'react';\nimport { Table, Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ActiveClients from './ActiveClients';\nimport pathname from '../../constants';\nimport { getUsersOrders } from '../../store/users/action';\nimport { columDrop } from './constants';\nimport useTableInfo from '../../hooks/useTableInfo';\nimport { getTableData, getTableDataReset } from '../../store/tables/action';\nimport { searchReset } from '../../store/search/action';\n\n\nfunction CurrentOrder({\n  list,\n  page,\n  pages,\n  isFetching,\n  getUsersOrdersAction,\n  ordersLoading,\n  getTableDataAction,\n  getTableDataResetAction,\n  searchResetAction,\n}) {\n  list.forEach((item) => {\n    // eslint-disable-next-line no-param-reassign\n    item.fullName = `${item.firstName} ${item.lastName}`;\n  });\n  const { columns, expanded } = ActiveClients(getUsersOrdersAction);\n\n\n  const { changePage } = useTableInfo(\n    pathname.CUSTOMERS,\n    getTableDataAction,\n    getTableDataResetAction,\n    searchResetAction,\n  );\n\n  return (\n    <div>\n      <Table\n        columns={columns}\n        loading={isFetching}\n        dataSource={list}\n        expandedRowKeys={expanded}\n        pagination={false}\n        expandIcon={() => null}\n        expandedRowRender={(data) => {\n          if (ordersLoading[data.id]) return 'loading';\n          if (!data.userOrders) return 'error';\n          data.userOrders.forEach((row) => {\n            row.key = `${row.id} order`;\n          });\n          return (\n            <Table columns={columDrop} dataSource={data.userOrders} pagination={false} />\n          );\n        }}\n      />\n      <Pagination onChange={changePage} current={page} total={pages * 10} />\n    </div>\n  );\n}\n\nconst mapStateToProps = ({\n  tables: {\n    list,\n    isFetching,\n    pages,\n    page,\n  },\n  users: {\n    ordersLoading,\n  },\n\n}) => ({\n  list,\n  isFetching,\n  ordersLoading,\n  pages,\n  page,\n});\n\nCurrentOrder.propTypes = {\n  list: PropTypes.arrayOf(Array).isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  pages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  ordersLoading: PropTypes.objectOf(Object).isRequired,\n  getUsersOrdersAction: PropTypes.func.isRequired,\n  getTableDataAction: PropTypes.func.isRequired,\n  getTableDataResetAction: PropTypes.func.isRequired,\n  searchResetAction: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, {\n  getUsersOrdersAction: getUsersOrders,\n  getTableDataAction: getTableData,\n  getTableDataResetAction: getTableDataReset,\n  searchResetAction: searchReset,\n})(CurrentOrder);\n"],"sourceRoot":""}