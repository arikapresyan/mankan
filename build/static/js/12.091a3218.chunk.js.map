{"version":3,"sources":["pages/delivery-time/constants.js","pages/delivery-time/components/delivery-time-picker/DeliveryTimePicker.jsx","pages/delivery-time/components/weekdays-box/WeekdaysBox.jsx","pages/delivery-time/DeliveryTime.jsx"],"names":["options","label","value","memo","values","setValues","handleChange","useCallback","index","val","str","newValues","className","moment","undefined","format","onChange","Group","valArr","DeliveryTime","useSelector","state","deliveryTime","data","postStatus","error","dispatch","useDispatch","useState","timeValues","setTimeValues","weekValues","setWeekValues","useEffect","getWeekTime","resetWeekTime","time","week","handleClick","sendingData","postWeekTime","style","color","type","onClick","loading"],"mappings":"6PACaA,EAAU,CACrB,CAAEC,MAAO,+DAAcC,MAAO,GAC9B,CAAED,MAAO,yDAAaC,MAAO,GAC7B,CAAED,MAAO,+DAAcC,MAAO,GAC9B,CAAED,MAAO,yDAAaC,MAAO,GAC7B,CAAED,MAAO,uCAAUC,MAAO,GAC1B,CAAED,MAAO,iCAASC,MAAO,GACzB,CAAED,MAAO,uCAAUC,MAAO,ICsCbC,sBAxCf,YAAoD,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAC9BC,EAAeC,uBAAY,SAACC,GAAD,OAAW,SAACC,EAAKC,GAE9C,IAAMC,EAAS,YAAOP,GACtBO,EAAUH,GAASE,EACnBL,EAAUM,MACX,CAACP,EAAQC,IAEZ,OACE,yBAAKO,UAAU,cACb,qCACA,uBACEA,UAAU,eACVV,MAAOE,EAAO,GAAGS,IAAOT,EAAO,GDnBjB,cCmB6BU,EAC3CC,ODpBc,QCqBdC,SAAUV,EAAa,KAEzB,qCACA,uBACEM,UAAU,eACVV,MAAOE,EAAO,GAAGS,IAAOT,EAAO,GD1BjB,cC0B6BU,EAC3CC,OD3Bc,QC4BdC,SAAUV,EAAa,KAEzB,qCACA,uBACEM,UAAU,eACVV,MAAOE,EAAO,GAAGS,IAAOT,EAAO,GDjCjB,cCiC6BU,EAC3CC,ODlCc,QCmCdC,SAAUV,EAAa,S,iBCZhBH,sBAlBf,YAA6C,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAC7B,OACE,6BACE,8IACA,sBAAUY,MAAV,CACEjB,QAASA,EACTE,MAAOE,EACPY,SAAU,SAACE,GAAD,OAAYb,EAAUa,U,OCmCzBC,UAvCf,WAAyB,IAAD,EACcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBAAzDC,EADc,EACdA,KAAMC,EADQ,EACRA,WAAYC,EADJ,EACIA,MACpBC,EAAWC,cAFK,EAGcC,mBAAS,IAHvB,mBAGfC,EAHe,KAGHC,EAHG,OAIcF,mBAAS,IAJvB,mBAIfG,EAJe,KAIHC,EAJG,KAMtBC,qBAAU,WAER,OADAP,EAASQ,eACF,kBAAMR,EAASS,kBACrB,CAACT,IAEJO,qBAAU,WACJV,IACFO,EAAcP,EAAKa,MACnBJ,EAAcT,EAAKc,SAEpB,CAACd,IAEJ,IAAMe,EAAc/B,uBAAY,WAC9B,IAAMgC,EAAc,CAAEH,KAAMP,EAAYQ,KAAMN,GAC9CL,EAASc,YAAa,CAAEjB,KAAMgB,OAC7B,CAACb,EAAUG,EAAYE,IAC1B,OAAON,EAAQ,wBAAIgB,MAAO,CAAEC,MAAO,QAApB,wBAEX,yBAAK9B,UAAU,YACb,kBAAC,EAAD,CAAoBR,OAAQyB,EAAYxB,UAAWyB,IACnD,kBAAC,EAAD,CAAa1B,OAAQ2B,EAAY1B,UAAW2B,IAC5C,uBACEW,KAAK,UACLC,QAASN,EACTO,QAASrB,EAAWqB,SAHtB,QAOCrB,EAAWC,OAAS,uBAAGgB,MAAO,CAAEC,MAAO,QAAnB","file":"static/js/12.091a3218.chunk.js","sourcesContent":["export const format = 'HH:mm';\nexport const options = [\n  { label: 'Երկուշաբթի', value: 1 },\n  { label: 'Երեքշաբթի', value: 2 },\n  { label: 'Չորեքշաբթի', value: 3 },\n  { label: 'Հինգշաբթի', value: 4 },\n  { label: 'Ուրբաթ', value: 5 },\n  { label: 'Շաբաթ', value: 6 },\n  { label: 'Կիրակի', value: 7 },\n];\n","import React, { memo, useCallback } from 'react';\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { format } from '../../constants';\n\nfunction DeliveryTimePicker({ values, setValues }) {\n  const handleChange = useCallback((index) => (val, str) => {\n\n      const newValues = [...values];\n      newValues[index] = str;\n      setValues(newValues);\n  }, [values, setValues]);\n\n  return (\n    <div className=\"timePicker\">\n      <span> A </span>\n      <TimePicker\n        className=\"deliveryTime\"\n        value={values[0]?moment(values[0], format):undefined}\n        format={format}\n        onChange={handleChange(0)}\n      />\n      <span> B </span>\n      <TimePicker\n        className=\"deliveryTime\"\n        value={values[1]?moment(values[1], format):undefined}\n        format={format}\n        onChange={handleChange(1)}\n      />\n      <span> C </span>\n      <TimePicker\n        className=\"deliveryTime\"\n        value={values[2]?moment(values[2], format):undefined}\n        format={format}\n        onChange={handleChange(2)}\n      />\n    </div>\n  );\n}\n\nDeliveryTimePicker.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setValues: PropTypes.func.isRequired,\n};\n\nexport default memo(DeliveryTimePicker);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'antd';\nimport { options } from '../../constants';\n\nfunction WeekdaysBox({ values, setValues }) {\n  return (\n    <div>\n      <h3>Ոչ աշխատանքային օրեր</h3>\n      <Checkbox.Group\n        options={options}\n        value={values}\n        onChange={(valArr) => setValues(valArr)}\n      />\n    </div>\n  );\n}\n\nWeekdaysBox.propTypes = {\n  values: PropTypes.arrayOf(PropTypes.number).isRequired,\n  setValues: PropTypes.func.isRequired,\n};\n\nexport default memo(WeekdaysBox);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { resetWeekTime, getWeekTime, postWeekTime } from '../../store/delivery-time/action';\nimport DeliveryTimePicker from './components/delivery-time-picker/DeliveryTimePicker';\nimport WeekdaysBox from './components/weekdays-box/WeekdaysBox';\nimport './delivery.less';\n\nfunction DeliveryTime() {\n  const { data, postStatus, error } = useSelector((state) => state.deliveryTime);\n  const dispatch = useDispatch();\n  const [timeValues, setTimeValues] = useState([]);\n  const [weekValues, setWeekValues] = useState([]);\n\n  useEffect(() => {\n    dispatch(getWeekTime());\n    return () => dispatch(resetWeekTime());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (data) {\n      setTimeValues(data.time);\n      setWeekValues(data.week);\n    }\n  }, [data]);\n\n  const handleClick = useCallback(() => {\n    const sendingData = { time: timeValues, week: weekValues };\n    dispatch(postWeekTime({ data: sendingData }));\n  }, [dispatch, timeValues, weekValues]);\n  return error ? <h3 style={{ color: 'red' }}>Something went wrong</h3>\n    : (\n      <div className=\"delivery\">\n        <DeliveryTimePicker values={timeValues} setValues={setTimeValues} />\n        <WeekdaysBox values={weekValues} setValues={setWeekValues} />\n        <Button\n          type=\"primary\"\n          onClick={handleClick}\n          loading={postStatus.loading}\n        >\n          Save\n        </Button>\n        {postStatus.error && <p style={{ color: 'red' }}>Something went wrong</p>}\n      </div>\n    );\n}\n\nexport default DeliveryTime;\n"],"sourceRoot":""}