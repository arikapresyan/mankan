{"version":3,"sources":["hooks/useTableInfo.js","pages/usage/constants.js","pages/job/components/job-form/JobForm.jsx","pages/job/components/JobTable.jsx","pages/job/Job.jsx"],"names":["useTableInfo","name","getData","resetData","searchResetAction","useEffect","changePage","useCallback","newPage","page","usageSchema","Yup","shape","armName","required","armDesc","imgList","vacancySchema","armShort","TabPane","pathname","JOB","JobForm","setShowModal","edit","editMode","dispatch","useDispatch","initialValues","useMemo","data","image","langs","uid","type","status","url","process","thumbUrl","title","engName","ruName","description","engDesc","ruDesc","shortDesc","engShort","ruShort","useFormik","onSubmit","values","formData","FormData","append","originFileObj","names","lang","JSON","stringify","id","editData","createData","validationSchema","errors","touched","handleBlur","handleSubmit","handleChange","setFieldValue","handleEditorChange","fieldName","event","editor","Item","validateStatus","help","onChange","info","file","fileList","message","error","success","listType","defaultActiveKey","className","tab","key","placeholder","value","onBlur","htmlType","JobTable","dataSource","loading","useState","showModal","showCreateModal","setShowCreateModal","checkedRows","setCheckedRows","selectedIds","setSelectedIds","confirm","showDeleteConfirm","ids","content","length","okText","okType","cancelText","onOk","deleteData","onCancel","rowSelection","selectedRowKeys","selectedRows","selected","map","row","getCheckboxProps","record","disabled","columns","dataIndex","render","_","onClick","editFetchingAction","pagination","visible","afterClose","editFetchingResetAction","destroyOnClose","footer","connect","tables","list","isFetching","pages","getTableDataAction","getTableData","getTableDataResetAction","getTableDataReset","editFetching","editFetchingReset","editDataAction","searchReset","current","total"],"mappings":"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","file":"static/js/7.6bb5f1c1.chunk.js","sourcesContent":["import { useEffect, useCallback } from 'react';\n\n\nexport default function useTableInfo(name, getData, resetData, searchResetAction) {\n  useEffect(() => {\n    getData({ name });\n    return () => {\n      resetData({ name });\n      searchResetAction();\n    };\n  }, [getData, name, resetData, searchResetAction]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      getData({ name, page: newPage });\n    },\n    [getData, name],\n  );\n  // return func\n  return { changePage };\n}\n","import * as Yup from 'yup';\n\nexport const usageSchema = Yup.object().shape({\n  armName: Yup.string().required('Armenian is required'),\n  armDesc: Yup.string().required('Armenian description is required'),\n  imgList: Yup.array().required('Please upload an image'),\n});\n\nexport const vacancySchema = Yup.object().shape({\n  armName: Yup.string().required('Armenian is required'),\n  armDesc: Yup.string().required('Armenian description is required'),\n  armShort: Yup.string().required('Armenian short description is required'),\n  imgList: Yup.array().required('Please upload an image'),\n});\n","import React, { useMemo } from 'react';\nimport {\n  Input, Tabs, Button, Form, message,\n} from 'antd';\nimport { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { vacancySchema } from '../../../usage/constants';\nimport { CKEditor, ImageUpload } from '../../../../components';\nimport { createData, editData } from '../../../../store/edit/action';\nimport pathname from '../../../../constants';\n\nconst { TabPane } = Tabs;\nconst name = pathname.JOB;\n\nfunction JobForm({ setShowModal, edit = {}, editMode = false }) {\n  const dispatch = useDispatch();\n\n  const initialValues = useMemo(() => {\n    if (editMode) {\n      const { image, langs } = edit.data;\n      return {\n        imgList: [{\n          uid: '-1',\n          name: image,\n          type: 'image/jpeg',\n          status: 'done',\n          url: `${process.env.REACT_APP_HOST_NAME}/vocationImages/${image}`,\n          thumbUrl: `${process.env.REACT_APP_HOST_NAME}/vocationImages/${image}`,\n        }],\n        armName: langs[0].title,\n        engName: langs[1].title,\n        ruName: langs[2].title,\n        armDesc: langs[0].description,\n        engDesc: langs[1].description,\n        ruDesc: langs[2].description,\n        armShort: langs[0].shortDesc || '',\n        engShort: langs[1].shortDesc || '',\n        ruShort: langs[2].shortDesc || '',\n      };\n    }\n    return {\n      imgList: [],\n      armName: '',\n      ruName: '',\n      engName: '',\n      armDesc: '',\n      ruDesc: '',\n      engDesc: '',\n      armShort: '',\n      engShort: '',\n      ruShort: '',\n    };\n  },\n  // eslint-disable-next-line\n    [editMode, edit.data]);\n  const onSubmit = (values) => {\n    const formData = new FormData();\n    if (values.imgList[0].uid !== '-1') {\n      formData.append('image', values.imgList[0].originFileObj);\n    }\n    const names = [{\n      title: values.armName,\n      lang: 'ARM',\n      description: values.armDesc,\n      shortDesc: values.armShort,\n    }, {\n      title: values.engName,\n      lang: 'ENG',\n      description: values.engDesc,\n      shortDesc: values.engShort,\n    }, {\n      title: values.ruName,\n      lang: 'RU',\n      description: values.ruDesc,\n      shortDesc: values.ruShort,\n    }];\n    formData.append('names', JSON.stringify(names));\n    if (!editMode) dispatch(createData({ name, data: formData }));\n    else {\n      const { id } = edit.data;\n      dispatch(editData({ name, data: formData, id }));\n    }\n    setShowModal(false);\n  };\n\n  const {\n    values, errors, touched, handleBlur,\n    handleSubmit, handleChange, setFieldValue,\n  } = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema: vacancySchema,\n  });\n\n  const handleUploadChange = (info) => {\n    const isJpgOrPng = info.file.type === 'image/jpeg' || info.file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    } else setFieldValue('imgList', [...info.fileList]);\n    if (info.file.status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n      setFieldValue('imgList', []);\n    }\n  };\n  const handleEditorChange = (fieldName) => (event, editor) => {\n    const data = editor.getData();\n    setFieldValue(fieldName, data);\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Item\n        validateStatus={errors.imgList && 'error'}\n        help={errors.imgList}\n      >\n        <ImageUpload\n          onChange={handleUploadChange}\n          listType=\"picture\"\n          name=\"imgList\"\n          fileList={values.imgList}\n        />\n      </Form.Item>\n      <Tabs defaultActiveKey=\"1\" className=\"modalTab\">\n        <TabPane tab=\"Arm /\" key=\"1\">\n          <div>\n            <Form.Item\n              validateStatus={touched.armName && errors.armName && 'error'}\n              help={touched.armName && errors.armName}\n            >\n              <Input\n                placeholder=\"title\"\n                name=\"armName\"\n                value={values.armName}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </Form.Item>\n            <Form.Item\n              validateStatus={touched.armShort && errors.armShort && 'error'}\n              help={touched.armShort && errors.armShort}\n            >\n              <Input\n                placeholder=\"Short Description\"\n                name=\"armShort\"\n                value={values.armShort}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </Form.Item>\n            <h3>Description</h3>\n            <Form.Item\n              validateStatus={touched.armDesc && errors.armDesc && 'error'}\n              help={touched.armDesc && errors.armDesc}\n            >\n              <CKEditor\n                name=\"armDesc\"\n                onChange={handleEditorChange('armDesc')}\n                data={values.armDesc}\n              />\n            </Form.Item>\n          </div>\n        </TabPane>\n        <TabPane tab=\"Ru /\" key=\"2\">\n          <div>\n            <Form.Item\n              validateStatus={touched.armName && errors.armName && 'error'}\n              help={touched.armName && errors.armName}\n            >\n              <Input\n                placeholder=\"title\"\n                name=\"ruName\"\n                value={values.ruName}\n                onChange={handleChange}\n              />\n            </Form.Item>\n            <Form.Item\n              validateStatus={touched.armShort && errors.armShort && 'error'}\n              help={touched.armShort && errors.armShort}\n            >\n              <Input\n                placeholder=\"Short Description\"\n                name=\"ruShort\"\n                value={values.ruShort}\n                onChange={handleChange}\n              />\n            </Form.Item>\n            <h3>Description</h3>\n            <Form.Item\n              validateStatus={touched.armDesc && errors.armDesc && 'error'}\n              help={touched.armDesc && errors.armDesc}\n            >\n              <CKEditor\n                onChange={handleEditorChange('ruDesc')}\n                data={values.ruDesc}\n              />\n            </Form.Item>\n          </div>\n        </TabPane>\n        <TabPane tab=\"Eng\" key=\"3\">\n          <div>\n            <Form.Item\n              validateStatus={touched.armName && errors.armName && 'error'}\n              help={touched.armName && errors.armName}\n            >\n              <Input\n                placeholder=\"title\"\n                name=\"engName\"\n                value={values.engName}\n                onChange={handleChange}\n              />\n            </Form.Item>\n            <Form.Item\n              validateStatus={touched.armShort && errors.armShort && 'error'}\n              help={touched.armShort && errors.armShort}\n            >\n              <Input\n                placeholder=\"Short Description\"\n                name=\"engShort\"\n                value={values.engShort}\n                onChange={handleChange}\n              />\n            </Form.Item>\n            <h3>Description</h3>\n            <Form.Item\n              validateStatus={touched.armDesc && errors.armDesc && 'error'}\n              help={touched.armDesc && errors.armDesc}\n            >\n              <CKEditor\n                onChange={handleEditorChange('engDesc')}\n                data={values.engDesc}\n              />\n            </Form.Item>\n          </div>\n        </TabPane>\n      </Tabs>\n      <Form.Item>\n        <Button className=\"jobCreate\" key=\"submit\" type=\"primary\" htmlType=\"submit\">\n          {!editMode ? 'Create' : 'Save'}\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nJobForm.propTypes = {\n  setShowModal: PropTypes.func.isRequired,\n  edit: PropTypes.objectOf(Object),\n  editMode: PropTypes.bool,\n};\n\nexport default JobForm;\n","import React, { useEffect, useState } from 'react';\nimport { Icon, Button, Modal } from 'antd';\nimport '../job.less';\nimport { useDispatch } from 'react-redux';\nimport { Table } from '../../../components';\nimport { deleteData } from '../../../store/edit/action';\nimport pathname from '../../../constants';\nimport JobForm from './job-form/JobForm';\n\n\nexport default function JobTable({ dataSource, loading, edit }) {\n  const [showModal, setShowModal] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [checkedRows, setCheckedRows] = useState([]);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const dispatch = useDispatch();\n  const { confirm } = Modal;\n\n  useEffect(() => {\n    setSelectedIds([]);\n    setCheckedRows([]);\n  }, [dataSource, setCheckedRows, setSelectedIds]);\n\n  const showDeleteConfirm = (ids) => confirm({\n    content: `Are you sure to delete ${ids.length === 1 ? 'this vacancy?' : 'these vacancies'}`,\n    okText: 'Yes',\n    okType: 'primary',\n    cancelText: 'No',\n    className: 'confirm-mod',\n    onOk() {\n      dispatch(deleteData({ name: pathname.JOB, ids }));\n    },\n    onCancel() {\n    },\n  });\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      const selected = selectedRows.map((row) => row.id);\n      setSelectedIds(selected);\n      setCheckedRows(selectedRowKeys);\n    },\n    getCheckboxProps: (record) => ({\n      disabled: record.name === 'Disabled User', // Column configuration not to be checked\n      name: record.name,\n    }),\n    selectedRowKeys: checkedRows,\n  };\n\n  const columns = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      render: (_, data) => (data.langs && data.langs.length) && data.langs[0].title,\n    },\n    {\n      title: 'Short Description',\n      dataIndex: 'shortDesc',\n      render: (_, data) => (data.langs && data.langs.length) && data.langs[0].shortDesc,\n    },\n    {\n      title: 'Edit',\n      dataIndex: 'edit',\n      render: (_, { id }) => (\n        <Icon\n          onClick={() => {\n            edit.editFetchingAction({ name: pathname.JOB, id });\n            setShowModal(true);\n          }}\n          type=\"edit\"\n        />\n      ),\n    },\n    {\n      title: 'Delete',\n      dataIndex: 'id',\n      render: (id) => (\n        <Icon\n          onClick={() => showDeleteConfirm([id])}\n          type=\"delete\"\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Button className=\"btn\" type=\"primary\" onClick={() => setShowCreateModal(true)}>Create</Button>\n      <Button className=\"btn\" type=\"primary\" disabled={!selectedIds.length} onClick={() => showDeleteConfirm(selectedIds)}>Delete</Button>\n      <Table\n        rowSelection={rowSelection}\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        loading={loading}\n      />\n      <Modal\n        title=\"Edit\"\n        visible={showModal}\n        onCancel={() => setShowModal(false)}\n        afterClose={edit.editFetchingResetAction}\n        destroyOnClose\n        footer={null}\n      >\n        {!edit.data ? '...Loading' : (\n          <JobForm edit={edit} setShowModal={setShowModal} editMode />\n        )}\n      </Modal>\n      <Modal\n        title=\"Create\"\n        visible={showCreateModal}\n        onCancel={() => setShowCreateModal(false)}\n        destroyOnClose\n        footer={null}\n      >\n        <JobForm setShowModal={setShowCreateModal} />\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Pagination } from 'antd';\nimport JobTable from './components/JobTable';\nimport { getTableData, getTableDataReset } from '../../store/tables/action';\nimport { editData, editFetching, editFetchingReset } from '../../store/edit/action';\nimport useTableInfo from '../../hooks/useTableInfo';\nimport pathname from '../../constants';\nimport { searchReset } from '../../store/search/action';\n\n\nfunction Job({\n  list,\n  page,\n  pages,\n  isFetching,\n  getTableDataAction,\n  getTableDataResetAction,\n  edit,\n  editFetchingAction,\n  editFetchingResetAction,\n  editDataAction,\n  searchResetAction,\n}) {\n  const { changePage } = useTableInfo(\n    pathname.JOB,\n    getTableDataAction,\n    getTableDataResetAction,\n    searchResetAction,\n  );\n  return (\n    <div>\n      <JobTable\n        dataSource={list}\n        loading={isFetching}\n        edit={{\n          ...edit, editFetchingAction, editFetchingResetAction, editDataAction,\n        }}\n      />\n      <Pagination onChange={changePage} current={page} total={pages * 10} />\n    </div>\n  );\n}\n\n\nJob.propTypes = {\n  list: PropTypes.arrayOf(Array).isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  getTableDataResetAction: PropTypes.func.isRequired,\n  getTableDataAction: PropTypes.func.isRequired,\n  pages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  edit: PropTypes.objectOf(Object).isRequired,\n  editFetchingAction: PropTypes.func.isRequired,\n  editFetchingResetAction: PropTypes.func.isRequired,\n  editDataAction: PropTypes.func.isRequired,\n  searchResetAction: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  tables: {\n    list,\n    isFetching,\n    pages,\n    page,\n  },\n  edit,\n}) => ({\n  list,\n  isFetching,\n  pages,\n  page,\n  edit,\n});\nexport default connect(mapStateToProps, {\n  getTableDataAction: getTableData,\n  getTableDataResetAction: getTableDataReset,\n  editFetchingAction: editFetching,\n  editFetchingResetAction: editFetchingReset,\n  editDataAction: editData,\n  searchResetAction: searchReset,\n})(Job);\n"],"sourceRoot":""}