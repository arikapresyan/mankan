{"version":3,"sources":["hooks/useTableInfo.js","pages/promoCode/components/promo.module.less","pages/promoCode/constants.js","pages/promoCode/components/create-promo-form/CreatePromoForm.jsx","pages/promoCode/components/edit-promo-form/EditPromoForm.jsx","pages/promoCode/components/PromoComp.jsx","pages/promoCode/PromoCode.jsx"],"names":["useTableInfo","name","getData","resetData","searchResetAction","useEffect","changePage","useCallback","newPage","page","module","exports","schema","Yup","shape","count","typeError","integer","min","max","required","percent","validTill","SchemaEdit","isUsed","isRequired","CreatePromoForm","setShowCreateModal","dispatch","useDispatch","useFormik","initialValues","onSubmit","values","format","createPromoCodes","validationSchema","errors","touched","handleChange","handleSubmit","setFieldValue","Item","validateStatus","help","label","placeholder","type","onChange","value","date","disabledDate","current","moment","endOf","htmlType","onClick","EditPromoCode","editedData","setShowModal","id","editPromoCode","params","checked","style","marginLeft","PromoComp","dataSource","loading","useState","showModal","checkedRows","setCheckedRows","selectedIds","setSelectedIds","setEditedData","showCreateModal","confirm","showDeleteConfirm","ids","content","length","okText","okType","cancelText","className","onOk","deletePromoCodes","onCancel","columns","useMemo","title","dataIndex","key","render","createdAt","FORMAT","expired","border","padding","marginRight","theme","twoToneColor","display","dateOfUse","_","data","column","rowSelection","selectedRowKeys","selectedRows","map","row","getCheckboxProps","record","disabled","selection","classPromo","promoCode","visible","destroyOnClose","footer","pagination","afterClose","defaultProps","connect","tables","list","isFetching","pages","getTableDataAction","getTableData","getTableDataResetAction","getTableDataReset","searchReset","pathname","PROMO_CODE","total"],"mappings":"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","file":"static/js/10.9f34add5.chunk.js","sourcesContent":["import { useEffect, useCallback } from 'react';\n\n\nexport default function useTableInfo(name, getData, resetData, searchResetAction) {\n  useEffect(() => {\n    getData({ name });\n    return () => {\n      resetData({ name });\n      searchResetAction();\n    };\n  }, [getData, name, resetData, searchResetAction]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      getData({ name, page: newPage });\n    },\n    [getData, name],\n  );\n  // return func\n  return { changePage };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"promoCode\":\"promoCode--1FPF9\"};","import * as Yup from 'yup';\nimport moment from 'moment';\nimport { Icon } from 'antd';\nimport React from 'react';\nimport { FORMAT } from '../../constants';\n\nconst schema = Yup.object().shape({\n  count: Yup.number()\n    .typeError('Enter number')\n    .integer('Enter integer')\n    .min(1, 'min count: 1')\n    .max(30, 'max count 30')\n    .required('Required'),\n  percent: Yup.number()\n    .typeError('Enter number')\n    .integer('Input integer')\n    .min(1, 'min percent: 0')\n    .max(100, 'max percent: 100')\n    .required('Required'),\n  validTill: Yup.date()\n    .required('Required')\n    .typeError('Enter valid date'),\n});\n\nconst SchemaEdit = Yup.object().shape({\n  percent: Yup.number()\n    .typeError('Enter number')\n    .integer('Enter integer')\n    .min(1, 'min percent: 0')\n    .max(100, 'max percent: 100')\n    .required('Required'),\n  validTill: Yup.date()\n    .required('Required')\n    .typeError('Enter valid date'),\n  isUsed: Yup.bool().isRequired,\n});\n\nconst rowSelection = (setSelectedIds, checkedRows, setCheckedRows) => ({\n  onChange: (selectedRowKeys, selectedRows) => {\n    const selectedIds = selectedRows.map((row) => row.id);\n    setSelectedIds(selectedIds);\n    setCheckedRows(selectedRowKeys);\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\n    name: record.name,\n  }),\n  selectedRowKeys: checkedRows,\n});\n\nconst columns = ({ setEditedData, setShowModal, showDeleteConfirm }) => ([\n  {\n    title: 'Կոդ',\n    dataIndex: 'code',\n    key: 'code',\n  },\n  {\n    title: 'Ստեղծման ամս․',\n    dataIndex: 'createdAt',\n    render(createdAt) {\n      return moment(createdAt).format(FORMAT);\n    },\n    key: 'created date',\n  },\n  {\n    title: 'Վավեր է մինչև',\n    dataIndex: 'validTill',\n    render(validTill, { expired }) {\n      const date = moment(validTill).format(FORMAT);\n      if (!expired) return <span>{date}</span>;\n      return <span style={{ border: '1px solid #40a9ff', padding: '4px' }}>{date}</span>;\n    },\n    key: 'validTill',\n  },\n  {\n    title: 'Ստատուս',\n    dataIndex: 'isUsed',\n    render(isUsed) {\n      return isUsed ? (\n        <>\n          <Icon style={{ marginRight: '5px' }} type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\n          <p style={{ display: 'inline' }}> Օգտ․ է</p>\n        </>\n      ) : <p style={{ display: 'inline' }}> Օգտ․ չէ</p>;\n    },\n    key: 'status',\n  },\n  {\n    title: 'Օգտագործվել է',\n    dataIndex: 'dateOfUse',\n    render(dateOfUse) {\n      return dateOfUse ? moment(dateOfUse).format(FORMAT) : '-';\n    },\n    key: 'date of use',\n  },\n\n  {\n    title: '%',\n    dataIndex: 'percent',\n    key: 'percent',\n  },\n  {\n    title: 'Փոփոխել',\n    dataIndex: 'edit',\n    render(_, data) {\n      if (!data.isUsed) {\n        return (\n          <Icon\n            onClick={() => {\n              setEditedData(data);\n              setShowModal(true);\n            }}\n            type=\"edit\"\n          />\n        );\n      } return <Icon type=\"stop\" />;\n    },\n    key: 'edit',\n  },\n  {\n    title: 'Ջնջել',\n    dataIndex: 'id',\n    render(id) {\n      return (\n        <Icon\n          type=\"delete\"\n          onClick={() => showDeleteConfirm([id])}\n        />\n      );\n    },\n    key: 'delete',\n  },\n]);\n\nexport {\n  schema, SchemaEdit, rowSelection, columns,\n};\n","import React from 'react';\nimport {\n  DatePicker, Input, Button, Form,\n} from 'antd';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { schema } from '../../constants';\nimport { createPromoCodes } from '../../../../store/promo-codes/action';\n\nfunction CreatePromoForm({ setShowCreateModal }) {\n  const dispatch = useDispatch();\n  const {\n    errors,\n    touched,\n    handleChange,\n    values,\n    handleSubmit,\n    setFieldValue,\n  } = useFormik({\n    initialValues: {\n      count: '',\n      percent: '',\n      validTill: null,\n    },\n    onSubmit: () => {\n      const { count, percent } = values;\n      const validTill = values.validTill.format();\n      dispatch(createPromoCodes({ count, validTill, percent }));\n      setShowCreateModal(false);\n    },\n    validationSchema: schema,\n  });\n\n  const disabledDate = (current) => current && current < moment().endOf('day');\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Item\n        validateStatus={touched.count && errors.count && 'error'}\n        help={touched.count && errors.count}\n        label=\"Քանակ\"\n      >\n        <Input\n          placeholder=\"count\"\n          name=\"count\"\n          type=\"text\"\n          onChange={handleChange}\n          value={values.count}\n        />\n      </Form.Item>\n      <Form.Item\n        validateStatus={touched.percent && errors.percent && 'error'}\n        help={touched.percent && errors.percent}\n        label=\"Զեղչ %\"\n      >\n        <Input\n          placeholder=\"percent\"\n          name=\"percent\"\n          type=\"text\"\n          onChange={handleChange}\n          value={values.percent}\n        />\n      </Form.Item>\n      <Form.Item\n        validateStatus={touched.validTill && errors.validTill && 'error'}\n        help={touched.validTill && errors.validTill}\n        label=\"Վավեր է մինչև\"\n      >\n        <DatePicker\n          name=\"validTill\"\n          onChange={(date) => {\n            setFieldValue('validTill', date);\n          }}\n          value={values.validTill}\n          format=\"DD-MM-YYYY\"\n          disabledDate={disabledDate}\n        />\n        <Button type=\"primary\" htmlType=\"submit\">Create</Button>\n        <Button onClick={() => setShowCreateModal(false)}>Cancel</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nCreatePromoForm.propTypes = {\n  setShowCreateModal: PropTypes.func.isRequired,\n};\n\nexport default CreatePromoForm;\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport moment from 'moment';\nimport {\n  Button, DatePicker, Form, Input, Checkbox,\n} from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SchemaEdit } from '../../constants';\nimport { editPromoCode } from '../../../../store/promo-codes/action';\n\nfunction EditPromoCode({ editedData, setShowModal }) {\n  const { id } = editedData;\n  const dispatch = useDispatch();\n  const disabledDate = (current) => current && current < moment().endOf('day');\n\n  const {\n    errors,\n    touched,\n    handleChange,\n    values,\n    handleSubmit,\n    setFieldValue,\n  } = useFormik({\n    initialValues: {\n      isUsed: false,\n      percent: editedData.percent,\n      validTill: moment(editedData.validTill),\n    },\n    onSubmit: () => {\n      const { isUsed, percent } = values;\n      const validTill = values.validTill.format();\n      dispatch(editPromoCode({\n        params: {\n          id, isUsed, validTill, percent,\n        },\n      }));\n      setShowModal(false);\n    },\n    validationSchema: SchemaEdit,\n  });\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Item\n        validateStatus={touched.isUsed && errors.isUsed && 'error'}\n        help={touched.isUsed && errors.isUsed}\n      >\n        <Checkbox\n          name=\"isUsed\"\n          onChange={handleChange}\n          checked={values.isUsed}\n        >\n          Օգտագործված է\n        </Checkbox>\n      </Form.Item>\n      <Form.Item\n        validateStatus={touched.percent && errors.percent && 'error'}\n        help={touched.percent && errors.percent}\n        label=\"Զեղչ\"\n      >\n        <Input\n          placeholder=\"percent\"\n          name=\"percent\"\n          type=\"text\"\n          onChange={handleChange}\n          value={values.percent}\n        />\n      </Form.Item>\n      <Form.Item\n        validateStatus={touched.validTill && errors.validTill && 'error'}\n        help={touched.validTill && errors.validTill}\n        label=\"Վավեր է մինչև\"\n      >\n        <DatePicker\n          name=\"validTill\"\n          onChange={(date) => {\n            setFieldValue('validTill', date);\n          }}\n          value={values.validTill}\n          format=\"DD-MM-YYYY\"\n          disabledDate={disabledDate}\n        />\n        <Button style={{ marginLeft: '15px' }} type=\"primary\" htmlType=\"submit\">Փոփոխել</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nEditPromoCode.propTypes = {\n  editedData: PropTypes.objectOf(Object).isRequired,\n  setShowModal: PropTypes.func.isRequired,\n};\n\nexport default EditPromoCode;\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { Button, Modal } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport classPromo from './promo.module.less';\nimport { Table } from '../../../components';\nimport CreatePromoForm from './create-promo-form/CreatePromoForm';\nimport { rowSelection as selection, columns as column } from '../constants';\nimport { deletePromoCodes } from '../../../store/promo-codes/action';\nimport EditPromoCode from './edit-promo-form/EditPromoForm';\n\nfunction PromoComp({ dataSource, loading }) {\n  const [showModal, setShowModal] = useState(false);\n  const [checkedRows, setCheckedRows] = useState([]);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [editedData, setEditedData] = useState({});\n  const [showCreateModal, setShowCreateModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const { confirm } = Modal;\n\n  useEffect(() => {\n    setSelectedIds([]);\n    setCheckedRows([]);\n  }, [dataSource, setCheckedRows, setSelectedIds]);\n\n  const showDeleteConfirm = useCallback((ids) => {\n    confirm({\n      // title: 'title',\n      content: `Are you sure to delete ${ids.length === 1 ? 'this promo-code?' : 'these promo-codes'}`,\n      okText: 'Yes',\n      okType: 'primary',\n      cancelText: 'No',\n      className: 'confirm-mod',\n      onOk() {\n        dispatch(deletePromoCodes({ ids }));\n      },\n      onCancel() {\n      },\n    });\n  }, [confirm, dispatch]);\n\n  const columns = useMemo(\n    () => column({ setEditedData, setShowModal, showDeleteConfirm }),\n    [setEditedData, setShowModal, showDeleteConfirm],\n  );\n  const rowSelection = useMemo(\n    () => selection(setSelectedIds, checkedRows, setCheckedRows),\n    [checkedRows],\n  );\n  return (\n    <div>\n      <Modal\n        title=\"Create Promo-codes\"\n        className={classPromo.promoCode}\n        visible={showCreateModal}\n        onCancel={() => setShowCreateModal(false)}\n        destroyOnClose\n        footer={null}\n      >\n        <CreatePromoForm setShowCreateModal={setShowCreateModal} />\n      </Modal>\n      <Button className=\"btn\" type=\"primary\" onClick={() => setShowCreateModal(true)}>Ստեղծել</Button>\n      <Button className=\"btn\" type=\"primary\" disabled={!selectedIds.length} onClick={() => showDeleteConfirm(selectedIds)}>Ջնջել</Button>\n\n\n      <Table\n        rowSelection={rowSelection}\n        columns={columns}\n        dataSource={dataSource}\n        loading={loading}\n        pagination={false}\n      />\n\n      <Modal\n        visible={showModal}\n        destroyOnClose\n        afterClose={() => setEditedData({})}\n        onCancel={() => {\n          setShowModal(false);\n        }}\n        title=\"Edit\"\n        footer={null}\n      >\n        <EditPromoCode editedData={editedData} setShowModal={setShowModal} />\n      </Modal>\n\n    </div>\n  );\n}\n\nPromoComp.propTypes = {\n  dataSource: PropTypes.arrayOf(Array),\n  loading: PropTypes.bool,\n};\nPromoComp.defaultProps = {\n  dataSource: [],\n  loading: false,\n};\n\nexport default PromoComp;\n","import React from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PromoComp from './components/PromoComp';\nimport pathname from '../../constants';\nimport { getTableData, getTableDataReset } from '../../store/tables/action';\nimport useTableInfo from '../../hooks/useTableInfo';\nimport { searchReset } from '../../store/search/action';\n\nfunction Promo({\n  list,\n  page,\n  pages,\n  isFetching,\n  getTableDataAction,\n  getTableDataResetAction,\n  searchResetAction,\n}) {\n  const { changePage } = useTableInfo(\n    pathname.PROMO_CODE,\n    getTableDataAction,\n    getTableDataResetAction,\n    searchResetAction,\n  );\n\n  return (\n    <div>\n      <PromoComp dataSource={list} loading={isFetching} />\n      <Pagination onChange={changePage} current={page} total={pages * 10} />\n    </div>\n  );\n}\n\nPromo.propTypes = {\n  list: PropTypes.arrayOf(Array).isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  getTableDataResetAction: PropTypes.func.isRequired,\n  getTableDataAction: PropTypes.func.isRequired,\n  pages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  searchResetAction: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({\n  tables: {\n    list,\n    isFetching,\n    pages,\n    page,\n  },\n}) => ({\n  list,\n  isFetching,\n  pages,\n  page,\n});\nexport default connect(mapStateToProps, {\n  getTableDataAction: getTableData,\n  getTableDataResetAction: getTableDataReset,\n  searchResetAction: searchReset,\n})(Promo);\n"],"sourceRoot":""}