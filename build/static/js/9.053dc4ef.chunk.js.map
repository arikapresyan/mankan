{"version":3,"sources":["hooks/useTableInfo.js","pages/product/components/edit-form/components/ModalHeader.jsx","pages/product/components/edit-form/components/hooks.js","pages/product/components/edit-form/components/FormHeadingsInLangs.jsx","pages/product/components/edit-form/components/FormCKEditor.jsx","pages/product/components/edit-form/components/FormSizes.jsx","pages/product/components/edit-form/components/upload-images/components/dnd-images/DNDImages.jsx","pages/product/components/edit-form/components/upload-images/useUploadImages.js","pages/product/components/edit-form/components/upload-images/constants.js","pages/product/components/edit-form/components/upload-images/FormUploadImage.jsx","pages/product/components/edit-form/components/FormAge.jsx","pages/product/components/edit-form/components/FormGender.jsx","pages/product/components/edit-form/components/FormBestSeller.jsx","pages/product/components/edit-form/components/select/constants.js","pages/product/components/edit-form/components/select/FormSelect.jsx","pages/product/components/edit-form/constants.js","pages/product/components/edit-form/useEditForm.js","pages/product/components/edit-form/components/FormSingleInput.jsx","pages/product/components/edit-form/components/FormIsNew.jsx","pages/product/components/edit-form/EditForm.jsx","pages/product/Product.jsx"],"names":["useTableInfo","name","getData","resetData","searchResetAction","useEffect","changePage","useCallback","newPage","page","ModalHeader","id","count","price","span","useGetDataFromLang","values","dataKey","useMemo","ru","langs","find","lang","eng","am","ruVal","TabPane","FormName","handleChange","header","newValues","defaultActiveKey","className","style","marginTop","tab","key","defaultValues","placeholder","onChange","FormCKEditor","contents","data","onBlur","FormSizes","handleCheck","addBoxSize","size","boxSize","height","length","width","checked","DNDImages","handleDrop","deleteImage","draggable","imageData","notSaved","index","load","url","useDrag","item","type","collect","monitor","isDragging","drag","useDrop","accept","drop","isOverParent","isOver","parentDrop","marginLeft","background","ref","onDrag","e","stopPropagation","onDragStart","marginBottom","src","alt","disabled","title","onClick","defaultProps","photosOrder","images","setFieldValue","saveProductImagesAction","showMessageAction","productId","useState","imagesListState","setImagesListState","filesList","setFilesList","deletedImages","setDeletedImages","confirmLoading","useSelector","selectChangesImagesLoading","confirmSuccess","selectChangesImagesSuccess","handlePreview","info","file","status","uniqueId","uId","newFiles","originFileObj","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","imageUrl","result","onerror","error","alert","then","cloneImagesList","currentItem","thisIndex","newIndex","newImagesList","spliced","splice","newPhotosOrder","forEach","order","imageIndex","findIndex","fileIndex","newFilesList","noUploadedDeleted","handleSaveImage","text","timer","files","changeInputValueAddId","target","value","clonePhotosOrder","changedItemIndex","itemId","FormUploadImage","uploadProps","actionStatus","useUploadImages","multiple","showUploadList","display","loading","flexWrap","map","pId","newURL","process","FormAge","ages","min","max","FormGender","sex","FormBestSeller","setDefaultValues","Array","isArray","label","Option","FormSelect","props","mode","handleSearch","handleSelect","list","childe","xmlName","delayOf","setDelayOf","defaultSelectValues","allowClear","labelInValue","onSearch","clearTimeout","setTimeout","defaultValue","notFoundContent","filterOption","getPopupContainer","node","parentNode","validationSchema","Yup","shape","trim","description","required","turn","when","is","changedImages","oneOf","getKey","handleSaveProduct","saveProductEditAction","valuesToSave","cloneValues","types","usages","extraFilterIds","extraFilter","brand","brandId","res","i","findRes","item2","setValueIfEmpty","productType","percent","accessoryIds","batteries","battery","batteriesCount","paperBags","bug","sorter","a","b","useEditForm","initialValues","accessories","filter","accessory","ProductAccessoriesMap","Object","keys","discount","photos","productUsage","bestSeller","isNew","minAge","maxAge","productSex","generateInitialValues","formik","useFormik","onSubmit","setValues","isValid","submitCount","photo","push","_id","every","sort","orderId","showError","setGender","val","setAges","Number","isNaN","setBestSeller","setIsNew","setSingleField","setLang","cloneLangs","selectedLang","setSizes","cloneItem","setCheckBoxSizes","setSelectValue","_","selected","newSelected","children","FormSingleInput","Inp","BlurChangeInputFieldNumber","BlurChangeInputField","FormIsNew","EditForm","fileList","product","searchSelectAction","searchSelect","editProduct","action","method","listType","defaultFileList","errors","handleSubmit","xmlPrice","xmlCount","xmlId","color","FormHeadingsInLangs","changeImages","showSearch","edit","htmlType","confirm","connect","tables","isFetching","pages","searchSelectLists","editFetchingAction","editFetching","getTableDataAction","getTableData","getTableDataResetAction","getTableDataReset","saveProductImages","saveProductEdit","editFetchingResetAction","editFetchingReset","showMessage","deleteProductAction","deleteProduct","searchReset","selectedRows","setSelectedRows","pathname","PRODUCTS","delete","success","rowSelection","selectedRowKeys","newSelectedRows","getCheckboxProps","record","columns","render","dataIndex","content","onOk","ids","dataSource","pagination","current","total","onCancel","visible","footer","top"],"mappings":"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","file":"static/js/9.053dc4ef.chunk.js","sourcesContent":["import { useEffect, useCallback } from 'react';\n\n\nexport default function useTableInfo(name, getData, resetData, searchResetAction) {\n  useEffect(() => {\n    getData({ name });\n    return () => {\n      resetData({ name });\n      searchResetAction();\n    };\n  }, [getData, name, resetData, searchResetAction]);\n\n  const changePage = useCallback(\n    (newPage) => {\n      getData({ name, page: newPage });\n    },\n    [getData, name],\n  );\n  // return func\n  return { changePage };\n}\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport PropTypes from 'prop-types';\n\nfunction ModalHeader({ id, count, price }) {\n  return (\n    <div id=\"title\">\n      <Row>\n        <Col span={6}>\n          <h3>\n              Id։\n            <span>{` ${id}`}</span>\n          </h3>\n        </Col>\n        <Col span={10}>\n          <h3>\n          Առկա քանակ։\n            <span>\n              {` ${count} `}\n                հատ\n            </span>\n          </h3>\n        </Col>\n        <Col span={7}>\n          <h3>\n                Գին։\n            <span>\n              {price}\n                դ\n            </span>\n          </h3>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nModalHeader.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default ModalHeader;\n","import { useMemo } from 'react';\n\nexport const useGetDataFromLang = (values, dataKey) => {\n  const contents = useMemo(() => {\n    const ru = values.langs.find(({ lang }) => lang === 'RU');\n    const eng = values.langs.find(({ lang }) => lang === 'ENG');\n    const am = values.langs.find(({ lang }) => lang === 'ARM');\n\n    const ruVal = (ru || {})[dataKey];\n    const amVal = (am || {})[dataKey];\n    const engVal = (eng || {})[dataKey];\n\n    return {\n      am: amVal,\n      ru: ruVal,\n      eng: engVal,\n    };\n  }, [values, dataKey]);\n  return contents;\n};\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport PropTypes from 'prop-types';\nimport { BlurChangeInputField } from '../../../../../components';\nimport { useGetDataFromLang } from './hooks';\n\nconst { TabPane } = Tabs;\nfunction FormName({\n  handleChange, values, header, dataKey,\n}) {\n  const newValues = useGetDataFromLang(values, dataKey);\n\n  return (\n    <Tabs defaultActiveKey=\"1\" className=\"modalTab\" style={{ marginTop: '15px' }}>\n      <TabPane tab=\"Arm /\" key=\"1\">\n        <BlurChangeInputField defaultValues={newValues.am} placeholder={header} onChange={handleChange('ARM', dataKey)} />\n      </TabPane>\n      <TabPane tab=\"Ru /\" key=\"2\">\n        <BlurChangeInputField defaultValues={newValues.ru} placeholder={header} onChange={handleChange('RU', dataKey)} />\n      </TabPane>\n      <TabPane tab=\"Eng\" key=\"3\">\n        <BlurChangeInputField defaultValues={newValues.eng} placeholder={header} onChange={handleChange('ENG', dataKey)} />\n      </TabPane>\n    </Tabs>\n  );\n}\n\nFormName.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  values: PropTypes.objectOf(Object).isRequired,\n  header: PropTypes.string.isRequired,\n  dataKey: PropTypes.string.isRequired,\n};\n\nexport default FormName;\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport PropTypes from 'prop-types';\nimport { CKEditor } from '../../../../../components';\nimport { useGetDataFromLang } from './hooks';\n\nconst { TabPane } = Tabs;\n\nfunction FormCKEditor({\n  handleChange, values, dataKey, header,\n}) {\n  const contents = useGetDataFromLang(values, dataKey);\n\n  return (\n    <>\n      <h3>{header}</h3>\n      <Tabs defaultActiveKey=\"1\" className=\"modalTab\">\n        <TabPane tab=\"Arm /\" key={`${dataKey}1`}>\n          <CKEditor\n            data={contents.am}\n            onBlur={handleChange('ARM', dataKey)}\n          />\n        </TabPane>\n        <TabPane tab=\"Ru /\" key={`${dataKey}2`}>\n          <CKEditor\n            data={contents.ru}\n            onBlur={handleChange('RU', dataKey)}\n          />\n        </TabPane>\n        <TabPane tab=\"Eng\" key={`${dataKey}3`}>\n          <CKEditor\n            data={contents.eng}\n            onBlur={handleChange('ENG', dataKey)}\n          />\n        </TabPane>\n      </Tabs>\n    </>\n\n  );\n}\n\nFormCKEditor.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  values: PropTypes.objectOf(Object).isRequired,\n  dataKey: PropTypes.string.isRequired,\n  header: PropTypes.string.isRequired,\n};\n\nexport default FormCKEditor;\n","import React from 'react';\nimport {\n  Row, Col, Checkbox,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { BlurChangeInputField } from '../../../../../components';\n\nfunction FormSizes({\n  handleCheck, handleChange, addBoxSize, size, boxSize,\n}) {\n  return (\n    <>\n      <Row>\n        <Col span={12}>\n          <h3>Չափսեր</h3>\n          <Row>\n            <Col span={8}>\n              <BlurChangeInputField defaultValues={size.height} placeholder=\"Բարձր\" onChange={handleChange('size', 'height')} />\n            </Col>\n            <Col span={8}>\n              <BlurChangeInputField defaultValues={size.length} placeholder=\"Երկար\" onChange={handleChange('size', 'length')} />\n            </Col>\n            <Col span={8}>\n              <BlurChangeInputField defaultValues={size.width} placeholder=\"Լայն\" onChange={handleChange('size', 'width')} />\n            </Col>\n          </Row>\n\n        </Col>\n        <Col span={12}>\n          <h3>Տուփի չափսեր</h3>\n          {addBoxSize && (\n          <Row className=\"checkShow\">\n            <Col span={8}>\n              <BlurChangeInputField defaultValues={boxSize.height} placeholder=\"Բարձր\" onChange={handleChange('boxSize', 'height')} />\n            </Col>\n            <Col span={8}>\n              <BlurChangeInputField defaultValues={boxSize.length} placeholder=\"Երկար\" onChange={handleChange('boxSize', 'length')} />\n            </Col>\n            <Col span={8}>\n              <BlurChangeInputField defaultValues={boxSize.width} placeholder=\"Լայն\" onChange={handleChange('boxSize', 'width')} />\n            </Col>\n          </Row>\n          )}\n          <Checkbox style={{ marginTop: '5px' }} onChange={handleCheck} checked={addBoxSize} />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nFormSizes.propTypes = {\n  handleCheck: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  addBoxSize: PropTypes.bool.isRequired,\n  size: PropTypes.objectOf(Object).isRequired,\n  boxSize: PropTypes.objectOf(Object).isRequired,\n};\n\nexport default FormSizes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spin, Button } from 'antd';\n\nimport { useDrag, useDrop } from 'react-dnd';\nimport { BlurChangeInputField } from '../../../../../../../../components';\n\nfunction DNDImages({\n  handleChange,\n  handleDrop,\n  deleteImage,\n  draggable,\n  imageData,\n  notSaved,\n  index,\n  load,\n  url,\n}) {\n  const [, drag] = useDrag({\n    item: { type: 'CARD', index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const [, parentDrop] = useDrop({\n    accept: 'CARD',\n    drop: (item) => {\n      if (item.index === index) return;\n      handleDrop(item.index, index);\n    },\n    collect: (monitor) => ({\n      isOverParent: monitor.isOver(),\n    }),\n  });\n  return (\n    <div\n      style={{\n        width: '200px', marginTop: '15px', marginLeft: '5px', background: (notSaved),\n      }}\n      ref={parentDrop}\n    >\n      <div\n        ref={drag}\n        {...(!draggable ? {\n          onDrag: (e) => { e.stopPropagation(); },\n          onDragStart: (e) => { e.stopPropagation(); },\n          draggable: false,\n        } : {})}\n      >\n        {load ? <Spin />\n          : (\n            <>\n              <img\n                style={{ width: '100%', marginTop: '15px', marginBottom: '15px' }}\n                src={url}\n                alt=\"null\"\n              />\n              <BlurChangeInputField\n                style={{ marginBottom: '15px' }}\n                name=\"title\"\n                placeholder=\"title\"\n                disabled={!draggable}\n                defaultValues={imageData.title}\n                onChange={handleChange}\n              />\n              <BlurChangeInputField\n                name=\"alt\"\n                placeholder=\"alt\"\n                defaultValues={imageData.alt}\n                disabled={!draggable}\n                onChange={handleChange}\n              />\n              <Button style={{ marginTop: '15px' }} type=\"button\" onClick={deleteImage}>delete</Button>\n            </>\n          )}\n      </div>\n    </div>\n  );\n}\n\nDNDImages.propTypes = {\n  url: PropTypes.string,\n  index: PropTypes.number.isRequired,\n  load: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  deleteImage: PropTypes.func.isRequired,\n  draggable: PropTypes.bool.isRequired,\n  notSaved: PropTypes.bool.isRequired,\n  handleDrop: PropTypes.func.isRequired,\n  imageData: PropTypes.objectOf(Object).isRequired,\n};\n\nDNDImages.defaultProps = {\n  url: null,\n};\n\nexport default DNDImages;\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { uniqueId } from 'lodash';\nimport { useSelector } from 'react-redux';\nimport { getBase64 } from './constants';\nimport { selectChangesImagesLoading, selectChangesImagesSuccess } from '../../../../../../store/product-edit/reducer';\n\nexport default ({\n  photosOrder, images, setFieldValue, saveProductImagesAction, showMessageAction, productId,\n}) => {\n  const [imagesListState, setImagesListState] = useState(images);\n  const [filesList, setFilesList] = useState([]);\n  const [deletedImages, setDeletedImages] = useState([]);\n  const confirmLoading = useSelector(selectChangesImagesLoading);\n  const confirmSuccess = useSelector(selectChangesImagesSuccess);\n\n  // DragnDrop\n  useEffect(() => {\n    setImagesListState(images);\n    setFilesList([]);\n    setDeletedImages([]);\n  },\n  // eslint-disable-next-line\n    [images.length]);\n\n  useEffect(() => {\n    if (!confirmLoading && confirmSuccess) {\n      setImagesListState(images);\n      setDeletedImages([]);\n      setFilesList([]);\n    }\n  },\n  // eslint-disable-next-line\n    [confirmLoading, confirmSuccess, setDeletedImages, setFilesList, setImagesListState]);\n\n  useEffect(() => {\n    if (deletedImages.length > 0 || filesList.length > 0) {\n      setFieldValue('changedImages', false);\n    } else setFieldValue('changedImages', true);\n  },\n  // eslint-disable-next-line\n  [deletedImages.length, filesList.length]);\n\n\n  const handlePreview = (info) => {\n    if (info.file.status === 'uploading') {\n      if (info.file.id) return;\n      // eslint-disable-next-line no-param-reassign\n      info.file.id = uniqueId();\n      setImagesListState([...imagesListState, { uId: info.file.id, load: true }]);\n      return;\n    }\n    if (info.file.status === 'done') {\n      const newFiles = [...filesList, info.file];\n\n      getBase64(info.file.originFileObj, info.file.id).then(({ imageUrl, id }) => {\n        const cloneImagesList = [...imagesListState];\n        const currentItem = cloneImagesList.find(({ uId: thisId }) => thisId === id);\n        currentItem.load = false;\n        currentItem.url = imageUrl;\n        setImagesListState([...cloneImagesList]);\n      });\n      setFilesList(newFiles);\n    }\n  };\n\n  const handleDrop = (thisIndex, newIndex) => {\n    const newImagesList = [...imagesListState];\n    const spliced = newImagesList.splice(thisIndex, 1);\n    newImagesList.splice(newIndex, 0, spliced[0]);\n    setImagesListState(newImagesList);\n    const newPhotosOrder = [...photosOrder];\n\n\n    newImagesList.forEach(({ id }, index) => {\n      newPhotosOrder.find(({ id: orderId }) => orderId === id).order = index + 1;\n    });\n    setFieldValue('photosOrder', newPhotosOrder);\n  };\n\n\n  const deleteImage = ({ id, uId }) => {\n    let imageIndex;\n    if (uId) {\n      imageIndex = imagesListState.findIndex(({ uId: thisUId }) => thisUId === uId);\n      const fileIndex = filesList.findIndex(({ id: fileId }) => fileId === uId);\n\n      const newFilesList = [...filesList];\n      newFilesList.splice(fileIndex, 1);\n      setFilesList(newFilesList);\n    } else if (id) {\n      imageIndex = imagesListState.findIndex(({ id: thisId }) => thisId === id);\n      setDeletedImages([...deletedImages, id]);\n    }\n    const newImagesList = [...imagesListState];\n    newImagesList.splice(imageIndex, 1);\n    setImagesListState(newImagesList);\n  };\n\n  const noUploadedDeleted = useMemo(() => (\n    filesList.length === 0 && deletedImages.length === 0),\n  [deletedImages.length, filesList.length]);\n\n  const handleSaveImage = useCallback(() => {\n    if (imagesListState.length > 9) {\n      showMessageAction({\n        text: 'Images max count is 9',\n        status: 'error',\n        key: 'maxImagesCount',\n        timer: 3.5,\n      });\n      return;\n    }\n    saveProductImagesAction({\n      files: filesList,\n      id: productId,\n      deletedImages,\n    });\n  },\n  // eslint-disable-next-line\n    [filesList, productId, deletedImages]);\n\n\n  const changeInputValueAddId = ({ id }) => ({\n    target: {\n      value,\n      name,\n    },\n  }) => {\n    const clonePhotosOrder = [...photosOrder];\n    const changedItemIndex = clonePhotosOrder.findIndex(({ id: itemId }) => id === itemId);\n    clonePhotosOrder[changedItemIndex][name] = value;\n    setFieldValue('photosOrder', clonePhotosOrder);\n  };\n  return {\n    handlePreview,\n    handleDrop,\n    deleteImage,\n    noUploadedDeleted,\n    handleSaveImage,\n    changeInputValueAddId,\n    imagesListState,\n    filesList,\n    deletedImages,\n  };\n};\n","export const getBase64 = (file, id) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => {\n    resolve({ imageUrl: reader.result, id });\n  };\n  reader.onerror = (error) => {\n    reject(error);\n  };\n  reader.reject = alert;\n});\n","import React from 'react';\nimport {\n  Upload, Button, Icon,\n} from 'antd';\nimport PropTypes from 'prop-types';\n\nimport DNDImages from './components/dnd-images/DNDImages';\nimport useUploadImages from './useUploadImages';\n\n\nfunction FormUploadImage({\n  uploadProps,\n  images,\n  saveProductImagesAction,\n  setFieldValue,\n  productId,\n  photosOrder,\n  actionStatus,\n  showMessageAction,\n}) {\n  const {\n    handlePreview,\n    handleDrop,\n    deleteImage,\n    noUploadedDeleted,\n    handleSaveImage,\n    changeInputValueAddId,\n    imagesListState,\n    filesList,\n  } = useUploadImages({\n    photosOrder, images, setFieldValue, saveProductImagesAction, showMessageAction, productId,\n  });\n\n  return (\n    <>\n      <Upload\n        {...uploadProps}\n        multiple\n        onChange={handlePreview}\n        showUploadList={false}\n      >\n        <Button disabled={imagesListState.length > 9} style={{ marginTop: '20px', marginBottom: '20px' }}>\n          <Icon type=\"upload\" />\n              Add Photo\n        </Button>\n      </Upload>\n\n      {(!noUploadedDeleted) && (\n        <Button\n          style={{ display: 'block' }}\n          type=\"button\"\n          disabled={actionStatus.loading}\n          onClick={handleSaveImage}\n        >\n        Save images\n        </Button>\n      )}\n\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {imagesListState.map(({\n          load,\n          uId,\n          url,\n          id,\n          productId: pId,\n        }, index) => {\n          let newURL = url;\n          if (id) {\n            newURL = `${process.env.REACT_APP_HOST_NAME}/products/${pId}/${newURL}`;\n          }\n\n          return (\n            <DNDImages\n              draggable={noUploadedDeleted}\n              key={(uId ? `:uId${uId}` : `${id}:id`)}\n              notSaved={!!filesList.find(({ id: fileId }) => fileId === uId)}\n              url={newURL}\n              load={!!load}\n              deleteImage={() => deleteImage({ id, uId })}\n              index={index}\n              handleDrop={handleDrop}\n              handleChange={changeInputValueAddId({ id })}\n              imageData={photosOrder.find(({ id: orderId }) => orderId === id) || {}}\n            />\n          );\n        })}\n\n      </div>\n    </>\n  );\n}\n\n\nFormUploadImage.propTypes = {\n  uploadProps: PropTypes.objectOf(Object).isRequired,\n  images: PropTypes.arrayOf(PropTypes.any),\n  saveProductImagesAction: PropTypes.func.isRequired,\n  productId: PropTypes.number.isRequired,\n  setFieldValue: PropTypes.func.isRequired,\n  photosOrder: PropTypes.arrayOf(PropTypes.any).isRequired,\n  actionStatus: PropTypes.objectOf(Object).isRequired,\n  showMessageAction: PropTypes.func.isRequired,\n};\n\n\nFormUploadImage.defaultProps = {\n  images: [],\n};\nexport default FormUploadImage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'antd';\nimport { BlurChangeInputFieldNumber } from '../../../../../components';\n\nfunction FormAge({ handleChange, ages }) {\n  return (\n    <Row>\n      <Col span={12}>\n        <h3>Նվազագույն տարիք</h3>\n        <BlurChangeInputFieldNumber\n          onChange={handleChange}\n          defaultValues={ages[0]}\n          name=\"minAge\"\n          min={0}\n          max={8}\n        />\n      </Col>\n      <Col span={12}>\n        <h3>Առավելագույն տարիք</h3>\n        <BlurChangeInputFieldNumber\n          onChange={handleChange}\n          defaultValues={ages[1]}\n          min={0}\n          max={9}\n          name=\"maxAge\"\n        />\n      </Col>\n    </Row>\n  );\n}\n\nFormAge.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  ages: PropTypes.arrayOf(Array).isRequired,\n};\n\nexport default FormAge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'antd';\n\nfunction FormGender({ handleChange, sex }) {\n  return (\n    <>\n      <h3>Սեռ</h3>\n      <Checkbox onChange={handleChange} name=\"BOY\" checked={sex === 'BOY'}>Տղա</Checkbox>\n      <Checkbox onChange={handleChange} name=\"GIRL\" checked={sex === 'GIRL'}>Աղջիկ</Checkbox>\n      <Checkbox onChange={handleChange} name=\"ALL\" checked={sex === 'ALL'}>Երկուսնել</Checkbox>\n    </>\n  );\n}\n\nFormGender.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  sex: PropTypes.string,\n};\nFormGender.defaultProps = {\n  sex: '',\n};\n\nexport default FormGender;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'antd';\n\nfunction FormBestSeller({ handleChange, checked }) {\n  return (\n    <>\n      <h3>Լավագույն Վաճառք</h3>\n      <Checkbox onChange={handleChange} checked={checked} />\n    </>\n  );\n}\n\nFormBestSeller.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool,\n};\n\nFormBestSeller.defaultProps = {\n  checked: false,\n};\n\nexport default FormBestSeller;\n","export const setDefaultValues = (values) => (Array.isArray(values) ? values.map(\n  ({ langs, ...data }) => {\n    if (data.key) return data;\n    const { name } = ((langs && langs[0]) || data);\n    const { id } = data;\n    const res = { label: name, key: id };\n\n    return (\n      res\n    );\n  },\n) : values.name);\n","import React, {useEffect, useMemo, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, Spin } from 'antd';\nimport { setDefaultValues } from './constants';\n\nconst { Option } = Select;\n\n\nfunction FormSelect(props) {\n  const {\n    title,\n    mode,\n    placeholder,\n    handleSearch,\n    handleSelect,\n    loading,\n    list,\n    values,\n    name,\n  } = props;\n  const childe = list.map((value) => (\n    value.name || (value.langs[0] && value.langs[0].name) || value.xmlName\n      ? (\n        <Option key={value.id} value={value.id} id={value.id}>\n          {value.name || (value.langs[0] && value.langs[0].name) || value.xmlName }\n        </Option>\n      ) : null\n  ));\n  const [delayOf, setDelayOf] = useState(null);\n  const defaultSelectValues = useMemo(() => setDefaultValues(values),\n    // eslint-disable-next-line\n    []);\n  useEffect(()=>{\n      handleSearch({value:'', name})\n  },[])\n  return (\n    <>\n      <h3>{title}</h3>\n      <Select\n        allowClear\n        labelInValue\n        {...props}\n        mode={mode}\n        placeholder={placeholder || 'Search(Id)'}\n        style={{ width: '100%' }}\n        onSearch={(value) => {\n          clearTimeout(delayOf);\n          setDelayOf(setTimeout(handleSearch, 300, { value, name }));\n        }}\n        value={setDefaultValues(values)}\n        defaultValue={defaultSelectValues}\n        notFoundContent={loading ? <Spin size=\"small\" /> : null}\n        filterOption={false}\n        onChange={handleSelect}\n        loading={loading}\n        getPopupContainer={(node) => node.parentNode}\n      >\n        {childe}\n      </Select>\n    </>\n  );\n}\n\nFormSelect.propTypes = {\n  title: PropTypes.string.isRequired,\n  mode: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(Array),\n  name: PropTypes.string.isRequired,\n  values: PropTypes.arrayOf(PropTypes.any),\n  loading: PropTypes.bool,\n};\nFormSelect.defaultProps = {\n  list: [],\n  values: [],\n  loading: false,\n  mode: 'multiple',\n};\nexport default FormSelect;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  langs: Yup.array(\n    Yup.object().shape({\n      name: Yup.string().trim(),\n    }),\n  ),\n  images: Yup.array(\n    Yup.object().shape({\n      title: Yup.string(),\n      description: Yup.string(),\n      id: Yup.number().required(),\n      turn: Yup.number().required(),\n    }),\n  ),\n  boxSize: Yup.object().when('addBoxSize',\n    {\n      is: true, // alternatively: (val) => val == true\n      then: Yup.object({\n        width: Yup.string().trim().required(),\n        height: Yup.string().trim().required(),\n        length: Yup.string().trim().required(),\n      }).required(),\n    }),\n  changedImages: Yup.bool().oneOf([true], 'All images changes should be saved'),\n  photosOrder: Yup.array(\n    Yup.object().shape({\n      title: Yup.string(),\n      alt: Yup.string(),\n    }),\n  ),\n});\n\n\nexport const generateInitialValues = (data) => {\n  const batteries = data?.accessories.filter((accessory) => accessory.ProductAccessoriesMap.type === 'battery') || [];\n  const paperBags = data?.accessories.filter((accessory) => accessory.ProductAccessoriesMap.type === 'bug') || [];\n  const batteriesCount = batteries[0]?.ProductAccessoriesMap?.count || 0;\n  return ({\n    percent: data.percent || 0,\n    types: data.productType || [],\n    type: data.type || 'product',\n    size: data.size instanceof Object ? data.size : {},\n    boxSize: data.boxSize instanceof Object ? data.boxSize : {},\n    brand: data.brand || '',\n    addBoxSize: !!(Object.keys(data.boxSize instanceof Object ? data.boxSize : {})).length,\n    discount: 0,\n    photos: (data.photos || []),\n    changedImages: true,\n    usages: data.productUsage || [],\n    bestSeller: data.bestSeller,\n    isNew: data.isNew,\n    minAge: data.minAge,\n    maxAge: data.maxAge,\n    sex: (data.productSex.length && data.productSex[0].sex) || '',\n    batteries,\n    batteriesCount,\n    paperBags,\n    extraFilter: data.extraFilter || [],\n    langs: data.langs && data.langs.length ? data.langs : [{ lang: 'ARM' }, { lang: 'ENG' }, { lang: 'RU' }],\n    photosOrder: [],\n  });\n}\n\nconst setValueIfEmpty = (langs, key) => {\n  const res = [...langs];\n\n  for (let i = 0; i < 3; i++) {\n    res[i] = res[i] || {};\n  }\n  res.forEach((item) => {\n    if (!item[key] || !item[key].trim()) {\n      const findRes = res.find((item2) => !!(item2[key] && item2[key].trim()));\n      item[key] = findRes && findRes[key];\n    }\n    item[key] = item[key] || '';\n  });\n\n  return res;\n};\n\nconst getKey = ({ key, id }) => (id || key);\n\nexport const handleSaveProduct = (saveProductEditAction, id) => (valuesToSave) => {\n  const cloneValues = { ...valuesToSave };\n\n  cloneValues.types = cloneValues.types.map(getKey);\n  cloneValues.usages = cloneValues.usages.map(getKey);\n  cloneValues.extraFilterIds = cloneValues.extraFilter.map(getKey);\n  const { brand } = cloneValues;\n  if (Array.isArray(brand)) {\n    cloneValues.brandId = brand[0] && brand[0].id;\n  } else {\n    cloneValues.brandId = brand && brand.id;\n  }\n\n  cloneValues.langs = [\n    ...setValueIfEmpty(cloneValues.langs, 'name'),\n  ];\n\n\n  // cloneValues.langs = [\n  //   ...setValueIfEmpty(cloneValues.langs, 'description'),\n  // ];\n\n\n  cloneValues.productType = cloneValues.types;\n  cloneValues.boxSize = cloneValues.addBoxSize ? cloneValues.boxSize : {};\n\n  cloneValues.percent = cloneValues.percent ? +cloneValues.percent : 0;\n\n  cloneValues.accessoryIds = [\n    ...cloneValues.batteries.map((battery) => ({ id: battery.key || battery.id, type: 'battery', count: cloneValues.batteriesCount })),\n    ...cloneValues.paperBags.map((bug) => ({ id: bug.key || bug.id, type: 'bug', count: 1 })),\n  ];\n  saveProductEditAction({ values: cloneValues, id });\n};\nexport const sorter = (a, b) => {\n  if (a.order > b.order) {\n    return 1;\n  }\n  if (a.order < b.order) {\n    return -1;\n  }\n  return 0;\n};\n","import { useFormik } from 'formik';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport {\n  generateInitialValues,\n  handleSaveProduct,\n  validationSchema,\n  sorter,\n} from './constants';\n\n\nexport default function useEditForm(data, saveProductEditAction, id, showMessageAction) {\n  const initialValues = useMemo(() => (generateInitialValues(data)), [data]);\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: handleSaveProduct(saveProductEditAction, id),\n  });\n\n  const {\n    values,\n    setFieldValue,\n    setValues,\n    isValid,\n    submitCount,\n  } = formik;\n\n  useEffect(() => {\n    if (!data || !data.photos) return;\n    let photosOrder = [...formik.values.photosOrder];\n    data.photos.forEach((photo) => {\n      // eslint-disable-next-line no-shadow\n      if ((photosOrder.findIndex(({ id }) => id === photo.id)) === -1) {\n        photosOrder.push({\n          id: photo.id,\n          productId: photo.productId,\n          url: photo.url,\n          title: photo.title || '',\n          alt: photo.alt || '',\n          order: photo.order,\n        });\n      }\n    });\n    // delete from photos orders\n    photosOrder = photosOrder.filter((order) => {\n      const index = data.photos.findIndex(({ id: _id }) => order.id === _id);\n      if (index === -1) { return false; }\n      return true;\n    });\n\n\n    const averyPhotoHaveOrder = data.photos.every(({ order }) => !!order);\n    if (!averyPhotoHaveOrder) {\n      data.photos.forEach(({ id: _id }, index) => {\n        photosOrder.find(({ id: orderId }) => _id === orderId).order = index + 1;\n      });\n    } else {\n      photosOrder = photosOrder.sort(sorter);\n    }\n    formik.setValues({\n      ...formik.values,\n      photos: data.photos,\n      photosOrder,\n    });\n  },\n  // eslint-disable-next-line\n    [data]);\n\n  useEffect(() => {\n    if (submitCount >= 1 && !isValid) {\n      showMessageAction({\n        text: 'Some fields of form are invalid please checked the form',\n        status: 'error',\n        timer: 3.5,\n      });\n    }\n  },\n  // eslint-disable-next-line\n    [submitCount]);\n\n  const showError = useMemo(() => submitCount >= 1,\n    // eslint-disable-next-line\n    [submitCount >= 1]);\n  const setGender = useCallback(({ target: { name, checked } }) => {\n    let val = '';\n    if (checked) {\n      val = name;\n    }\n    setFieldValue('sex', val);\n  },\n  // eslint-disable-next-line\n    [setFieldValue]);\n\n  const ages = useMemo(() => [values.minAge, values.maxAge],\n    [values.minAge, values.maxAge]);\n\n  const setAges = useCallback(({ target: { value, name } }) => {\n    const cloneValues = { ...values };\n    cloneValues[name] = +value;\n    const { minAge, maxAge } = cloneValues;\n    if (maxAge < 1 || Number.isNaN(maxAge)) cloneValues.maxAge = 1;\n    if (minAge <= 0 || Number.isNaN(minAge)) cloneValues.minAge = 0;\n    if (minAge > maxAge) cloneValues.minAge = maxAge - 1;\n    setValues(cloneValues);\n  }, [values, setValues]);\n\n  const setBestSeller = useCallback(({ target: { checked } }) => {\n    setFieldValue('bestSeller', checked);\n  }, [setFieldValue]);\n  const setIsNew = useCallback(({ target: { checked } }) => {\n    setFieldValue('isNew', checked);\n  }, [setFieldValue]);\n  const setSingleField = useCallback((name) => ({ target: { value } }) => {\n    setFieldValue(name, value);\n  }, [setFieldValue]);\n  const setLang = useCallback((lang, key) => (e, a) => {\n    let value;\n\n    if (a && a.getData) {\n      value = a.getData();\n    } else {\n      value = e.target.value;\n    }\n    const cloneLangs = [...values.langs];\n    let selectedLang = cloneLangs.find(({ lang: itemLang }) => itemLang === lang);\n    if (!selectedLang) {\n      selectedLang = { lang };\n      cloneLangs.push(selectedLang);\n    }\n    selectedLang[key] = value;\n    setFieldValue('langs', cloneLangs);\n  },\n  // eslint-disable-next-line\n    [values, values.langs, setFieldValue]);\n\n  const setSizes = useCallback((key, name) => ({ target: { value } }) => {\n    if (!value.trim()) {\n      // eslint-disable-next-line no-param-reassign\n      value = '';\n    }\n    const cloneValues = { ...values };\n    const cloneItem = values[key] || {};\n    cloneValues[key] = cloneItem;\n    cloneValues[key][name] = value;\n    setValues({ ...cloneValues });\n  },\n  // eslint-disable-next-line\n    [values, values.langs, setValues]);\n\n  const setCheckBoxSizes = useCallback(({ target: { checked } }) => {\n    const cloneValues = { ...values };\n    cloneValues.addBoxSize = checked;\n    setValues({ ...cloneValues });\n  },\n  // eslint-disable-next-line\n    [values, values.langs, setValues]);\n\n  const setSelectValue = (name) => (_, selected) => {\n    let newSelected = _;\n    // if id undefined find id by key\n    if (selected instanceof Array) {\n      if (name === 'usages' && selected.length > 3) {\n        return;\n      }\n    } else if (selected && selected.props) {\n      newSelected = [{\n        name: selected.props.children,\n        id: selected.props.id,\n      }];\n    } else {\n      newSelected = {};\n    }\n    setFieldValue(name, newSelected);\n  };\n\n\n  return {\n    formik,\n    showError,\n    setGender,\n    ages,\n    setAges,\n    setBestSeller,\n    setIsNew,\n    setSingleField,\n    setLang,\n    setSizes,\n    setCheckBoxSizes,\n    setSelectValue,\n  };\n}\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { BlurChangeInputFieldNumber, BlurChangeInputField } from '../../../../../components';\n\nfunction FormSingleInput({ handleChange, label, ...props }) {\n  const { type } = props;\n  const Inp = useMemo(() => (type === 'number' ? BlurChangeInputFieldNumber : BlurChangeInputField), [type]);\n\n  return (\n    <>\n      {label && <h3>{label}</h3>}\n      <Inp {...props} onChange={handleChange} />\n    </>\n  );\n}\n\nFormSingleInput.propTypes = {\n  label: PropTypes.node,\n  type: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n};\n\nFormSingleInput.defaultProps = {\n  label: '',\n  type: 'string',\n};\n\nexport default FormSingleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'antd';\n\nfunction FormIsNew({ handleChange, checked }) {\n  return (\n    <>\n      <h3>Նորույթ</h3>\n      <Checkbox onChange={handleChange} checked={checked} />\n    </>\n  );\n}\n\nFormIsNew.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool,\n};\n\nFormIsNew.defaultProps = {\n  checked: false,\n};\n\nexport default FormIsNew;\n","import React, { useMemo } from 'react';\nimport {\n  Button, Form, Select,\n} from 'antd';\n\nimport PropTypes from 'prop-types';\nimport ModalHeader from './components/ModalHeader';\nimport FormHeadingsInLangs from './components/FormHeadingsInLangs';\nimport FormCKEditor from './components/FormCKEditor';\nimport FormSizes from './components/FormSizes';\nimport FormUploadImage from './components/upload-images/FormUploadImage';\nimport FormAge from './components/FormAge';\nimport FormGender from './components/FormGender';\nimport FormBestSeller from './components/FormBestSeller';\nimport FormSelect from './components/select/FormSelect';\nimport useEditForm from './useEditForm';\nimport FormSingleInput from './components/FormSingleInput';\nimport FormIsNew from './components/FormIsNew';\n\n\nfunction EditForm({\n  fileList,\n  product,\n  saveProductImagesAction,\n  saveProductEditAction,\n  searchSelectAction,\n  searchSelect,\n  editProduct,\n  showMessageAction,\n  id,\n}) {\n  const uploadProps = useMemo(() => ({\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n      method: 'get',\n      listType: 'picture',\n      defaultFileList: [...(fileList || [])],\n    className: 'upload-list-inline',\n  }), [fileList]);\n\n  const {\n    formik,\n    showError,\n    setGender,\n    ages,\n    setAges,\n    setBestSeller,\n    setIsNew,\n    setSingleField,\n    setLang,\n    setSizes,\n    setCheckBoxSizes,\n    setSelectValue,\n  } = useEditForm(product.data, saveProductEditAction, id, showMessageAction);\n  const {\n    values,\n    setFieldValue,\n    errors,\n    handleSubmit,\n  } = formik;\n  return (\n    <Form className=\"editProduct\">\n      <ModalHeader\n        price={product.data.xmlPrice}\n        count={product.data.xmlCount}\n        id={product.data.xmlId}\n      />\n      <div style={{ color: 'red' }}>\n        {showError && errors.langs\n          && (errors.langs instanceof Array ? errors.langs[0] : errors.langs)}\n      </div>\n\n      <FormHeadingsInLangs handleChange={setLang} values={values} header=\"vernagir\" dataKey=\"name\" />\n      <FormCKEditor handleChange={setLang} values={values} dataKey=\"description\" header=\"Նկարագրություն\" />\n      <FormSizes\n        handleCheck={setCheckBoxSizes}\n        handleChange={setSizes}\n        addBoxSize={values.addBoxSize}\n        size={values.size}\n        boxSize={values.boxSize}\n      />\n      <FormUploadImage\n        uploadProps={uploadProps}\n        setFieldValue={setFieldValue}\n        actionStatus={editProduct.changeImages}\n        productId={id}\n        images={values.photosOrder}\n        photosOrder={values.photosOrder}\n        saveProductImagesAction={saveProductImagesAction}\n        showMessageAction={showMessageAction}\n      />\n\n\n      <FormSelect\n        title=\"Բրենդ\"\n        showSearch\n        mode={null}\n        placeholder=\"Brand\"\n        name=\"brand\"\n        values={values.brand}\n        list={searchSelect.brand.list}\n        loading={searchSelect.brand.loading}\n        handleSearch={searchSelectAction}\n        handleSelect={setSelectValue('brand')}\n      />\n\n      <FormSingleInput\n        max={99}\n        min={0}\n        label=\"Զեղչի տոկոս\"\n        placeholder=\"elements count\"\n        type=\"number\"\n        name=\"percent\"\n        handleChange={setSingleField('percent')}\n        defaultValues={values.percent}\n      />\n\n      <FormSelect\n        title=\"Դասակարգում\"\n        mode=\"multiple\"\n        placeholder=\"types\"\n        name=\"types\"\n        values={values.types}\n        list={searchSelect.types.list}\n        loading={searchSelect.types.loading}\n        handleSearch={searchSelectAction}\n        handleSelect={setSelectValue('types')}\n      />\n\n      <h3>\n          Ապրանքի տեսակ\n      </h3>\n      <Select\n        style={{ marginTop: '15px' }}\n        onChange={(a) => {\n          setFieldValue('type', a);\n        }}\n        defaultValue={values.type}\n      >\n        <Select.Option key=\"product\" value=\"product\">\n          product\n        </Select.Option>\n        <Select.Option key=\"bug\">\n          bag\n        </Select.Option>\n        <Select.Option key=\"battery\">\n          battery\n        </Select.Option>\n      </Select>\n\n      <FormSelect\n        title=\"Օգտակարություն\"\n        mode=\"multiple\"\n        placeholder=\"Usage\"\n        name=\"usages\"\n        values={values.usages}\n        list={searchSelect.usages.list}\n        loading={searchSelect.usages.loading}\n        handleSearch={searchSelectAction}\n        handleSelect={setSelectValue('usages')}\n      />\n      <FormAge handleChange={setAges} ages={ages} />\n      <FormGender handleChange={setGender} sex={values.sex} />\n      <FormBestSeller handleChange={setBestSeller} checked={values.bestSeller} />\n      <FormIsNew handleChange={setIsNew} checked={values.isNew} />\n      <FormSelect\n        title=\"Մարտկոցներ\"\n        mode=\"multiple\"\n        placeholder=\"Batteries\"\n        name=\"batteries\"\n        values={values.batteries}\n        list={searchSelect.batteries.list}\n        loading={searchSelect.batteries.loading}\n        handleSearch={searchSelectAction}\n        handleSelect={setSelectValue('batteries')}\n      />\n      {values.batteries && values.batteries.length > 0 && (\n      <FormSingleInput\n        max={99}\n        min={1}\n        label=\"elements count\"\n        placeholder=\"elements count\"\n        type=\"number\"\n        defaultValues={values.batteriesCount}\n        handleChange={setSingleField('batteriesCount')}\n      />\n      )}\n      {/* <FormSelect */}\n      {/*  title=\"Թղթե տոպրակներ\" */}\n      {/*  placeholder=\"Թղթե տոպրակներ\" */}\n      {/*  name=\"paperBags\" */}\n      {/*  values={values.paperBags} */}\n      {/*  list={searchSelect.paperBags.list} */}\n      {/*  loading={searchSelect.paperBags.loading} */}\n      {/*  handleSearch={searchSelectAction} */}\n      {/*  handleSelect={setSelectValue('paperBags')} */}\n      {/* /> */}\n\n\n      <FormSelect\n        title=\"Հավելյալ Ֆիլտր\"\n        placeholder=\"Հավելյալ Ֆիլտր\"\n        name=\"extraFilter\"\n        values={values.extraFilter}\n        list={searchSelect.extraFilter.list}\n        loading={searchSelect.extraFilter.loading}\n        handleSearch={searchSelectAction}\n        handleSelect={setSelectValue('extraFilter')}\n      />\n\n      <FormHeadingsInLangs handleChange={setLang} values={values} header=\"meta title\" dataKey=\"metaTitle\" />\n      <FormCKEditor handleChange={setLang} values={values} dataKey=\"metaDescription\" header=\"metaDescription\" />\n      <div className=\"saveBtn\">\n        <Button\n          disabled={editProduct.edit.loading}\n          onClick={() => setTimeout(handleSubmit, 500)}\n          id=\"save\"\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n            Save\n        </Button>\n      </div>\n    </Form>\n  );\n}\nEditForm.propTypes = {\n  fileList: PropTypes.arrayOf(Array),\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  product: PropTypes.objectOf(Object).isRequired,\n  saveProductImagesAction: PropTypes.func.isRequired,\n  searchSelectAction: PropTypes.func.isRequired,\n  searchSelect: PropTypes.objectOf(Object).isRequired,\n  saveProductEditAction: PropTypes.func.isRequired,\n  editProduct: PropTypes.objectOf(Object).isRequired,\n  showMessageAction: PropTypes.func.isRequired,\n};\n\nEditForm.defaultProps = {\n  id: null,\n  fileList: [],\n};\nexport default EditForm;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport {\n  Icon, Pagination, Modal, Button,\n} from 'antd';\nimport '../../App.css';\nimport './product.less';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Table } from '../../components';\nimport EditForm from './components/edit-form/EditForm';\nimport pathname from '../../constants';\nimport useTableInfo from '../../hooks/useTableInfo';\nimport { editFetching, editFetchingReset } from '../../store/edit/action';\nimport { getTableData, getTableDataReset } from '../../store/tables/action';\nimport { saveProductImages, saveProductEdit, deleteProduct } from '../../store/product-edit/action';\nimport { searchSelect } from '../../store/search-select/action';\nimport { showMessage } from '../../store/message/action';\nimport { searchReset } from '../../store/search/action';\n\n\nconst { confirm } = Modal;\n\nfunction Product({\n  list,\n  page,\n  pages,\n  isFetching,\n  editFetchingAction,\n  getTableDataAction,\n  getTableDataResetAction,\n  saveProductImagesAction,\n  editFetchingResetAction,\n  showMessageAction,\n  searchSelectLists,\n  searchSelectAction,\n  saveProductEditAction,\n  deleteProductAction,\n  editProduct,\n  product,\n  searchResetAction,\n}) {\n  const [selectedRows, setSelectedRows] = useState([]);\n  const { changePage } = useTableInfo(\n    pathname.PRODUCTS,\n    getTableDataAction,\n    getTableDataResetAction,\n    searchResetAction,\n  );\n\n\n  useEffect(() => {\n    if (editProduct.delete.success) {\n      setSelectedRows([]);\n    }\n  }, [editProduct.delete.success, setSelectedRows]);\n  useEffect(() => {\n    setSelectedRows([]);\n  }, [page]);\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, newSelectedRows) => {\n      setSelectedRows(newSelectedRows.map(({ id }) => id));\n    },\n    getCheckboxProps: (record) => ({\n      name: record.name,\n    }),\n  };\n\n\n  const columns = useMemo(() => [\n    {\n      title: 'Անուն',\n      render: ({ langs }) => {\n        if (!!langs && langs.length !== 0) return (langs.find((item) => item.lang === 'ARM'))?.name;\n      },\n    },\n    {\n      title: 'Անունը Պահեստում',\n      dataIndex: 'xmlName',\n    },\n    {\n      title: 'Շտրիխ կոդ',\n      dataIndex: 'xmlBarCode',\n    },\n    {\n      title: 'Առկա քանակ',\n      dataIndex: 'xmlCount',\n    },\n    {\n      title: 'Գին',\n      dataIndex: 'xmlPrice',\n    },\n    {\n      title: 'Զեղչված գին',\n      dataIndex: 'price',\n    },\n    {\n      dataIndex: 'edit',\n      render: (_, { id }) => (\n        <Icon\n          onClick={() => {\n            editFetchingAction({ name: pathname.PRODUCTS, id });\n          }}\n          type=\"edit\"\n        />\n      ),\n    },\n    {\n      dataIndex: 'delete',\n      render: (_, { id }) => (\n        <Icon\n          onClick={() => confirm({\n            title: 'delete selected ?',\n            content: 'are you sure you wont to delete selectes',\n            onOk() {\n              deleteProductAction({ id });\n            },\n          })}\n          type=\"delete\"\n        />\n      ),\n    },\n\n  ], [deleteProductAction, editFetchingAction]);\n  return (\n    <div className=\"edit\">\n\n      <Button className='btn'\n        type=\"primary\"\n        disabled={!selectedRows.length}\n        onClick={() => confirm({\n          title: 'delete selected ?',\n          content: 'are you sure to delete selected products',\n          className: 'confirm-mod',\n          onOk() {\n            deleteProductAction({ ids: selectedRows });\n          },\n        })}\n      >\n        Delete\n      </Button>\n      <Table\n        rowSelection={rowSelection}\n        columns={columns}\n        loading={isFetching}\n        dataSource={list}\n        pagination={false}\n      />\n      <Pagination onChange={changePage} current={page} total={pages * 10} />\n\n      <Modal\n        onCancel={() => editFetchingResetAction()}\n        visible={product.isFetching || !!product.data}\n        title=\"Edit\"\n        footer={false}\n        style={{ top: 20 }}\n        className=\"prodMod\"\n        id=\"productEdit\"\n      >\n        {product.isFetching || !product.data ? 'loading'\n\n          : (\n            <EditForm\n              product={product}\n              searchSelectAction={searchSelectAction}\n              searchSelect={searchSelectLists}\n              saveProductEditAction={saveProductEditAction}\n              saveProductImagesAction={saveProductImagesAction}\n              id={product.data.id}\n              showMessageAction={showMessageAction}\n              editProduct={editProduct}\n            />\n          )}\n\n      </Modal>\n    </div>\n  );\n}\n\nProduct.propTypes = {\n  list: PropTypes.arrayOf(Array).isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  pages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  product: PropTypes.objectOf(Object).isRequired,\n  editFetchingAction: PropTypes.func.isRequired,\n  getTableDataAction: PropTypes.func.isRequired,\n  getTableDataResetAction: PropTypes.func.isRequired,\n  saveProductImagesAction: PropTypes.func.isRequired,\n  searchSelectAction: PropTypes.func.isRequired,\n  searchSelectLists: PropTypes.objectOf(Object).isRequired,\n  saveProductEditAction: PropTypes.func.isRequired,\n  editFetchingResetAction: PropTypes.func.isRequired,\n  editProduct: PropTypes.objectOf(Object).isRequired,\n  showMessageAction: PropTypes.func.isRequired,\n  deleteProductAction: PropTypes.func.isRequired,\n  searchResetAction: PropTypes.func.isRequired,\n\n};\n\nconst mapStateToProps = ({\n  tables: {\n    list,\n    isFetching,\n    pages,\n    page,\n  },\n  edit,\n  searchSelect: searchSelectLists,\n  editProduct,\n\n}) => ({\n  list,\n  isFetching,\n  pages,\n  page,\n  product: edit,\n  searchSelectLists,\n  editProduct,\n});\nexport default connect(mapStateToProps, {\n  editFetchingAction: editFetching,\n  getTableDataAction: getTableData,\n  getTableDataResetAction: getTableDataReset,\n  saveProductImagesAction: saveProductImages,\n  searchSelectAction: searchSelect,\n  saveProductEditAction: saveProductEdit,\n  editFetchingResetAction: editFetchingReset,\n  showMessageAction: showMessage,\n  deleteProductAction: deleteProduct,\n  searchResetAction: searchReset,\n})(Product);\n"],"sourceRoot":""}