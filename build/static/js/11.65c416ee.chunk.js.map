{"version":3,"sources":["pages/authorisation/useLogin.js","pages/authorisation/LoginForm.jsx"],"names":["validationSchema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","loading","useSelector","admin","authorization","formik","useFormik","initialValues","rememberMe","onSubmit","values","login","useLoginForm","errors","touched","handleSubmit","handleBlur","handleChange","className","Item","validateStatus","help","value","onChange","onBlur","name","type","placeholder","checked","style","float","htmlType"],"mappings":"mSAMMA,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaE,QAAQC,WAC5BC,SAAUJ,MAAaK,IAAI,GAAGF,a,OCgEjBG,UA/Df,WAAsB,IAAD,EDEN,WACb,IAAMC,EAAWC,cAYjB,MAAO,CACLC,QAZcC,aAAY,qBAAGC,MAASC,cAAiBH,WAavDI,OAXaC,YAAU,CACvBC,cAAe,CACbb,MAAO,GACPE,SAAU,GACVY,YAAY,GAEdjB,mBACAkB,SAAU,SAACC,GAAD,OAAYX,EAASY,YAAMD,QCZXE,GAApBP,EADW,EACXA,OAAQJ,EADG,EACHA,QAEdY,EAMER,EANFQ,OACAH,EAKEL,EALFK,OACAI,EAIET,EAJFS,QACAC,EAGEV,EAHFU,aACAC,EAEEX,EAFFW,WACAC,EACEZ,EADFY,aAEF,OACE,yBAAKC,UAAU,SACb,uBAAMT,SAAUM,EAAcG,UAAU,aACtC,sBAAMC,KAAN,CACEC,eAAgBN,EAAQpB,OAASmB,EAAOnB,OAAS,QACjD2B,KAAMP,EAAQpB,OAASmB,EAAOnB,OAE9B,yBAAKwB,UAAU,YACb,qCAEF,uBACEI,MAAOZ,EAAOhB,MACd6B,SAAUN,EACVO,OAAQR,EACRS,KAAK,QACLC,KAAK,QACLC,YAAY,WAGhB,sBAAMR,KAAN,CACEC,eAAgBN,EAAQlB,UAAYiB,EAAOjB,UAAY,QACvDyB,KAAMP,EAAQlB,UAAYiB,EAAOjB,UAEjC,yBAAKsB,UAAU,YACb,wCAEF,uBACEA,UAAU,MACVI,MAAOZ,EAAOd,SACd2B,SAAUN,EACVO,OAAQR,EACRS,KAAK,WACLC,KAAK,WACLC,YAAY,cAGhB,sBAAMR,KAAN,KACE,uBACEM,KAAK,aACLG,SAAUlB,EAAOF,WACjBe,SAAUN,EACVY,MAAO,CAAEC,MAAO,SAJlB,gBASD7B,EAAU,4BAAW,uBAAQ8B,SAAS,SAASb,UAAU,YAApC","file":"static/js/11.65c416ee.chunk.js","sourcesContent":["import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/admin/action';\n\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(6).required(),\n});\n\nexport default function useLogin() {\n  const dispatch = useDispatch();\n  const loading = useSelector(({ admin: { authorization: { loading: _loaing } } }) => _loaing);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: false,\n    },\n    validationSchema,\n    onSubmit: (values) => dispatch(login(values)),\n  });\n  return {\n    loading,\n    formik,\n  };\n}\n","import React from 'react';\nimport {\n  Button, Spin, Input, Form, Checkbox,\n} from 'antd';\n\nimport useLoginForm from './useLogin';\nimport './login.less';\n\n\nfunction LoginForm() {\n  const { formik, loading } = useLoginForm();\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n  } = formik;\n  return (\n    <div className=\"login\">\n      <Form onSubmit={handleSubmit} className=\"loginForm\">\n        <Form.Item\n          validateStatus={touched.email && errors.email && 'error'}\n          help={touched.email && errors.email}\n        >\n          <div className=\"logTitle\">\n            <p>Login</p>\n          </div>\n          <Input\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n          />\n        </Form.Item>\n        <Form.Item\n          validateStatus={touched.password && errors.password && 'error'}\n          help={touched.password && errors.password}\n        >\n          <div className=\"logTitle\">\n            <p>Password</p>\n          </div>\n          <Input\n            className=\"inp\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Checkbox\n            name=\"rememberMe\"\n            checked={+values.rememberMe}\n            onChange={handleChange}\n            style={{ float: 'left' }}\n          >\n            Remember me\n          </Checkbox>\n        </Form.Item>\n        {loading ? <Spin /> : <Button htmlType=\"submit\" className=\"loginBtn\">Login</Button>}\n\n      </Form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n"],"sourceRoot":""}